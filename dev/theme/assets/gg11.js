/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _ggToggle = __webpack_require__(1);\n\nvar _ggToggle2 = _interopRequireDefault(_ggToggle);\n\nvar _ggRipple = __webpack_require__(3);\n\nvar _ggRipple2 = _interopRequireDefault(_ggRipple);\n\nvar _ggAppbar = __webpack_require__(5);\n\nvar _ggAppbar2 = _interopRequireDefault(_ggAppbar);\n\nvar _ggDrawer = __webpack_require__(6);\n\nvar _ggDrawer2 = _interopRequireDefault(_ggDrawer);\n\nvar _ggHeader = __webpack_require__(30);\n\nvar _ggHeader2 = _interopRequireDefault(_ggHeader);\n\nvar _ggSearchbar = __webpack_require__(31);\n\nvar _ggSearchbar2 = _interopRequireDefault(_ggSearchbar);\n\nvar _ggCards = __webpack_require__(32);\n\nvar _ggCards2 = _interopRequireDefault(_ggCards);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n__webpack_require__(40);\n\n(0, _ggToggle2.default)();\n\n(0, _ggRipple2.default)();\n\n(0, _ggAppbar2.default)();\n\n(0, _ggDrawer2.default)();\n\n(0, _ggHeader2.default)();\n\n(0, _ggSearchbar2.default)();\n\n(0, _ggCards2.default)();//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXYvanMvaW5kZXguanM/ZmQ3OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFRLEVBQVI7O0FBR0E7O0FBR0E7O0FBSUE7O0FBR0E7O0FBR0E7O0FBR0E7O0FBR0EiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4uL3Njc3MvZ2cxMS5zY3NzJyk7XHJcblxyXG5pbXBvcnQgZ2dUb2dnbGUgZnJvbSAnLi9wbHVnaW5zL2dnLXRvZ2dsZSc7XHJcbmdnVG9nZ2xlKCk7XHJcblxyXG5pbXBvcnQgZ2dSaXBwbGUgZnJvbSAnLi9wbHVnaW5zL2dnLXJpcHBsZSc7XHJcbmdnUmlwcGxlKCk7XHJcblxyXG5cclxuaW1wb3J0IGdnQXBwYmFyIGZyb20gJy4vY29tcG9uZW50cy9nZy1hcHBiYXInO1xyXG5nZ0FwcGJhcigpO1xyXG5cclxuaW1wb3J0IGdnRHJhd2VyIGZyb20gJy4vY29tcG9uZW50cy9nZy1kcmF3ZXInO1xyXG5nZ0RyYXdlcigpO1xyXG5cclxuaW1wb3J0IGdnSGVhZGVyIGZyb20gJy4vY29tcG9uZW50cy9nZy1oZWFkZXInO1xyXG5nZ0hlYWRlcigpO1xyXG5cclxuaW1wb3J0IGdnU2VhcmNoYmFyIGZyb20gJy4vY29tcG9uZW50cy9nZy1zZWFyY2hiYXInO1xyXG5nZ1NlYXJjaGJhcigpO1xyXG5cclxuaW1wb3J0IGdnQ2FyZHMgZnJvbSAnLi9jb21wb25lbnRzL2dnLWNhcmRzJztcclxuZ2dDYXJkcygpO1xyXG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL2Rldi9qcy9pbmRleC5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n\n  _jquery2.default.fn.ggToggle = function (action) {\n    if (typeof action === 'undefined') {\n      this.toggleClass(IS_VISIBLE);\n    } else if (action === 'show') {\n      this.addClass(IS_VISIBLE);\n    } else if (action === 'hide') {\n      this.removeClass(IS_VISIBLE);\n    }\n    return this;\n  };\n\n  _jquery2.default.fn.ggCloseOutside = function (excluded, event) {\n    if (this.hasClass(IS_VISIBLE) && !this.is(event.target) && this.has(event.target).length === 0) {\n\n      if (_jquery2.default.isArray(excluded)) {\n        for (var i = 0, len = excluded.length; i < len; i++) {\n          if (excluded[i].is(event.target) || excluded[i].has(event.target).length !== 0) {\n            return this;\n          }\n        }\n      }\n      this.removeClass(IS_VISIBLE);\n    }\n    return this;\n  };\n};\n\nvar _jquery = __webpack_require__(2);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar IS_VISIBLE = 'is-visible';//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXYvanMvcGx1Z2lucy9nZy10b2dnbGUuanM/ZTQ3ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBSWUsWUFBWTs7QUFFekIsbUJBQUUsRUFBRixDQUFLLFFBQUwsR0FBZ0IsVUFBVSxNQUFWLEVBQWtCO0FBQ2hDLFFBQUksT0FBTyxNQUFQLEtBQWtCLFdBQWxCLEVBQStCO0FBQ2pDLFdBQUssV0FBTCxDQUFpQixVQUFqQixFQURpQztLQUFuQyxNQUdLLElBQUksV0FBVyxNQUFYLEVBQW1CO0FBQzFCLFdBQUssUUFBTCxDQUFjLFVBQWQsRUFEMEI7S0FBdkIsTUFHQSxJQUFJLFdBQVcsTUFBWCxFQUFtQjtBQUMxQixXQUFLLFdBQUwsQ0FBaUIsVUFBakIsRUFEMEI7S0FBdkI7QUFHTCxXQUFPLElBQVAsQ0FWZ0M7R0FBbEIsQ0FGUzs7QUFlekIsbUJBQUUsRUFBRixDQUFLLGNBQUwsR0FBc0IsVUFBVSxRQUFWLEVBQW9CLEtBQXBCLEVBQTJCO0FBQy9DLFFBQ0UsS0FBSyxRQUFMLENBQWMsVUFBZCxLQUNBLENBQUMsS0FBSyxFQUFMLENBQVEsTUFBTSxNQUFOLENBQVQsSUFDQSxLQUFLLEdBQUwsQ0FBUyxNQUFNLE1BQU4sQ0FBVCxDQUF1QixNQUF2QixLQUFrQyxDQUFsQyxFQUNBOztBQUVBLFVBQUksaUJBQUUsT0FBRixDQUFVLFFBQVYsQ0FBSixFQUF5QjtBQUN2QixhQUFLLElBQUksSUFBSSxDQUFKLEVBQU8sTUFBTSxTQUFTLE1BQVQsRUFBaUIsSUFBSSxHQUFKLEVBQVMsR0FBaEQsRUFBcUQ7QUFDbkQsY0FDRSxTQUFTLENBQVQsRUFBWSxFQUFaLENBQWUsTUFBTSxNQUFOLENBQWYsSUFDQSxTQUFTLENBQVQsRUFBWSxHQUFaLENBQWdCLE1BQU0sTUFBTixDQUFoQixDQUE4QixNQUE5QixLQUF5QyxDQUF6QyxFQUNBO0FBQ0EsbUJBQU8sSUFBUCxDQURBO1dBSEY7U0FERjtPQURGO0FBVUEsV0FBSyxXQUFMLENBQWlCLFVBQWpCLEVBWkE7S0FKRjtBQWtCQSxXQUFPLElBQVAsQ0FuQitDO0dBQTNCLENBZkc7Q0FBWjs7Ozs7Ozs7QUFGZixJQUFNLGFBQWEsWUFBYiIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcclxuXHJcbmNvbnN0IElTX1ZJU0lCTEUgPSAnaXMtdmlzaWJsZSc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICQuZm4uZ2dUb2dnbGUgPSBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICBpZiAodHlwZW9mIGFjdGlvbiA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgdGhpcy50b2dnbGVDbGFzcyhJU19WSVNJQkxFKTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKGFjdGlvbiA9PT0gJ3Nob3cnKSB7XHJcbiAgICAgIHRoaXMuYWRkQ2xhc3MoSVNfVklTSUJMRSk7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChhY3Rpb24gPT09ICdoaWRlJykge1xyXG4gICAgICB0aGlzLnJlbW92ZUNsYXNzKElTX1ZJU0lCTEUpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfTtcclxuXHJcbiAgJC5mbi5nZ0Nsb3NlT3V0c2lkZSA9IGZ1bmN0aW9uIChleGNsdWRlZCwgZXZlbnQpIHtcclxuICAgIGlmIChcclxuICAgICAgdGhpcy5oYXNDbGFzcyhJU19WSVNJQkxFKSAmJlxyXG4gICAgICAhdGhpcy5pcyhldmVudC50YXJnZXQpICYmXHJcbiAgICAgIHRoaXMuaGFzKGV2ZW50LnRhcmdldCkubGVuZ3RoID09PSAwXHJcbiAgICApIHtcclxuXHJcbiAgICAgIGlmICgkLmlzQXJyYXkoZXhjbHVkZWQpKSB7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGV4Y2x1ZGVkLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XHJcbiAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgIGV4Y2x1ZGVkW2ldLmlzKGV2ZW50LnRhcmdldCkgfHxcclxuICAgICAgICAgICAgZXhjbHVkZWRbaV0uaGFzKGV2ZW50LnRhcmdldCkubGVuZ3RoICE9PSAwXHJcbiAgICAgICAgICApIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHRoaXMucmVtb3ZlQ2xhc3MoSVNfVklTSUJMRSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9O1xyXG5cclxufVxyXG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL2Rldi9qcy9wbHVnaW5zL2dnLXRvZ2dsZS5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v2.2.0\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-01-08T20:02Z\n */\n\n(function( global, factory ) {\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\"use strict\";\nvar arr = [];\n\nvar document = window.document;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\tversion = \"2.2.0\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type( obj ) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\n\t\tvar realStringObj = obj && obj.toString();\n\t\treturn !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;\n\t},\n\n\tisPlainObject: function( obj ) {\n\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype, \"isPrototypeOf\" ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If the function hasn't returned already, we're confident that\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\n\t\treturn true;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf( \"use strict\" ) === 1 ) {\n\t\t\t\tscript = document.createElement( \"script\" );\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t\t// and removal by using an indirect global eval\n\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE9-11+\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\n// JSHint would error on this code due to the Symbol not being defined in ES5.\n// Defining this global in .jshintrc would create a danger of using the global\n// unguarded in another place, it seems safer to just disable JSHint for these\n// three lines.\n/* jshint ignore: start */\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n/* jshint ignore: end */\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: iOS 8.2 (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.2.1\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2015-10-17\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// http://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, nidselect, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rescape, \"\\\\$&\" );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\tnidselect = ridentifier.test( nid ) ? \"#\" + nid : \"[id='\" + nid + \"']\";\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = nidselect + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, parent,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( (parent = document.defaultView) && parent.top !== parent ) {\n\t\t// Support: IE 11\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( document.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\treturn m ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( (oldCache = uniqueCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = ( /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/ );\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t} );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tlen = this.length,\n\t\t\tret = [],\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\t// Support: Blackberry 4.6\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && ( pos ?\n\t\t\t\t\tpos.index( cur ) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnotwhite = ( /\\S+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ) ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis === promise ? newDefer.promise() : this,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add( function() {\n\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 ||\n\t\t\t\t( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred.\n\t\t\t// If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) )\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n} );\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n} );\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called\n\t\t// after the browser event has already occurred.\n\t\t// Support: IE9-10 only\n\t\t// Older IE sometimes signals \"interactive\" too soon\n\t\tif ( document.readyState === \"complete\" ||\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\twindow.setTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\n};\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\t/* jshint -W018 */\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tregister: function( owner, initial ) {\n\t\tvar value = initial || {};\n\n\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t// use plain assignment\n\t\tif ( owner.nodeType ) {\n\t\t\towner[ this.expando ] = value;\n\n\t\t// Otherwise secure it in a non-enumerable, non-writable property\n\t\t// configurability must be true to allow the property to be\n\t\t// deleted with the delete operator\n\t\t} else {\n\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\tvalue: value,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t} );\n\t\t}\n\t\treturn owner[ this.expando ];\n\t},\n\tcache: function( owner ) {\n\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return an empty object.\n\t\tif ( !acceptData( owner ) ) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\t\t\towner[ this.expando ] && owner[ this.expando ][ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase( key ) );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.register( owner );\n\n\t\t} else {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <= 35-45+\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=378607\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data, camelKey;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = dataUser.get( elem, key ) ||\n\n\t\t\t\t\t// Try to find dashed key if it exists (gh-2779)\n\t\t\t\t\t// This is for 2.2.x only\n\t\t\t\t\tdataUser.get( elem, key.replace( rmultiDash, \"-$&\" ).toLowerCase() );\n\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = dataUser.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tcamelKey = jQuery.camelCase( key );\n\t\t\tthis.each( function() {\n\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = dataUser.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdataUser.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf( \"-\" ) > -1 && data !== undefined ) {\n\t\t\t\t\tdataUser.set( this, key, value );\n\t\t\t\t}\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" ||\n\t\t\t!jQuery.contains( elem.ownerDocument, elem );\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted,\n\t\tscale = 1,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() { return tween.cur(); } :\n\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\tdo {\n\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\tscale = scale || \".5\";\n\n\t\t\t// Adjust and apply\n\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t} while (\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t);\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([\\w:-]+)/ );\n\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE9\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE9-11+\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret = typeof context.getElementsByTagName !== \"undefined\" ?\n\t\t\tcontext.getElementsByTagName( tag || \"*\" ) :\n\t\t\ttypeof context.querySelectorAll !== \"undefined\" ?\n\t\t\t\tcontext.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0-4.3, Safari<=5.1\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Safari<=5.1, Android<4.2\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE<=11+\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE9\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn this;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Support (at least): Chrome, IE9\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t//\n\t\t// Support: Firefox<=42+\n\t\t// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\n\t\tif ( delegateCount && cur.nodeType &&\n\t\t\t( event.type !== \"click\" || isNaN( event.button ) || event.button < 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== \"click\" ) ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matches } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: ( \"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \" +\n\t\t\"metaKey relatedTarget shiftKey target timeStamp view which\" ).split( \" \" ),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split( \" \" ),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: ( \"button buttons clientX clientY offsetX offsetY pageX pageY \" +\n\t\t\t\"screenX screenY toElement\" ).split( \" \" ),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX +\n\t\t\t\t\t( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -\n\t\t\t\t\t( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY +\n\t\t\t\t\t( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -\n\t\t\t\t\t( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome<28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android<4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://code.google.com/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\n\n\t// Support: IE 10-11, Edge 10240+\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\nfunction manipulationTarget( elem, content ) {\n\tif ( jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn elem.getElementsByTagName( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tisFunction = jQuery.isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( isFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( isFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\n\t// Keep domManip exposed until 3.0 (gh-2225)\n\tdomManip: domManip,\n\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because push.apply(_, arraylike) throws\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\n\n\nvar iframe,\n\telemdisplay = {\n\n\t\t// Support: Firefox\n\t\t// We have to pre-define these values for FF (#10227)\n\t\tHTML: \"block\",\n\t\tBODY: \"block\"\n\t};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\tdisplay = jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = ( iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" ) )\n\t\t\t\t.appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\nvar rmargin = ( /^margin/ );\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar documentElement = document.documentElement;\n\n\n\n( function() {\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE9-11+\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\n\t\t\"padding:0;margin-top:1px;position:absolute\";\n\tcontainer.appendChild( div );\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\t\tdiv.style.cssText =\n\n\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;\" +\n\t\t\t\"position:relative;display:block;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"top:1%;width:50%\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocumentElement.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\t// Support: Android 4.0 - 4.3 only\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.marginRight = \"50%\";\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\n\n\t\tdocumentElement.removeChild( container );\n\t}\n\n\tjQuery.extend( support, {\n\t\tpixelPosition: function() {\n\n\t\t\t// This test is executed only once but we still do memoizing\n\t\t\t// since we can use the boxSizingReliable pre-computing.\n\t\t\t// No need to check if the test was already performed, though.\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\tboxSizingReliable: function() {\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelMarginRight: function() {\n\n\t\t\t// Support: Android 4.0-4.3\n\t\t\t// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\n\t\t\t// since that compresses better and they're computed together anyway.\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn pixelMarginRightVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\n\t\t\t// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\treliableMarginRight: function() {\n\n\t\t\t// Support: Android 2.3\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t// This support function is only executed once so no memoizing is needed.\n\t\t\tvar ret,\n\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\tmarginDiv.style.cssText = div.style.cssText =\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\"-webkit-box-sizing:content-box;box-sizing:content-box;\" +\n\t\t\t\t\"display:block;margin:0;border:0;padding:0\";\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\tdiv.style.width = \"1px\";\n\t\t\tdocumentElement.appendChild( container );\n\n\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );\n\n\t\t\tdocumentElement.removeChild( container );\n\t\t\tdiv.removeChild( marginDiv );\n\n\t\t\treturn ret;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// Support: IE9\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE9-11+\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Support: IE11 only\n\t// In IE 11 fullscreen elements inside of an iframe have\n\t// 100x too small dimensions (gh-1764).\n\tif ( document.msFullscreenElement && window.top !== window ) {\n\n\t\t// Support: IE11 only\n\t\t// Running getBoundingClientRect on a disconnected node\n\t\t// in IE throws an error.\n\t\tif ( elem.getClientRects().length ) {\n\t\t\tval = Math.round( elem.getBoundingClientRect()[ name ] * 100 );\n\t\t}\n\t}\n\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test( val ) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = dataPriv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = dataPriv.access(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\tdefaultDisplay( elem.nodeName )\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display !== \"none\" || !hidden ) {\n\t\t\t\tdataPriv.set(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\thidden ? display : jQuery.css( elem, \"display\" )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\t\t\t\t\telem.offsetWidth === 0 ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = extra && getStyles( elem ),\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ name ] = value;\n\t\t\t\tvalue = jQuery.css( elem, name );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// Support: Android 2.3\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tdataPriv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show\n\t\t\t\t// and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done( function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t} );\n\t\t}\n\t\tanim.done( function() {\n\t\t\tvar prop;\n\n\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t} );\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( ( display === \"none\" ? defaultDisplay( elem.nodeName ) : display ) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tjQuery.proxy( result.stop, result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnotwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ?\n\t\topt.duration : opt.duration in jQuery.fx.speeds ?\n\t\t\tjQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\twindow.clearInterval( timerId );\n\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: iOS<=5.1, Android<=4.2+\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE<=11+\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: Android<=2.3\n\t// Options inside disabled selects are incorrectly marked as disabled\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Support: IE<=11+\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle;\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ name ];\n\t\t\tattrHandle[ name ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tname.toLowerCase() :\n\t\t\t\tnull;\n\t\t\tattrHandle[ name ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\treturn tabindex ?\n\t\t\t\t\tparseInt( tabindex, 10 ) :\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href ?\n\t\t\t\t\t\t\t0 :\n\t\t\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( type === \"string\" ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + getClass( elem ) + \" \" ).replace( rclass, \" \" )\n\t\t\t\t\t.indexOf( className ) > -1\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\n\t\t\t\t\t// Handle most common string cases\n\t\t\t\t\tret.replace( rreturn, \"\" ) :\n\n\t\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE<11\n\t\t\t\t// option.value not trimmed (#14858)\n\t\t\t\treturn jQuery.trim( elem.value );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ?\n\t\t\t\t\t\t\t\t!option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\n\t\t\t\t// Previously, `originalEvent: {}` was set here, so stopPropagation call\n\t\t\t\t// would not be triggered on donor event, since in our own\n\t\t\t\t// jQuery.event.stopPropagation function we had a check for existence of\n\t\t\t\t// originalEvent.stopPropagation method, so, consequently it would be a noop.\n\t\t\t\t//\n\t\t\t\t// But now, this \"simulate\" function is used only for events\n\t\t\t\t// for which stopPropagation() is noop, so there is no need for that anymore.\n\t\t\t\t//\n\t\t\t\t// For the compat branch though, guard for \"click\" and \"submit\"\n\t\t\t\t// events is still used, but was moved to jQuery.event.stopPropagation function\n\t\t\t\t// because `originalEvent` should point to the original event for the constancy\n\t\t\t\t// with other events and for more focused logic\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\n\t\tif ( e.isDefaultPrevented() ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\n// Support: Firefox\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome, Safari\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = jQuery.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON = function( data ) {\n\treturn JSON.parse( data + \"\" );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE9\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE8-11+\n\t\t\t// IE throws exception if url is malformed, e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE8-11+\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each( function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t} ).end();\n\t}\n} );\n\n\njQuery.expr.filters.hidden = function( elem ) {\n\treturn !jQuery.expr.filters.visible( elem );\n};\njQuery.expr.filters.visible = function( elem ) {\n\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\t// Use OR instead of AND as the element is not visible if either is true\n\t// See tickets #10406 and #13132\n\treturn elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t} ) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\n\n\t\t\t\t// Support: IE9\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8+\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\t// Stop scripts or inline event handlers from being executed immediately\n\t// by using document.implementation\n\tcontext = context || ( support.createHTMLDocument ?\n\t\tdocument.implementation.createHTMLDocument( \"\" ) :\n\t\tdocument );\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( self, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\telem = this[ 0 ],\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\tbox = elem.getBoundingClientRect();\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n\t\t// because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\t// Subtract offsetParent scroll positions\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true ) -\n\t\t\t\toffsetParent.scrollTop();\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true ) -\n\t\t\t\toffsetParent.scrollLeft();\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari<7-8+, Chrome<37-44+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t} );\n} );\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\tsize: function() {\n\t\treturn this.length;\n\t}\n} );\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( true ) {\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\treturn jQuery;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\nreturn jQuery;\n}));\n//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n  _nodeWaves2.default.attach('.gg-appbar-icon', ['waves-circle', 'waves-light']);\n  _nodeWaves2.default.attach('.gg-icon-flat, .gg-searchbar-icon', ['waves-circle']);\n  _nodeWaves2.default.attach('.gg-icon-flat-light', ['waves-circle', 'waves-light']);\n  _nodeWaves2.default.attach('.gg-appbar-menu ul li a, .gg-drawer ul li a, .gg-card-addon-list ul li a');\n  _nodeWaves2.default.attach('.gg-button-flat', ['waves-button']);\n  _nodeWaves2.default.attach('.gg-button-flat-light', ['waves-button', 'waves-light']);\n  _nodeWaves2.default.init();\n};\n\nvar _nodeWaves = __webpack_require__(4);\n\nvar _nodeWaves2 = _interopRequireDefault(_nodeWaves);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXYvanMvcGx1Z2lucy9nZy1yaXBwbGUuanM/ODdlZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBRWUsWUFBWTtBQUN6QixzQkFBTSxNQUFOLENBQWEsaUJBQWIsRUFBZ0MsQ0FBQyxjQUFELEVBQWlCLGFBQWpCLENBQWhDLEVBRHlCO0FBRXpCLHNCQUFNLE1BQU4sQ0FBYSxtQ0FBYixFQUFrRCxDQUFDLGNBQUQsQ0FBbEQsRUFGeUI7QUFHekIsc0JBQU0sTUFBTixDQUFhLHFCQUFiLEVBQW9DLENBQUMsY0FBRCxFQUFpQixhQUFqQixDQUFwQyxFQUh5QjtBQUl6QixzQkFBTSxNQUFOLENBQWEsMEVBQWIsRUFKeUI7QUFLekIsc0JBQU0sTUFBTixDQUFhLGlCQUFiLEVBQWdDLENBQUMsY0FBRCxDQUFoQyxFQUx5QjtBQU16QixzQkFBTSxNQUFOLENBQWEsdUJBQWIsRUFBc0MsQ0FBQyxjQUFELEVBQWlCLGFBQWpCLENBQXRDLEVBTnlCO0FBT3pCLHNCQUFNLElBQU4sR0FQeUI7Q0FBWiIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFdhdmVzIGZyb20gJ25vZGUtd2F2ZXMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKCkge1xyXG4gIFdhdmVzLmF0dGFjaCgnLmdnLWFwcGJhci1pY29uJywgWyd3YXZlcy1jaXJjbGUnLCAnd2F2ZXMtbGlnaHQnXSk7XHJcbiAgV2F2ZXMuYXR0YWNoKCcuZ2ctaWNvbi1mbGF0LCAuZ2ctc2VhcmNoYmFyLWljb24nLCBbJ3dhdmVzLWNpcmNsZSddKTtcclxuICBXYXZlcy5hdHRhY2goJy5nZy1pY29uLWZsYXQtbGlnaHQnLCBbJ3dhdmVzLWNpcmNsZScsICd3YXZlcy1saWdodCddKTtcclxuICBXYXZlcy5hdHRhY2goJy5nZy1hcHBiYXItbWVudSB1bCBsaSBhLCAuZ2ctZHJhd2VyIHVsIGxpIGEsIC5nZy1jYXJkLWFkZG9uLWxpc3QgdWwgbGkgYScpO1xyXG4gIFdhdmVzLmF0dGFjaCgnLmdnLWJ1dHRvbi1mbGF0JywgWyd3YXZlcy1idXR0b24nXSk7XHJcbiAgV2F2ZXMuYXR0YWNoKCcuZ2ctYnV0dG9uLWZsYXQtbGlnaHQnLCBbJ3dhdmVzLWJ1dHRvbicsICd3YXZlcy1saWdodCddKTtcclxuICBXYXZlcy5pbml0KCk7XHJcbn1cclxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9kZXYvanMvcGx1Z2lucy9nZy1yaXBwbGUuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global) {/*!\r\n * Waves v0.7.4\r\n * http://fian.my.id/Waves\r\n *\r\n * Copyright 2014 Alfiana E. Sibuea and other contributors\r\n * Released under the MIT license\r\n * https://github.com/fians/Waves/blob/master/LICENSE\r\n */\r\n\r\n;(function(window, factory) {\r\n    'use strict';\r\n\r\n    // AMD. Register as an anonymous module.  Wrap in function so we have access\r\n    // to root via `this`.\r\n    if (true) {\r\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\r\n            return factory.apply(window);\r\n        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    }\r\n\r\n    // Node. Does not work with strict CommonJS, but only CommonJS-like\r\n    // environments that support module.exports, like Node.\r\n    else if (typeof exports === 'object') {\r\n        module.exports = factory.call(window);\r\n    }\r\n\r\n    // Browser globals.\r\n    else {\r\n        window.Waves = factory.call(window);\r\n    }\r\n})(typeof global === 'object' ? global : this, function() {\r\n    'use strict';\r\n\r\n    var Waves            = Waves || {};\r\n    var $$               = document.querySelectorAll.bind(document);\r\n    var toString         = Object.prototype.toString;\r\n    var isTouchAvailable = 'ontouchstart' in window;\r\n\r\n\r\n    // Find exact position of element\r\n    function isWindow(obj) {\r\n        return obj !== null && obj === obj.window;\r\n    }\r\n\r\n    function getWindow(elem) {\r\n        return isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView;\r\n    }\r\n\r\n    function isObject(value) {\r\n        var type = typeof value;\r\n        return type === 'function' || type === 'object' && !!value;\r\n    }\r\n\r\n    function isDOMNode(obj) {\r\n        return isObject(obj) && obj.nodeType > 0;\r\n    }\r\n\r\n    function getWavesElements(nodes) {\r\n        var stringRepr = toString.call(nodes);\r\n\r\n        if (stringRepr === '[object String]') {\r\n            return $$(nodes);\r\n        } else if (isObject(nodes) && /^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(stringRepr) && nodes.hasOwnProperty('length')) {\r\n            return nodes;\r\n        } else if (isDOMNode(nodes)) {\r\n            return [nodes];\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    function offset(elem) {\r\n        var docElem, win,\r\n            box = { top: 0, left: 0 },\r\n            doc = elem && elem.ownerDocument;\r\n\r\n        docElem = doc.documentElement;\r\n\r\n        if (typeof elem.getBoundingClientRect !== typeof undefined) {\r\n            box = elem.getBoundingClientRect();\r\n        }\r\n        win = getWindow(doc);\r\n        return {\r\n            top: box.top + win.pageYOffset - docElem.clientTop,\r\n            left: box.left + win.pageXOffset - docElem.clientLeft\r\n        };\r\n    }\r\n\r\n    function convertStyle(styleObj) {\r\n        var style = '';\r\n\r\n        for (var prop in styleObj) {\r\n            if (styleObj.hasOwnProperty(prop)) {\r\n                style += (prop + ':' + styleObj[prop] + ';');\r\n            }\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    var Effect = {\r\n\r\n        // Effect duration\r\n        duration: 750,\r\n\r\n        // Effect delay (check for scroll before showing effect)\r\n        delay: 200,\r\n\r\n        show: function(e, element, velocity) {\r\n\r\n            // Disable right click\r\n            if (e.button === 2) {\r\n                return false;\r\n            }\r\n\r\n            element = element || this;\r\n\r\n            // Create ripple\r\n            var ripple = document.createElement('div');\r\n            ripple.className = 'waves-ripple waves-rippling';\r\n            element.appendChild(ripple);\r\n\r\n            // Get click coordinate and element width\r\n            var pos       = offset(element);\r\n            var relativeY = 0;\r\n            var relativeX = 0;\r\n            // Support for touch devices\r\n            if('touches' in e && e.touches.length) {\r\n                relativeY   = (e.touches[0].pageY - pos.top);\r\n                relativeX   = (e.touches[0].pageX - pos.left);\r\n            }\r\n            //Normal case\r\n            else {\r\n                relativeY   = (e.pageY - pos.top);\r\n                relativeX   = (e.pageX - pos.left);\r\n            }\r\n            // Support for synthetic events\r\n            relativeX = relativeX >= 0 ? relativeX : 0;\r\n            relativeY = relativeY >= 0 ? relativeY : 0;\r\n\r\n            var scale     = 'scale(' + ((element.clientWidth / 100) * 3) + ')';\r\n            var translate = 'translate(0,0)';\r\n\r\n            if (velocity) {\r\n                translate = 'translate(' + (velocity.x) + 'px, ' + (velocity.y) + 'px)';\r\n            }\r\n\r\n            // Attach data to element\r\n            ripple.setAttribute('data-hold', Date.now());\r\n            ripple.setAttribute('data-x', relativeX);\r\n            ripple.setAttribute('data-y', relativeY);\r\n            ripple.setAttribute('data-scale', scale);\r\n            ripple.setAttribute('data-translate', translate);\r\n\r\n            // Set ripple position\r\n            var rippleStyle = {\r\n                top: relativeY + 'px',\r\n                left: relativeX + 'px'\r\n            };\r\n\r\n            ripple.classList.add('waves-notransition');\r\n            ripple.setAttribute('style', convertStyle(rippleStyle));\r\n            ripple.classList.remove('waves-notransition');\r\n\r\n            // Scale the ripple\r\n            rippleStyle['-webkit-transform'] = scale + ' ' + translate;\r\n            rippleStyle['-moz-transform'] = scale + ' ' + translate;\r\n            rippleStyle['-ms-transform'] = scale + ' ' + translate;\r\n            rippleStyle['-o-transform'] = scale + ' ' + translate;\r\n            rippleStyle.transform = scale + ' ' + translate;\r\n            rippleStyle.opacity = '1';\r\n\r\n            var duration = e.type === 'mousemove' ? 2500 : Effect.duration;\r\n            rippleStyle['-webkit-transition-duration'] = duration + 'ms';\r\n            rippleStyle['-moz-transition-duration']    = duration + 'ms';\r\n            rippleStyle['-o-transition-duration']      = duration + 'ms';\r\n            rippleStyle['transition-duration']         = duration + 'ms';\r\n\r\n            ripple.setAttribute('style', convertStyle(rippleStyle));\r\n        },\r\n\r\n        hide: function(e, element) {\r\n            element = element || this;\r\n\r\n            var ripples = element.getElementsByClassName('waves-rippling');\r\n\r\n            for (var i = 0, len = ripples.length; i < len; i++) {\r\n                removeRipple(e, element, ripples[i]);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Collection of wrapper for HTML element that only have single tag\r\n     * like <input> and <img>\r\n     */\r\n    var TagWrapper = {\r\n\r\n        // Wrap <input> tag so it can perform the effect\r\n        input: function(element) {\r\n\r\n            var parent = element.parentNode;\r\n\r\n            // If input already have parent just pass through\r\n            if (parent.tagName.toLowerCase() === 'i' && parent.classList.contains('waves-effect')) {\r\n                return;\r\n            }\r\n\r\n            // Put element class and style to the specified parent\r\n            var wrapper       = document.createElement('i');\r\n            wrapper.className = element.className + ' waves-input-wrapper';\r\n            element.className = 'waves-button-input';\r\n\r\n            // Put element as child\r\n            parent.replaceChild(wrapper, element);\r\n            wrapper.appendChild(element);\r\n\r\n            // Apply element color and background color to wrapper\r\n            var elementStyle    = window.getComputedStyle(element, null);\r\n            var color           = elementStyle.color;\r\n            var backgroundColor = elementStyle.backgroundColor;\r\n\r\n            wrapper.setAttribute('style', 'color:' + color + ';background:' + backgroundColor);\r\n            element.setAttribute('style', 'background-color:rgba(0,0,0,0);');\r\n\r\n        },\r\n\r\n        // Wrap <img> tag so it can perform the effect\r\n        img: function(element) {\r\n\r\n            var parent = element.parentNode;\r\n\r\n            // If input already have parent just pass through\r\n            if (parent.tagName.toLowerCase() === 'i' && parent.classList.contains('waves-effect')) {\r\n                return;\r\n            }\r\n\r\n            // Put element as child\r\n            var wrapper  = document.createElement('i');\r\n            parent.replaceChild(wrapper, element);\r\n            wrapper.appendChild(element);\r\n\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Hide the effect and remove the ripple. Must be\r\n     * a separate function to pass the JSLint...\r\n     */\r\n    function removeRipple(e, el, ripple) {\r\n\r\n        // Check if the ripple still exist\r\n        if (!ripple) {\r\n            return;\r\n        }\r\n\r\n        ripple.classList.remove('waves-rippling');\r\n\r\n        var relativeX = ripple.getAttribute('data-x');\r\n        var relativeY = ripple.getAttribute('data-y');\r\n        var scale     = ripple.getAttribute('data-scale');\r\n        var translate = ripple.getAttribute('data-translate');\r\n\r\n        // Get delay beetween mousedown and mouse leave\r\n        var diff = Date.now() - Number(ripple.getAttribute('data-hold'));\r\n        var delay = 350 - diff;\r\n\r\n        if (delay < 0) {\r\n            delay = 0;\r\n        }\r\n\r\n        if (e.type === 'mousemove') {\r\n            delay = 150;\r\n        }\r\n\r\n        // Fade out ripple after delay\r\n        var duration = e.type === 'mousemove' ? 2500 : Effect.duration;\r\n\r\n        setTimeout(function() {\r\n\r\n            var style = {\r\n                top: relativeY + 'px',\r\n                left: relativeX + 'px',\r\n                opacity: '0',\r\n\r\n                // Duration\r\n                '-webkit-transition-duration': duration + 'ms',\r\n                '-moz-transition-duration': duration + 'ms',\r\n                '-o-transition-duration': duration + 'ms',\r\n                'transition-duration': duration + 'ms',\r\n                '-webkit-transform': scale + ' ' + translate,\r\n                '-moz-transform': scale + ' ' + translate,\r\n                '-ms-transform': scale + ' ' + translate,\r\n                '-o-transform': scale + ' ' + translate,\r\n                'transform': scale + ' ' + translate\r\n            };\r\n\r\n            ripple.setAttribute('style', convertStyle(style));\r\n\r\n            setTimeout(function() {\r\n                try {\r\n                    el.removeChild(ripple);\r\n                } catch (e) {\r\n                    return false;\r\n                }\r\n            }, duration);\r\n\r\n        }, delay);\r\n    }\r\n\r\n\r\n    /**\r\n     * Disable mousedown event for 500ms during and after touch\r\n     */\r\n    var TouchHandler = {\r\n\r\n        /* uses an integer rather than bool so there's no issues with\r\n         * needing to clear timeouts if another touch event occurred\r\n         * within the 500ms. Cannot mouseup between touchstart and\r\n         * touchend, nor in the 500ms after touchend. */\r\n        touches: 0,\r\n\r\n        allowEvent: function(e) {\r\n\r\n            var allow = true;\r\n\r\n            if (/^(mousedown|mousemove)$/.test(e.type) && TouchHandler.touches) {\r\n                allow = false;\r\n            }\r\n\r\n            return allow;\r\n        },\r\n        registerEvent: function(e) {\r\n            var eType = e.type;\r\n\r\n            if (eType === 'touchstart') {\r\n\r\n                TouchHandler.touches += 1; // push\r\n\r\n            } else if (/^(touchend|touchcancel)$/.test(eType)) {\r\n\r\n                setTimeout(function() {\r\n                    if (TouchHandler.touches) {\r\n                        TouchHandler.touches -= 1; // pop after 500ms\r\n                    }\r\n                }, 500);\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Delegated click handler for .waves-effect element.\r\n     * returns null when .waves-effect element not in \"click tree\"\r\n     */\r\n    function getWavesEffectElement(e) {\r\n\r\n        if (TouchHandler.allowEvent(e) === false) {\r\n            return null;\r\n        }\r\n\r\n        var element = null;\r\n        var target = e.target || e.srcElement;\r\n\r\n        while (target.parentElement !== null) {\r\n            if (target.classList.contains('waves-effect') && (!(target instanceof SVGElement))) {\r\n                element = target;\r\n                break;\r\n            }\r\n            target = target.parentElement;\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    /**\r\n     * Bubble the click and show effect if .waves-effect elem was found\r\n     */\r\n    function showEffect(e) {\r\n\r\n        // Disable effect if element has \"disabled\" property on it\r\n        // In some cases, the event is not triggered by the current element\r\n        // if (e.target.getAttribute('disabled') !== null) {\r\n        //     return;\r\n        // }\r\n\r\n        var element = getWavesEffectElement(e);\r\n\r\n        if (element !== null) {\r\n\r\n            // Make it sure the element has either disabled property, disabled attribute or 'disabled' class\r\n            if (element.disabled || element.getAttribute('disabled') || element.classList.contains('disabled')) {\r\n                return;\r\n            }\r\n\r\n            TouchHandler.registerEvent(e);\r\n\r\n            if (e.type === 'touchstart' && Effect.delay) {\r\n\r\n                var hidden = false;\r\n\r\n                var timer = setTimeout(function () {\r\n                    timer = null;\r\n                    Effect.show(e, element);\r\n                }, Effect.delay);\r\n\r\n                var hideEffect = function(hideEvent) {\r\n\r\n                    // if touch hasn't moved, and effect not yet started: start effect now\r\n                    if (timer) {\r\n                        clearTimeout(timer);\r\n                        timer = null;\r\n                        Effect.show(e, element);\r\n                    }\r\n                    if (!hidden) {\r\n                        hidden = true;\r\n                        Effect.hide(hideEvent, element);\r\n                    }\r\n                };\r\n\r\n                var touchMove = function(moveEvent) {\r\n                    if (timer) {\r\n                        clearTimeout(timer);\r\n                        timer = null;\r\n                    }\r\n                    hideEffect(moveEvent);\r\n                };\r\n\r\n                element.addEventListener('touchmove', touchMove, false);\r\n                element.addEventListener('touchend', hideEffect, false);\r\n                element.addEventListener('touchcancel', hideEffect, false);\r\n\r\n            } else {\r\n\r\n                Effect.show(e, element);\r\n\r\n                if (isTouchAvailable) {\r\n                    element.addEventListener('touchend', Effect.hide, false);\r\n                    element.addEventListener('touchcancel', Effect.hide, false);\r\n                }\r\n\r\n                element.addEventListener('mouseup', Effect.hide, false);\r\n                element.addEventListener('mouseleave', Effect.hide, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    Waves.init = function(options) {\r\n        var body = document.body;\r\n\r\n        options = options || {};\r\n\r\n        if ('duration' in options) {\r\n            Effect.duration = options.duration;\r\n        }\r\n\r\n        if ('delay' in options) {\r\n            Effect.delay = options.delay;\r\n        }\r\n\r\n        if (isTouchAvailable) {\r\n            body.addEventListener('touchstart', showEffect, false);\r\n            body.addEventListener('touchcancel', TouchHandler.registerEvent, false);\r\n            body.addEventListener('touchend', TouchHandler.registerEvent, false);\r\n        }\r\n\r\n        body.addEventListener('mousedown', showEffect, false);\r\n    };\r\n\r\n\r\n    /**\r\n     * Attach Waves to dynamically loaded inputs, or add .waves-effect and other\r\n     * waves classes to a set of elements. Set drag to true if the ripple mouseover\r\n     * or skimming effect should be applied to the elements.\r\n     */\r\n    Waves.attach = function(elements, classes) {\r\n\r\n        elements = getWavesElements(elements);\r\n\r\n        if (toString.call(classes) === '[object Array]') {\r\n            classes = classes.join(' ');\r\n        }\r\n\r\n        classes = classes ? ' ' + classes : '';\r\n\r\n        var element, tagName;\r\n\r\n        for (var i = 0, len = elements.length; i < len; i++) {\r\n\r\n            element = elements[i];\r\n            tagName = element.tagName.toLowerCase();\r\n\r\n            if (['input', 'img'].indexOf(tagName) !== -1) {\r\n                TagWrapper[tagName](element);\r\n                element = element.parentElement;\r\n            }\r\n\r\n            if (element.className.indexOf('waves-effect') === -1) {\r\n                element.className += ' waves-effect' + classes;\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Cause a ripple to appear in an element via code.\r\n     */\r\n    Waves.ripple = function(elements, options) {\r\n        elements = getWavesElements(elements);\r\n        var elementsLen = elements.length;\r\n\r\n        options          = options || {};\r\n        options.wait     = options.wait || 0;\r\n        options.position = options.position || null; // default = centre of element\r\n\r\n\r\n        if (elementsLen) {\r\n            var element, pos, off, centre = {}, i = 0;\r\n            var mousedown = {\r\n                type: 'mousedown',\r\n                button: 1\r\n            };\r\n            var hideRipple = function(mouseup, element) {\r\n                return function() {\r\n                    Effect.hide(mouseup, element);\r\n                };\r\n            };\r\n\r\n            for (; i < elementsLen; i++) {\r\n                element = elements[i];\r\n                pos = options.position || {\r\n                    x: element.clientWidth / 2,\r\n                    y: element.clientHeight / 2\r\n                };\r\n\r\n                off      = offset(element);\r\n                centre.x = off.left + pos.x;\r\n                centre.y = off.top + pos.y;\r\n\r\n                mousedown.pageX = centre.x;\r\n                mousedown.pageY = centre.y;\r\n\r\n                Effect.show(mousedown, element);\r\n\r\n                if (options.wait >= 0 && options.wait !== null) {\r\n                    var mouseup = {\r\n                        type: 'mouseup',\r\n                        button: 1\r\n                    };\r\n\r\n                    setTimeout(hideRipple(mouseup, element), options.wait);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Remove all ripples from an element.\r\n     */\r\n    Waves.calm = function(elements) {\r\n        elements = getWavesElements(elements);\r\n        var mouseup = {\r\n            type: 'mouseup',\r\n            button: 1\r\n        };\r\n\r\n        for (var i = 0, len = elements.length; i < len; i++) {\r\n            Effect.hide(mouseup, elements[i]);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Deprecated API fallback\r\n     */\r\n    Waves.displayEffect = function(options) {\r\n        console.error('Waves.displayEffect() has been deprecated and will be removed in future version. Please use Waves.init() to initialize Waves effect');\r\n        Waves.init(options);\r\n    };\r\n\r\n    return Waves;\r\n});\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n\n  // Toggle the appbar menu\n  $ggAppBarMenuToggle.on('click', function (event) {\n    event.preventDefault();\n    $ggAppBarMenu.ggToggle('show');\n  });\n\n  // Close the appbar menu on click-outside\n  (0, _jquery2.default)(document).on('click', function (event) {\n    $ggAppBarMenu.ggCloseOutside([$ggAppBarMenuToggle], event);\n  });\n};\n\nvar _jquery = __webpack_require__(2);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $ggAppBarMenu = (0, _jquery2.default)('.gg-appbar-menu');\nvar $ggAppBarMenuToggle = (0, _jquery2.default)('.gg-appbar-menu-toggle');//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXYvanMvY29tcG9uZW50cy9nZy1hcHBiYXIuanM/ZjgxYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBS2UsWUFBWTs7O0FBR3pCLHNCQUFvQixFQUFwQixDQUF1QixPQUF2QixFQUFnQyxVQUFDLEtBQUQsRUFBVztBQUN6QyxVQUFNLGNBQU4sR0FEeUM7QUFFekMsa0JBQWMsUUFBZCxDQUF1QixNQUF2QixFQUZ5QztHQUFYLENBQWhDOzs7QUFIeUIsdUJBU3pCLENBQUUsUUFBRixFQUFZLEVBQVosQ0FBZSxPQUFmLEVBQXdCLFVBQUMsS0FBRCxFQUFXO0FBQ2pDLGtCQUFjLGNBQWQsQ0FBNkIsQ0FBQyxtQkFBRCxDQUE3QixFQUFvRCxLQUFwRCxFQURpQztHQUFYLENBQXhCLENBVHlCO0NBQVo7Ozs7Ozs7O0FBSGYsSUFBTSxnQkFBZ0Isc0JBQUUsaUJBQUYsQ0FBaEI7QUFDTixJQUFNLHNCQUFzQixzQkFBRSx3QkFBRixDQUF0QiIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcclxuXHJcbmNvbnN0ICRnZ0FwcEJhck1lbnUgPSAkKCcuZ2ctYXBwYmFyLW1lbnUnKTtcclxuY29uc3QgJGdnQXBwQmFyTWVudVRvZ2dsZSA9ICQoJy5nZy1hcHBiYXItbWVudS10b2dnbGUnKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgLy8gVG9nZ2xlIHRoZSBhcHBiYXIgbWVudVxyXG4gICRnZ0FwcEJhck1lbnVUb2dnbGUub24oJ2NsaWNrJywgKGV2ZW50KSA9PiB7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgJGdnQXBwQmFyTWVudS5nZ1RvZ2dsZSgnc2hvdycpO1xyXG4gIH0pO1xyXG5cclxuICAvLyBDbG9zZSB0aGUgYXBwYmFyIG1lbnUgb24gY2xpY2stb3V0c2lkZVxyXG4gICQoZG9jdW1lbnQpLm9uKCdjbGljaycsIChldmVudCkgPT4ge1xyXG4gICAgJGdnQXBwQmFyTWVudS5nZ0Nsb3NlT3V0c2lkZShbJGdnQXBwQmFyTWVudVRvZ2dsZV0sIGV2ZW50KTtcclxuICB9KTtcclxuXHJcbn1cclxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9kZXYvanMvY29tcG9uZW50cy9nZy1hcHBiYXIuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n\n  // Toggle the drawer\n\n  $ggDrawerToggle.on('click', function (event) {\n    event.preventDefault();\n    if ($ggLayout.width() < ggMediumWidth) {\n      $ggDrawer.ggToggle();\n      (0, _ggObfuscator.ggObfuscatorToggle)();\n    }\n  });\n\n  $ggObfuscator.on('click', function (event) {\n    event.preventDefault();\n    if ($ggLayout.width() < ggMediumWidth) {\n      $ggDrawer.ggToggle('hide');\n      (0, _ggObfuscator.ggObfuscatorToggle)('hide');\n    }\n  });\n\n  // Swipe the drawer\n\n  delete _hammerjs2.default.defaults.cssProps.userSelect;\n  var drawerSwipe = new _hammerjs2.default($ggLayout[0]);\n\n  drawerSwipe.on('swipeleft', function () {\n    if ($ggDrawer.hasClass('is-visible') && $ggLayout.width() < ggMediumWidth) {\n      $ggDrawer.ggToggle('hide');\n      (0, _ggObfuscator.ggObfuscatorToggle)('hide');\n    }\n  });\n\n  drawerSwipe.on('swiperight', function () {\n    if (!$ggDrawer.hasClass('is-visible') && $ggLayout.width() < ggMediumWidth) {\n      $ggDrawer.ggToggle('show');\n      (0, _ggObfuscator.ggObfuscatorToggle)('show');\n    }\n  });\n\n  // Add the scrollbar to the drawer\n\n  _perfectScrollbar2.default.initialize($ggDrawer[0]);\n};\n\nvar _jquery = __webpack_require__(2);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _hammerjs = __webpack_require__(7);\n\nvar _hammerjs2 = _interopRequireDefault(_hammerjs);\n\nvar _perfectScrollbar = __webpack_require__(8);\n\nvar _perfectScrollbar2 = _interopRequireDefault(_perfectScrollbar);\n\nvar _ggObfuscator = __webpack_require__(29);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $ggLayout = (0, _jquery2.default)('.gg-layout');\nvar $ggDrawer = (0, _jquery2.default)('.gg-drawer');\nvar $ggDrawerToggle = (0, _jquery2.default)('.gg-drawer-toggle');\nvar $ggObfuscator = (0, _jquery2.default)('.gg-obfuscator');\nvar ggMediumWidth = '1280';//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXYvanMvY29tcG9uZW50cy9nZy1kcmF3ZXIuanM/N2ViMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBV2UsWUFBWTs7OztBQUl6QixrQkFBZ0IsRUFBaEIsQ0FBbUIsT0FBbkIsRUFBNEIsVUFBQyxLQUFELEVBQVc7QUFDckMsVUFBTSxjQUFOLEdBRHFDO0FBRXJDLFFBQUksVUFBVSxLQUFWLEtBQW9CLGFBQXBCLEVBQW1DO0FBQ3JDLGdCQUFVLFFBQVYsR0FEcUM7QUFFckMsOENBRnFDO0tBQXZDO0dBRjBCLENBQTVCLENBSnlCOztBQVl6QixnQkFBYyxFQUFkLENBQWlCLE9BQWpCLEVBQTBCLFVBQUMsS0FBRCxFQUFXO0FBQ25DLFVBQU0sY0FBTixHQURtQztBQUVuQyxRQUFJLFVBQVUsS0FBVixLQUFvQixhQUFwQixFQUFtQztBQUNyQyxnQkFBVSxRQUFWLENBQW1CLE1BQW5CLEVBRHFDO0FBRXJDLDRDQUFtQixNQUFuQixFQUZxQztLQUF2QztHQUZ3QixDQUExQjs7OztBQVp5QixTQXVCbEIsbUJBQU8sUUFBUCxDQUFnQixRQUFoQixDQUF5QixVQUF6QixDQXZCa0I7QUF3QnpCLE1BQUksY0FBYyx1QkFBVyxVQUFVLENBQVYsQ0FBWCxDQUFkLENBeEJxQjs7QUEwQnpCLGNBQVksRUFBWixDQUFlLFdBQWYsRUFBNEIsWUFBTTtBQUNoQyxRQUFJLFVBQVUsUUFBVixDQUFtQixZQUFuQixLQUFvQyxVQUFVLEtBQVYsS0FBb0IsYUFBcEIsRUFBbUM7QUFDekUsZ0JBQVUsUUFBVixDQUFtQixNQUFuQixFQUR5RTtBQUV6RSw0Q0FBbUIsTUFBbkIsRUFGeUU7S0FBM0U7R0FEMEIsQ0FBNUIsQ0ExQnlCOztBQWlDekIsY0FBWSxFQUFaLENBQWUsWUFBZixFQUE2QixZQUFNO0FBQ2pDLFFBQUksQ0FBQyxVQUFVLFFBQVYsQ0FBbUIsWUFBbkIsQ0FBRCxJQUFxQyxVQUFVLEtBQVYsS0FBb0IsYUFBcEIsRUFBbUM7QUFDMUUsZ0JBQVUsUUFBVixDQUFtQixNQUFuQixFQUQwRTtBQUUxRSw0Q0FBbUIsTUFBbkIsRUFGMEU7S0FBNUU7R0FEMkIsQ0FBN0I7Ozs7QUFqQ3lCLDRCQTJDekIsQ0FBRyxVQUFILENBQWMsVUFBVSxDQUFWLENBQWQsRUEzQ3lCO0NBQVo7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU5mLElBQU0sWUFBWSxzQkFBRSxZQUFGLENBQVo7QUFDTixJQUFNLFlBQVksc0JBQUUsWUFBRixDQUFaO0FBQ04sSUFBTSxrQkFBa0Isc0JBQUUsbUJBQUYsQ0FBbEI7QUFDTixJQUFNLGdCQUFnQixzQkFBRSxnQkFBRixDQUFoQjtBQUNOLElBQU0sZ0JBQWdCLE1BQWhCIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xyXG5pbXBvcnQgSGFtbWVyIGZyb20gJ2hhbW1lcmpzJztcclxuaW1wb3J0IFBzIGZyb20gJ3BlcmZlY3Qtc2Nyb2xsYmFyJztcclxuaW1wb3J0IHsgZ2dPYmZ1c2NhdG9yVG9nZ2xlIH0gZnJvbSAnLi4vcGx1Z2lucy9nZy1vYmZ1c2NhdG9yJztcclxuXHJcbmNvbnN0ICRnZ0xheW91dCA9ICQoJy5nZy1sYXlvdXQnKTtcclxuY29uc3QgJGdnRHJhd2VyID0gJCgnLmdnLWRyYXdlcicpO1xyXG5jb25zdCAkZ2dEcmF3ZXJUb2dnbGUgPSAkKCcuZ2ctZHJhd2VyLXRvZ2dsZScpO1xyXG5jb25zdCAkZ2dPYmZ1c2NhdG9yID0gJCgnLmdnLW9iZnVzY2F0b3InKTtcclxuY29uc3QgZ2dNZWRpdW1XaWR0aCA9ICcxMjgwJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgLy8gVG9nZ2xlIHRoZSBkcmF3ZXJcclxuXHJcbiAgJGdnRHJhd2VyVG9nZ2xlLm9uKCdjbGljaycsIChldmVudCkgPT4ge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIGlmICgkZ2dMYXlvdXQud2lkdGgoKSA8IGdnTWVkaXVtV2lkdGgpIHtcclxuICAgICAgJGdnRHJhd2VyLmdnVG9nZ2xlKCk7XHJcbiAgICAgIGdnT2JmdXNjYXRvclRvZ2dsZSgpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICAkZ2dPYmZ1c2NhdG9yLm9uKCdjbGljaycsIChldmVudCkgPT4ge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIGlmICgkZ2dMYXlvdXQud2lkdGgoKSA8IGdnTWVkaXVtV2lkdGgpIHtcclxuICAgICAgJGdnRHJhd2VyLmdnVG9nZ2xlKCdoaWRlJyk7XHJcbiAgICAgIGdnT2JmdXNjYXRvclRvZ2dsZSgnaGlkZScpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuXHJcbiAgLy8gU3dpcGUgdGhlIGRyYXdlclxyXG5cclxuICBkZWxldGUgSGFtbWVyLmRlZmF1bHRzLmNzc1Byb3BzLnVzZXJTZWxlY3Q7XHJcbiAgbGV0IGRyYXdlclN3aXBlID0gbmV3IEhhbW1lcigkZ2dMYXlvdXRbMF0pO1xyXG5cclxuICBkcmF3ZXJTd2lwZS5vbignc3dpcGVsZWZ0JywgKCkgPT4ge1xyXG4gICAgaWYgKCRnZ0RyYXdlci5oYXNDbGFzcygnaXMtdmlzaWJsZScpICYmICRnZ0xheW91dC53aWR0aCgpIDwgZ2dNZWRpdW1XaWR0aCkge1xyXG4gICAgICAkZ2dEcmF3ZXIuZ2dUb2dnbGUoJ2hpZGUnKTtcclxuICAgICAgZ2dPYmZ1c2NhdG9yVG9nZ2xlKCdoaWRlJyk7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIGRyYXdlclN3aXBlLm9uKCdzd2lwZXJpZ2h0JywgKCkgPT4ge1xyXG4gICAgaWYgKCEkZ2dEcmF3ZXIuaGFzQ2xhc3MoJ2lzLXZpc2libGUnKSAmJiAkZ2dMYXlvdXQud2lkdGgoKSA8IGdnTWVkaXVtV2lkdGgpIHtcclxuICAgICAgJGdnRHJhd2VyLmdnVG9nZ2xlKCdzaG93Jyk7XHJcbiAgICAgIGdnT2JmdXNjYXRvclRvZ2dsZSgnc2hvdycpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuXHJcbiAgLy8gQWRkIHRoZSBzY3JvbGxiYXIgdG8gdGhlIGRyYXdlclxyXG5cclxuICBQcy5pbml0aWFsaXplKCRnZ0RyYXdlclswXSk7XHJcblxyXG59XHJcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vZGV2L2pzL2NvbXBvbmVudHMvZ2ctZHJhd2VyLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.6 - 2015-12-23\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2015 Jorik Tangelder;\n * Licensed under the  license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean=false} [merge]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.allow = true; // used by Input.TouchMouse to disable mouse events\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down, and mouse events are allowed (see the TouchMouse input)\n        if (!this.pressed || !this.allow) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        // when we're in a touch event, so  block all upcoming mouse events\n        // most mobile browser also emit mouseevents, right after touchstart\n        if (isTouch) {\n            this.mouse.allow = false;\n        } else if (isMouse && !this.mouse.allow) {\n            return;\n        }\n\n        // reset the allowMouse when we're done\n        if (inputEvent & (INPUT_END | INPUT_CANCEL)) {\n            this.mouse.allow = true;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        // not needed with native support for the touchAction property\n        if (NATIVE_TOUCH_ACTION) {\n            return;\n        }\n\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE);\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.6';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    each(manager.options.cssProps, function(value, name) {\n        element.style[prefixed(element.style, name)] = add ? value : '';\n    });\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n        return Hammer;\n    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2hhbW1lcmpzL2hhbW1lci5qcz9iOTlhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsU0FBUztBQUNwQixXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELFVBQVU7O0FBRS9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFVBQVU7QUFDckIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkJBQTJCLDBCQUEwQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLGNBQWM7QUFDekIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsTUFBTTtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLFdBQVcsRUFBRTtBQUNiLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsT0FBTztBQUNsQixXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLE9BQU87QUFDbEIsV0FBVyxTQUFTO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFlBQVk7QUFDdkIsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsWUFBWSxlQUFlO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE1BQU0sT0FBTyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUs7QUFDM0MsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsUUFBUTtBQUNuQixhQUFhLE1BQU0sR0FBRyxLQUFLLEVBQUUsS0FBSztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxTQUFTO0FBQ3BCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsRUFBRTs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsT0FBTyxLQUFLO0FBQ3ZCLFdBQVcsT0FBTyxLQUFLO0FBQ3ZCLFdBQVcsTUFBTTtBQUNqQixZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE1BQU07QUFDakIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsTUFBTTtBQUNqQixZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsTUFBTTtBQUNqQixZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCO0FBQ3RCLHlCQUF5Qjs7QUFFekI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxDQUFDOztBQUVEO0FBQ0EsVUFBVTtBQUNWLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxnQkFBZ0I7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBLFVBQVU7QUFDVixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsZ0JBQWdCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCLGVBQWUsT0FBTztBQUN0QixlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBLDRCQUE0Qiw4QkFBOEI7O0FBRTFEOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBLGdCQUFnQjs7QUFFaEI7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QixnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLGVBQWUsV0FBVztBQUMxQixpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsZUFBZSxXQUFXO0FBQzFCLGlCQUFpQixXQUFXO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsZUFBZSxXQUFXO0FBQzFCLGlCQUFpQixXQUFXO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxlQUFlLFdBQVc7QUFDMUIsaUJBQWlCLFdBQVc7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsZUFBZSxXQUFXO0FBQzFCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUNBQWlDOztBQUVqQyxvQ0FBb0M7QUFDcEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QixpQkFBaUIsTUFBTTtBQUN2QjtBQUNBLGtDQUFrQyxFQUFFOztBQUVwQztBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxnQ0FBZ0MsRUFBRTs7QUFFbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2Qjs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxrQkFBa0I7QUFDN0IsV0FBVyxXQUFXO0FBQ3RCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEIsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QixpQkFBaUIsRUFBRTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXO0FBQ1g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBOztBQUVBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixjQUFjO0FBQzFDLDJCQUEyQixjQUFjO0FBQ3pDLDJCQUEyQixnQ0FBZ0M7QUFDM0QseUJBQXlCLGdDQUFnQztBQUN6RDtBQUNBLHlCQUF5Qiw0QkFBNEI7QUFDckQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsT0FBTztBQUNsQjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsZ0NBQWdDOztBQUU1RDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QixpQkFBaUI7QUFDakI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFO0FBQ2xFO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxlQUFlLGtCQUFrQjtBQUNqQyxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVCQUF1Qix3QkFBd0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0EsZUFBZSxXQUFXO0FBQzFCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsZUFBZSxrQkFBa0I7QUFDakMsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QixlQUFlLFNBQVM7QUFDeEIsaUJBQWlCLGFBQWE7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCLGVBQWUsU0FBUztBQUN4QixpQkFBaUIsYUFBYTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QixlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLG1HQUFtRyxHQUFHO0FBQ3RHOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTs7QUFFQSxDQUFDIiwiZmlsZSI6IjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgSGFtbWVyLkpTIC0gdjIuMC42IC0gMjAxNS0xMi0yM1xuICogaHR0cDovL2hhbW1lcmpzLmdpdGh1Yi5pby9cbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUgSm9yaWsgVGFuZ2VsZGVyO1xuICogTGljZW5zZWQgdW5kZXIgdGhlICBsaWNlbnNlICovXG4oZnVuY3Rpb24od2luZG93LCBkb2N1bWVudCwgZXhwb3J0TmFtZSwgdW5kZWZpbmVkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxudmFyIFZFTkRPUl9QUkVGSVhFUyA9IFsnJywgJ3dlYmtpdCcsICdNb3onLCAnTVMnLCAnbXMnLCAnbyddO1xudmFyIFRFU1RfRUxFTUVOVCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG52YXIgVFlQRV9GVU5DVElPTiA9ICdmdW5jdGlvbic7XG5cbnZhciByb3VuZCA9IE1hdGgucm91bmQ7XG52YXIgYWJzID0gTWF0aC5hYnM7XG52YXIgbm93ID0gRGF0ZS5ub3c7XG5cbi8qKlxuICogc2V0IGEgdGltZW91dCB3aXRoIGEgZ2l2ZW4gc2NvcGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKiBAcGFyYW0ge051bWJlcn0gdGltZW91dFxuICogQHBhcmFtIHtPYmplY3R9IGNvbnRleHRcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmZ1bmN0aW9uIHNldFRpbWVvdXRDb250ZXh0KGZuLCB0aW1lb3V0LCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIHNldFRpbWVvdXQoYmluZEZuKGZuLCBjb250ZXh0KSwgdGltZW91dCk7XG59XG5cbi8qKlxuICogaWYgdGhlIGFyZ3VtZW50IGlzIGFuIGFycmF5LCB3ZSB3YW50IHRvIGV4ZWN1dGUgdGhlIGZuIG9uIGVhY2ggZW50cnlcbiAqIGlmIGl0IGFpbnQgYW4gYXJyYXkgd2UgZG9uJ3Qgd2FudCB0byBkbyBhIHRoaW5nLlxuICogdGhpcyBpcyB1c2VkIGJ5IGFsbCB0aGUgbWV0aG9kcyB0aGF0IGFjY2VwdCBhIHNpbmdsZSBhbmQgYXJyYXkgYXJndW1lbnQuXG4gKiBAcGFyYW0geyp8QXJyYXl9IGFyZ1xuICogQHBhcmFtIHtTdHJpbmd9IGZuXG4gKiBAcGFyYW0ge09iamVjdH0gW2NvbnRleHRdXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAqL1xuZnVuY3Rpb24gaW52b2tlQXJyYXlBcmcoYXJnLCBmbiwgY29udGV4dCkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcbiAgICAgICAgZWFjaChhcmcsIGNvbnRleHRbZm5dLCBjb250ZXh0KTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuLyoqXG4gKiB3YWxrIG9iamVjdHMgYW5kIGFycmF5c1xuICogQHBhcmFtIHtPYmplY3R9IG9ialxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0b3JcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb250ZXh0XG4gKi9cbmZ1bmN0aW9uIGVhY2gob2JqLCBpdGVyYXRvciwgY29udGV4dCkge1xuICAgIHZhciBpO1xuXG4gICAgaWYgKCFvYmopIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChvYmouZm9yRWFjaCkge1xuICAgICAgICBvYmouZm9yRWFjaChpdGVyYXRvciwgY29udGV4dCk7XG4gICAgfSBlbHNlIGlmIChvYmoubGVuZ3RoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaSA9IDA7XG4gICAgICAgIHdoaWxlIChpIDwgb2JqLmxlbmd0aCkge1xuICAgICAgICAgICAgaXRlcmF0b3IuY2FsbChjb250ZXh0LCBvYmpbaV0sIGksIG9iaik7XG4gICAgICAgICAgICBpKys7XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICBmb3IgKGkgaW4gb2JqKSB7XG4gICAgICAgICAgICBvYmouaGFzT3duUHJvcGVydHkoaSkgJiYgaXRlcmF0b3IuY2FsbChjb250ZXh0LCBvYmpbaV0sIGksIG9iaik7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogd3JhcCBhIG1ldGhvZCB3aXRoIGEgZGVwcmVjYXRpb24gd2FybmluZyBhbmQgc3RhY2sgdHJhY2VcbiAqIEBwYXJhbSB7RnVuY3Rpb259IG1ldGhvZFxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXNzYWdlXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgbmV3IGZ1bmN0aW9uIHdyYXBwaW5nIHRoZSBzdXBwbGllZCBtZXRob2QuXG4gKi9cbmZ1bmN0aW9uIGRlcHJlY2F0ZShtZXRob2QsIG5hbWUsIG1lc3NhZ2UpIHtcbiAgICB2YXIgZGVwcmVjYXRpb25NZXNzYWdlID0gJ0RFUFJFQ0FURUQgTUVUSE9EOiAnICsgbmFtZSArICdcXG4nICsgbWVzc2FnZSArICcgQVQgXFxuJztcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBlID0gbmV3IEVycm9yKCdnZXQtc3RhY2stdHJhY2UnKTtcbiAgICAgICAgdmFyIHN0YWNrID0gZSAmJiBlLnN0YWNrID8gZS5zdGFjay5yZXBsYWNlKC9eW15cXChdKz9bXFxuJF0vZ20sICcnKVxuICAgICAgICAgICAgLnJlcGxhY2UoL15cXHMrYXRcXHMrL2dtLCAnJylcbiAgICAgICAgICAgIC5yZXBsYWNlKC9eT2JqZWN0Ljxhbm9ueW1vdXM+XFxzKlxcKC9nbSwgJ3thbm9ueW1vdXN9KClAJykgOiAnVW5rbm93biBTdGFjayBUcmFjZSc7XG5cbiAgICAgICAgdmFyIGxvZyA9IHdpbmRvdy5jb25zb2xlICYmICh3aW5kb3cuY29uc29sZS53YXJuIHx8IHdpbmRvdy5jb25zb2xlLmxvZyk7XG4gICAgICAgIGlmIChsb2cpIHtcbiAgICAgICAgICAgIGxvZy5jYWxsKHdpbmRvdy5jb25zb2xlLCBkZXByZWNhdGlvbk1lc3NhZ2UsIHN0YWNrKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWV0aG9kLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbn1cblxuLyoqXG4gKiBleHRlbmQgb2JqZWN0LlxuICogbWVhbnMgdGhhdCBwcm9wZXJ0aWVzIGluIGRlc3Qgd2lsbCBiZSBvdmVyd3JpdHRlbiBieSB0aGUgb25lcyBpbiBzcmMuXG4gKiBAcGFyYW0ge09iamVjdH0gdGFyZ2V0XG4gKiBAcGFyYW0gey4uLk9iamVjdH0gb2JqZWN0c190b19hc3NpZ25cbiAqIEByZXR1cm5zIHtPYmplY3R9IHRhcmdldFxuICovXG52YXIgYXNzaWduO1xuaWYgKHR5cGVvZiBPYmplY3QuYXNzaWduICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgYXNzaWduID0gZnVuY3Rpb24gYXNzaWduKHRhcmdldCkge1xuICAgICAgICBpZiAodGFyZ2V0ID09PSB1bmRlZmluZWQgfHwgdGFyZ2V0ID09PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDYW5ub3QgY29udmVydCB1bmRlZmluZWQgb3IgbnVsbCB0byBvYmplY3QnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBvdXRwdXQgPSBPYmplY3QodGFyZ2V0KTtcbiAgICAgICAgZm9yICh2YXIgaW5kZXggPSAxOyBpbmRleCA8IGFyZ3VtZW50cy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaW5kZXhdO1xuICAgICAgICAgICAgaWYgKHNvdXJjZSAhPT0gdW5kZWZpbmVkICYmIHNvdXJjZSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIG5leHRLZXkgaW4gc291cmNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzb3VyY2UuaGFzT3duUHJvcGVydHkobmV4dEtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dFtuZXh0S2V5XSA9IHNvdXJjZVtuZXh0S2V5XTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgIH07XG59IGVsc2Uge1xuICAgIGFzc2lnbiA9IE9iamVjdC5hc3NpZ247XG59XG5cbi8qKlxuICogZXh0ZW5kIG9iamVjdC5cbiAqIG1lYW5zIHRoYXQgcHJvcGVydGllcyBpbiBkZXN0IHdpbGwgYmUgb3ZlcndyaXR0ZW4gYnkgdGhlIG9uZXMgaW4gc3JjLlxuICogQHBhcmFtIHtPYmplY3R9IGRlc3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBzcmNcbiAqIEBwYXJhbSB7Qm9vbGVhbj1mYWxzZX0gW21lcmdlXVxuICogQHJldHVybnMge09iamVjdH0gZGVzdFxuICovXG52YXIgZXh0ZW5kID0gZGVwcmVjYXRlKGZ1bmN0aW9uIGV4dGVuZChkZXN0LCBzcmMsIG1lcmdlKSB7XG4gICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhzcmMpO1xuICAgIHZhciBpID0gMDtcbiAgICB3aGlsZSAoaSA8IGtleXMubGVuZ3RoKSB7XG4gICAgICAgIGlmICghbWVyZ2UgfHwgKG1lcmdlICYmIGRlc3Rba2V5c1tpXV0gPT09IHVuZGVmaW5lZCkpIHtcbiAgICAgICAgICAgIGRlc3Rba2V5c1tpXV0gPSBzcmNba2V5c1tpXV07XG4gICAgICAgIH1cbiAgICAgICAgaSsrO1xuICAgIH1cbiAgICByZXR1cm4gZGVzdDtcbn0sICdleHRlbmQnLCAnVXNlIGBhc3NpZ25gLicpO1xuXG4vKipcbiAqIG1lcmdlIHRoZSB2YWx1ZXMgZnJvbSBzcmMgaW4gdGhlIGRlc3QuXG4gKiBtZWFucyB0aGF0IHByb3BlcnRpZXMgdGhhdCBleGlzdCBpbiBkZXN0IHdpbGwgbm90IGJlIG92ZXJ3cml0dGVuIGJ5IHNyY1xuICogQHBhcmFtIHtPYmplY3R9IGRlc3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBzcmNcbiAqIEByZXR1cm5zIHtPYmplY3R9IGRlc3RcbiAqL1xudmFyIG1lcmdlID0gZGVwcmVjYXRlKGZ1bmN0aW9uIG1lcmdlKGRlc3QsIHNyYykge1xuICAgIHJldHVybiBleHRlbmQoZGVzdCwgc3JjLCB0cnVlKTtcbn0sICdtZXJnZScsICdVc2UgYGFzc2lnbmAuJyk7XG5cbi8qKlxuICogc2ltcGxlIGNsYXNzIGluaGVyaXRhbmNlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjaGlsZFxuICogQHBhcmFtIHtGdW5jdGlvbn0gYmFzZVxuICogQHBhcmFtIHtPYmplY3R9IFtwcm9wZXJ0aWVzXVxuICovXG5mdW5jdGlvbiBpbmhlcml0KGNoaWxkLCBiYXNlLCBwcm9wZXJ0aWVzKSB7XG4gICAgdmFyIGJhc2VQID0gYmFzZS5wcm90b3R5cGUsXG4gICAgICAgIGNoaWxkUDtcblxuICAgIGNoaWxkUCA9IGNoaWxkLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoYmFzZVApO1xuICAgIGNoaWxkUC5jb25zdHJ1Y3RvciA9IGNoaWxkO1xuICAgIGNoaWxkUC5fc3VwZXIgPSBiYXNlUDtcblxuICAgIGlmIChwcm9wZXJ0aWVzKSB7XG4gICAgICAgIGFzc2lnbihjaGlsZFAsIHByb3BlcnRpZXMpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBzaW1wbGUgZnVuY3Rpb24gYmluZFxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjb250ZXh0XG4gKiBAcmV0dXJucyB7RnVuY3Rpb259XG4gKi9cbmZ1bmN0aW9uIGJpbmRGbihmbiwgY29udGV4dCkge1xuICAgIHJldHVybiBmdW5jdGlvbiBib3VuZEZuKCkge1xuICAgICAgICByZXR1cm4gZm4uYXBwbHkoY29udGV4dCwgYXJndW1lbnRzKTtcbiAgICB9O1xufVxuXG4vKipcbiAqIGxldCBhIGJvb2xlYW4gdmFsdWUgYWxzbyBiZSBhIGZ1bmN0aW9uIHRoYXQgbXVzdCByZXR1cm4gYSBib29sZWFuXG4gKiB0aGlzIGZpcnN0IGl0ZW0gaW4gYXJncyB3aWxsIGJlIHVzZWQgYXMgdGhlIGNvbnRleHRcbiAqIEBwYXJhbSB7Qm9vbGVhbnxGdW5jdGlvbn0gdmFsXG4gKiBAcGFyYW0ge0FycmF5fSBbYXJnc11cbiAqIEByZXR1cm5zIHtCb29sZWFufVxuICovXG5mdW5jdGlvbiBib29sT3JGbih2YWwsIGFyZ3MpIHtcbiAgICBpZiAodHlwZW9mIHZhbCA9PSBUWVBFX0ZVTkNUSU9OKSB7XG4gICAgICAgIHJldHVybiB2YWwuYXBwbHkoYXJncyA/IGFyZ3NbMF0gfHwgdW5kZWZpbmVkIDogdW5kZWZpbmVkLCBhcmdzKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbDtcbn1cblxuLyoqXG4gKiB1c2UgdGhlIHZhbDIgd2hlbiB2YWwxIGlzIHVuZGVmaW5lZFxuICogQHBhcmFtIHsqfSB2YWwxXG4gKiBAcGFyYW0geyp9IHZhbDJcbiAqIEByZXR1cm5zIHsqfVxuICovXG5mdW5jdGlvbiBpZlVuZGVmaW5lZCh2YWwxLCB2YWwyKSB7XG4gICAgcmV0dXJuICh2YWwxID09PSB1bmRlZmluZWQpID8gdmFsMiA6IHZhbDE7XG59XG5cbi8qKlxuICogYWRkRXZlbnRMaXN0ZW5lciB3aXRoIG11bHRpcGxlIGV2ZW50cyBhdCBvbmNlXG4gKiBAcGFyYW0ge0V2ZW50VGFyZ2V0fSB0YXJnZXRcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlclxuICovXG5mdW5jdGlvbiBhZGRFdmVudExpc3RlbmVycyh0YXJnZXQsIHR5cGVzLCBoYW5kbGVyKSB7XG4gICAgZWFjaChzcGxpdFN0cih0eXBlcyksIGZ1bmN0aW9uKHR5cGUpIHtcbiAgICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlciwgZmFsc2UpO1xuICAgIH0pO1xufVxuXG4vKipcbiAqIHJlbW92ZUV2ZW50TGlzdGVuZXIgd2l0aCBtdWx0aXBsZSBldmVudHMgYXQgb25jZVxuICogQHBhcmFtIHtFdmVudFRhcmdldH0gdGFyZ2V0XG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZXNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXJcbiAqL1xuZnVuY3Rpb24gcmVtb3ZlRXZlbnRMaXN0ZW5lcnModGFyZ2V0LCB0eXBlcywgaGFuZGxlcikge1xuICAgIGVhY2goc3BsaXRTdHIodHlwZXMpLCBmdW5jdGlvbih0eXBlKSB7XG4gICAgICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIGhhbmRsZXIsIGZhbHNlKTtcbiAgICB9KTtcbn1cblxuLyoqXG4gKiBmaW5kIGlmIGEgbm9kZSBpcyBpbiB0aGUgZ2l2ZW4gcGFyZW50XG4gKiBAbWV0aG9kIGhhc1BhcmVudFxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gbm9kZVxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gcGFyZW50XG4gKiBAcmV0dXJuIHtCb29sZWFufSBmb3VuZFxuICovXG5mdW5jdGlvbiBoYXNQYXJlbnQobm9kZSwgcGFyZW50KSB7XG4gICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgICAgaWYgKG5vZGUgPT0gcGFyZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBub2RlID0gbm9kZS5wYXJlbnROb2RlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5cbi8qKlxuICogc21hbGwgaW5kZXhPZiB3cmFwcGVyXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcGFyYW0ge1N0cmluZ30gZmluZFxuICogQHJldHVybnMge0Jvb2xlYW59IGZvdW5kXG4gKi9cbmZ1bmN0aW9uIGluU3RyKHN0ciwgZmluZCkge1xuICAgIHJldHVybiBzdHIuaW5kZXhPZihmaW5kKSA+IC0xO1xufVxuXG4vKipcbiAqIHNwbGl0IHN0cmluZyBvbiB3aGl0ZXNwYWNlXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7QXJyYXl9IHdvcmRzXG4gKi9cbmZ1bmN0aW9uIHNwbGl0U3RyKHN0cikge1xuICAgIHJldHVybiBzdHIudHJpbSgpLnNwbGl0KC9cXHMrL2cpO1xufVxuXG4vKipcbiAqIGZpbmQgaWYgYSBhcnJheSBjb250YWlucyB0aGUgb2JqZWN0IHVzaW5nIGluZGV4T2Ygb3IgYSBzaW1wbGUgcG9seUZpbGxcbiAqIEBwYXJhbSB7QXJyYXl9IHNyY1xuICogQHBhcmFtIHtTdHJpbmd9IGZpbmRcbiAqIEBwYXJhbSB7U3RyaW5nfSBbZmluZEJ5S2V5XVxuICogQHJldHVybiB7Qm9vbGVhbnxOdW1iZXJ9IGZhbHNlIHdoZW4gbm90IGZvdW5kLCBvciB0aGUgaW5kZXhcbiAqL1xuZnVuY3Rpb24gaW5BcnJheShzcmMsIGZpbmQsIGZpbmRCeUtleSkge1xuICAgIGlmIChzcmMuaW5kZXhPZiAmJiAhZmluZEJ5S2V5KSB7XG4gICAgICAgIHJldHVybiBzcmMuaW5kZXhPZihmaW5kKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgIHdoaWxlIChpIDwgc3JjLmxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKChmaW5kQnlLZXkgJiYgc3JjW2ldW2ZpbmRCeUtleV0gPT0gZmluZCkgfHwgKCFmaW5kQnlLZXkgJiYgc3JjW2ldID09PSBmaW5kKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaSsrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAtMTtcbiAgICB9XG59XG5cbi8qKlxuICogY29udmVydCBhcnJheS1saWtlIG9iamVjdHMgdG8gcmVhbCBhcnJheXNcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEByZXR1cm5zIHtBcnJheX1cbiAqL1xuZnVuY3Rpb24gdG9BcnJheShvYmopIHtcbiAgICByZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwob2JqLCAwKTtcbn1cblxuLyoqXG4gKiB1bmlxdWUgYXJyYXkgd2l0aCBvYmplY3RzIGJhc2VkIG9uIGEga2V5IChsaWtlICdpZCcpIG9yIGp1c3QgYnkgdGhlIGFycmF5J3MgdmFsdWVcbiAqIEBwYXJhbSB7QXJyYXl9IHNyYyBbe2lkOjF9LHtpZDoyfSx7aWQ6MX1dXG4gKiBAcGFyYW0ge1N0cmluZ30gW2tleV1cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW3NvcnQ9RmFsc2VdXG4gKiBAcmV0dXJucyB7QXJyYXl9IFt7aWQ6MX0se2lkOjJ9XVxuICovXG5mdW5jdGlvbiB1bmlxdWVBcnJheShzcmMsIGtleSwgc29ydCkge1xuICAgIHZhciByZXN1bHRzID0gW107XG4gICAgdmFyIHZhbHVlcyA9IFtdO1xuICAgIHZhciBpID0gMDtcblxuICAgIHdoaWxlIChpIDwgc3JjLmxlbmd0aCkge1xuICAgICAgICB2YXIgdmFsID0ga2V5ID8gc3JjW2ldW2tleV0gOiBzcmNbaV07XG4gICAgICAgIGlmIChpbkFycmF5KHZhbHVlcywgdmFsKSA8IDApIHtcbiAgICAgICAgICAgIHJlc3VsdHMucHVzaChzcmNbaV0pO1xuICAgICAgICB9XG4gICAgICAgIHZhbHVlc1tpXSA9IHZhbDtcbiAgICAgICAgaSsrO1xuICAgIH1cblxuICAgIGlmIChzb3J0KSB7XG4gICAgICAgIGlmICgha2V5KSB7XG4gICAgICAgICAgICByZXN1bHRzID0gcmVzdWx0cy5zb3J0KCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXN1bHRzID0gcmVzdWx0cy5zb3J0KGZ1bmN0aW9uIHNvcnRVbmlxdWVBcnJheShhLCBiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFba2V5XSA+IGJba2V5XTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3VsdHM7XG59XG5cbi8qKlxuICogZ2V0IHRoZSBwcmVmaXhlZCBwcm9wZXJ0eVxuICogQHBhcmFtIHtPYmplY3R9IG9ialxuICogQHBhcmFtIHtTdHJpbmd9IHByb3BlcnR5XG4gKiBAcmV0dXJucyB7U3RyaW5nfFVuZGVmaW5lZH0gcHJlZml4ZWRcbiAqL1xuZnVuY3Rpb24gcHJlZml4ZWQob2JqLCBwcm9wZXJ0eSkge1xuICAgIHZhciBwcmVmaXgsIHByb3A7XG4gICAgdmFyIGNhbWVsUHJvcCA9IHByb3BlcnR5WzBdLnRvVXBwZXJDYXNlKCkgKyBwcm9wZXJ0eS5zbGljZSgxKTtcblxuICAgIHZhciBpID0gMDtcbiAgICB3aGlsZSAoaSA8IFZFTkRPUl9QUkVGSVhFUy5sZW5ndGgpIHtcbiAgICAgICAgcHJlZml4ID0gVkVORE9SX1BSRUZJWEVTW2ldO1xuICAgICAgICBwcm9wID0gKHByZWZpeCkgPyBwcmVmaXggKyBjYW1lbFByb3AgOiBwcm9wZXJ0eTtcblxuICAgICAgICBpZiAocHJvcCBpbiBvYmopIHtcbiAgICAgICAgICAgIHJldHVybiBwcm9wO1xuICAgICAgICB9XG4gICAgICAgIGkrKztcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cblxuLyoqXG4gKiBnZXQgYSB1bmlxdWUgaWRcbiAqIEByZXR1cm5zIHtudW1iZXJ9IHVuaXF1ZUlkXG4gKi9cbnZhciBfdW5pcXVlSWQgPSAxO1xuZnVuY3Rpb24gdW5pcXVlSWQoKSB7XG4gICAgcmV0dXJuIF91bmlxdWVJZCsrO1xufVxuXG4vKipcbiAqIGdldCB0aGUgd2luZG93IG9iamVjdCBvZiBhbiBlbGVtZW50XG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gKiBAcmV0dXJucyB7RG9jdW1lbnRWaWV3fFdpbmRvd31cbiAqL1xuZnVuY3Rpb24gZ2V0V2luZG93Rm9yRWxlbWVudChlbGVtZW50KSB7XG4gICAgdmFyIGRvYyA9IGVsZW1lbnQub3duZXJEb2N1bWVudCB8fCBlbGVtZW50O1xuICAgIHJldHVybiAoZG9jLmRlZmF1bHRWaWV3IHx8IGRvYy5wYXJlbnRXaW5kb3cgfHwgd2luZG93KTtcbn1cblxudmFyIE1PQklMRV9SRUdFWCA9IC9tb2JpbGV8dGFibGV0fGlwKGFkfGhvbmV8b2QpfGFuZHJvaWQvaTtcblxudmFyIFNVUFBPUlRfVE9VQ0ggPSAoJ29udG91Y2hzdGFydCcgaW4gd2luZG93KTtcbnZhciBTVVBQT1JUX1BPSU5URVJfRVZFTlRTID0gcHJlZml4ZWQod2luZG93LCAnUG9pbnRlckV2ZW50JykgIT09IHVuZGVmaW5lZDtcbnZhciBTVVBQT1JUX09OTFlfVE9VQ0ggPSBTVVBQT1JUX1RPVUNIICYmIE1PQklMRV9SRUdFWC50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuXG52YXIgSU5QVVRfVFlQRV9UT1VDSCA9ICd0b3VjaCc7XG52YXIgSU5QVVRfVFlQRV9QRU4gPSAncGVuJztcbnZhciBJTlBVVF9UWVBFX01PVVNFID0gJ21vdXNlJztcbnZhciBJTlBVVF9UWVBFX0tJTkVDVCA9ICdraW5lY3QnO1xuXG52YXIgQ09NUFVURV9JTlRFUlZBTCA9IDI1O1xuXG52YXIgSU5QVVRfU1RBUlQgPSAxO1xudmFyIElOUFVUX01PVkUgPSAyO1xudmFyIElOUFVUX0VORCA9IDQ7XG52YXIgSU5QVVRfQ0FOQ0VMID0gODtcblxudmFyIERJUkVDVElPTl9OT05FID0gMTtcbnZhciBESVJFQ1RJT05fTEVGVCA9IDI7XG52YXIgRElSRUNUSU9OX1JJR0hUID0gNDtcbnZhciBESVJFQ1RJT05fVVAgPSA4O1xudmFyIERJUkVDVElPTl9ET1dOID0gMTY7XG5cbnZhciBESVJFQ1RJT05fSE9SSVpPTlRBTCA9IERJUkVDVElPTl9MRUZUIHwgRElSRUNUSU9OX1JJR0hUO1xudmFyIERJUkVDVElPTl9WRVJUSUNBTCA9IERJUkVDVElPTl9VUCB8IERJUkVDVElPTl9ET1dOO1xudmFyIERJUkVDVElPTl9BTEwgPSBESVJFQ1RJT05fSE9SSVpPTlRBTCB8IERJUkVDVElPTl9WRVJUSUNBTDtcblxudmFyIFBST1BTX1hZID0gWyd4JywgJ3knXTtcbnZhciBQUk9QU19DTElFTlRfWFkgPSBbJ2NsaWVudFgnLCAnY2xpZW50WSddO1xuXG4vKipcbiAqIGNyZWF0ZSBuZXcgaW5wdXQgdHlwZSBtYW5hZ2VyXG4gKiBAcGFyYW0ge01hbmFnZXJ9IG1hbmFnZXJcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gKiBAcmV0dXJucyB7SW5wdXR9XG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gSW5wdXQobWFuYWdlciwgY2FsbGJhY2spIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdGhpcy5tYW5hZ2VyID0gbWFuYWdlcjtcbiAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgdGhpcy5lbGVtZW50ID0gbWFuYWdlci5lbGVtZW50O1xuICAgIHRoaXMudGFyZ2V0ID0gbWFuYWdlci5vcHRpb25zLmlucHV0VGFyZ2V0O1xuXG4gICAgLy8gc21hbGxlciB3cmFwcGVyIGFyb3VuZCB0aGUgaGFuZGxlciwgZm9yIHRoZSBzY29wZSBhbmQgdGhlIGVuYWJsZWQgc3RhdGUgb2YgdGhlIG1hbmFnZXIsXG4gICAgLy8gc28gd2hlbiBkaXNhYmxlZCB0aGUgaW5wdXQgZXZlbnRzIGFyZSBjb21wbGV0ZWx5IGJ5cGFzc2VkLlxuICAgIHRoaXMuZG9tSGFuZGxlciA9IGZ1bmN0aW9uKGV2KSB7XG4gICAgICAgIGlmIChib29sT3JGbihtYW5hZ2VyLm9wdGlvbnMuZW5hYmxlLCBbbWFuYWdlcl0pKSB7XG4gICAgICAgICAgICBzZWxmLmhhbmRsZXIoZXYpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHRoaXMuaW5pdCgpO1xuXG59XG5cbklucHV0LnByb3RvdHlwZSA9IHtcbiAgICAvKipcbiAgICAgKiBzaG91bGQgaGFuZGxlIHRoZSBpbnB1dEV2ZW50IGRhdGEgYW5kIHRyaWdnZXIgdGhlIGNhbGxiYWNrXG4gICAgICogQHZpcnR1YWxcbiAgICAgKi9cbiAgICBoYW5kbGVyOiBmdW5jdGlvbigpIHsgfSxcblxuICAgIC8qKlxuICAgICAqIGJpbmQgdGhlIGV2ZW50c1xuICAgICAqL1xuICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmV2RWwgJiYgYWRkRXZlbnRMaXN0ZW5lcnModGhpcy5lbGVtZW50LCB0aGlzLmV2RWwsIHRoaXMuZG9tSGFuZGxlcik7XG4gICAgICAgIHRoaXMuZXZUYXJnZXQgJiYgYWRkRXZlbnRMaXN0ZW5lcnModGhpcy50YXJnZXQsIHRoaXMuZXZUYXJnZXQsIHRoaXMuZG9tSGFuZGxlcik7XG4gICAgICAgIHRoaXMuZXZXaW4gJiYgYWRkRXZlbnRMaXN0ZW5lcnMoZ2V0V2luZG93Rm9yRWxlbWVudCh0aGlzLmVsZW1lbnQpLCB0aGlzLmV2V2luLCB0aGlzLmRvbUhhbmRsZXIpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiB1bmJpbmQgdGhlIGV2ZW50c1xuICAgICAqL1xuICAgIGRlc3Ryb3k6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmV2RWwgJiYgcmVtb3ZlRXZlbnRMaXN0ZW5lcnModGhpcy5lbGVtZW50LCB0aGlzLmV2RWwsIHRoaXMuZG9tSGFuZGxlcik7XG4gICAgICAgIHRoaXMuZXZUYXJnZXQgJiYgcmVtb3ZlRXZlbnRMaXN0ZW5lcnModGhpcy50YXJnZXQsIHRoaXMuZXZUYXJnZXQsIHRoaXMuZG9tSGFuZGxlcik7XG4gICAgICAgIHRoaXMuZXZXaW4gJiYgcmVtb3ZlRXZlbnRMaXN0ZW5lcnMoZ2V0V2luZG93Rm9yRWxlbWVudCh0aGlzLmVsZW1lbnQpLCB0aGlzLmV2V2luLCB0aGlzLmRvbUhhbmRsZXIpO1xuICAgIH1cbn07XG5cbi8qKlxuICogY3JlYXRlIG5ldyBpbnB1dCB0eXBlIG1hbmFnZXJcbiAqIGNhbGxlZCBieSB0aGUgTWFuYWdlciBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtIYW1tZXJ9IG1hbmFnZXJcbiAqIEByZXR1cm5zIHtJbnB1dH1cbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5wdXRJbnN0YW5jZShtYW5hZ2VyKSB7XG4gICAgdmFyIFR5cGU7XG4gICAgdmFyIGlucHV0Q2xhc3MgPSBtYW5hZ2VyLm9wdGlvbnMuaW5wdXRDbGFzcztcblxuICAgIGlmIChpbnB1dENsYXNzKSB7XG4gICAgICAgIFR5cGUgPSBpbnB1dENsYXNzO1xuICAgIH0gZWxzZSBpZiAoU1VQUE9SVF9QT0lOVEVSX0VWRU5UUykge1xuICAgICAgICBUeXBlID0gUG9pbnRlckV2ZW50SW5wdXQ7XG4gICAgfSBlbHNlIGlmIChTVVBQT1JUX09OTFlfVE9VQ0gpIHtcbiAgICAgICAgVHlwZSA9IFRvdWNoSW5wdXQ7XG4gICAgfSBlbHNlIGlmICghU1VQUE9SVF9UT1VDSCkge1xuICAgICAgICBUeXBlID0gTW91c2VJbnB1dDtcbiAgICB9IGVsc2Uge1xuICAgICAgICBUeXBlID0gVG91Y2hNb3VzZUlucHV0O1xuICAgIH1cbiAgICByZXR1cm4gbmV3IChUeXBlKShtYW5hZ2VyLCBpbnB1dEhhbmRsZXIpO1xufVxuXG4vKipcbiAqIGhhbmRsZSBpbnB1dCBldmVudHNcbiAqIEBwYXJhbSB7TWFuYWdlcn0gbWFuYWdlclxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50VHlwZVxuICogQHBhcmFtIHtPYmplY3R9IGlucHV0XG4gKi9cbmZ1bmN0aW9uIGlucHV0SGFuZGxlcihtYW5hZ2VyLCBldmVudFR5cGUsIGlucHV0KSB7XG4gICAgdmFyIHBvaW50ZXJzTGVuID0gaW5wdXQucG9pbnRlcnMubGVuZ3RoO1xuICAgIHZhciBjaGFuZ2VkUG9pbnRlcnNMZW4gPSBpbnB1dC5jaGFuZ2VkUG9pbnRlcnMubGVuZ3RoO1xuICAgIHZhciBpc0ZpcnN0ID0gKGV2ZW50VHlwZSAmIElOUFVUX1NUQVJUICYmIChwb2ludGVyc0xlbiAtIGNoYW5nZWRQb2ludGVyc0xlbiA9PT0gMCkpO1xuICAgIHZhciBpc0ZpbmFsID0gKGV2ZW50VHlwZSAmIChJTlBVVF9FTkQgfCBJTlBVVF9DQU5DRUwpICYmIChwb2ludGVyc0xlbiAtIGNoYW5nZWRQb2ludGVyc0xlbiA9PT0gMCkpO1xuXG4gICAgaW5wdXQuaXNGaXJzdCA9ICEhaXNGaXJzdDtcbiAgICBpbnB1dC5pc0ZpbmFsID0gISFpc0ZpbmFsO1xuXG4gICAgaWYgKGlzRmlyc3QpIHtcbiAgICAgICAgbWFuYWdlci5zZXNzaW9uID0ge307XG4gICAgfVxuXG4gICAgLy8gc291cmNlIGV2ZW50IGlzIHRoZSBub3JtYWxpemVkIHZhbHVlIG9mIHRoZSBkb21FdmVudHNcbiAgICAvLyBsaWtlICd0b3VjaHN0YXJ0LCBtb3VzZXVwLCBwb2ludGVyZG93bidcbiAgICBpbnB1dC5ldmVudFR5cGUgPSBldmVudFR5cGU7XG5cbiAgICAvLyBjb21wdXRlIHNjYWxlLCByb3RhdGlvbiBldGNcbiAgICBjb21wdXRlSW5wdXREYXRhKG1hbmFnZXIsIGlucHV0KTtcblxuICAgIC8vIGVtaXQgc2VjcmV0IGV2ZW50XG4gICAgbWFuYWdlci5lbWl0KCdoYW1tZXIuaW5wdXQnLCBpbnB1dCk7XG5cbiAgICBtYW5hZ2VyLnJlY29nbml6ZShpbnB1dCk7XG4gICAgbWFuYWdlci5zZXNzaW9uLnByZXZJbnB1dCA9IGlucHV0O1xufVxuXG4vKipcbiAqIGV4dGVuZCB0aGUgZGF0YSB3aXRoIHNvbWUgdXNhYmxlIHByb3BlcnRpZXMgbGlrZSBzY2FsZSwgcm90YXRlLCB2ZWxvY2l0eSBldGNcbiAqIEBwYXJhbSB7T2JqZWN0fSBtYW5hZ2VyXG4gKiBAcGFyYW0ge09iamVjdH0gaW5wdXRcbiAqL1xuZnVuY3Rpb24gY29tcHV0ZUlucHV0RGF0YShtYW5hZ2VyLCBpbnB1dCkge1xuICAgIHZhciBzZXNzaW9uID0gbWFuYWdlci5zZXNzaW9uO1xuICAgIHZhciBwb2ludGVycyA9IGlucHV0LnBvaW50ZXJzO1xuICAgIHZhciBwb2ludGVyc0xlbmd0aCA9IHBvaW50ZXJzLmxlbmd0aDtcblxuICAgIC8vIHN0b3JlIHRoZSBmaXJzdCBpbnB1dCB0byBjYWxjdWxhdGUgdGhlIGRpc3RhbmNlIGFuZCBkaXJlY3Rpb25cbiAgICBpZiAoIXNlc3Npb24uZmlyc3RJbnB1dCkge1xuICAgICAgICBzZXNzaW9uLmZpcnN0SW5wdXQgPSBzaW1wbGVDbG9uZUlucHV0RGF0YShpbnB1dCk7XG4gICAgfVxuXG4gICAgLy8gdG8gY29tcHV0ZSBzY2FsZSBhbmQgcm90YXRpb24gd2UgbmVlZCB0byBzdG9yZSB0aGUgbXVsdGlwbGUgdG91Y2hlc1xuICAgIGlmIChwb2ludGVyc0xlbmd0aCA+IDEgJiYgIXNlc3Npb24uZmlyc3RNdWx0aXBsZSkge1xuICAgICAgICBzZXNzaW9uLmZpcnN0TXVsdGlwbGUgPSBzaW1wbGVDbG9uZUlucHV0RGF0YShpbnB1dCk7XG4gICAgfSBlbHNlIGlmIChwb2ludGVyc0xlbmd0aCA9PT0gMSkge1xuICAgICAgICBzZXNzaW9uLmZpcnN0TXVsdGlwbGUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgZmlyc3RJbnB1dCA9IHNlc3Npb24uZmlyc3RJbnB1dDtcbiAgICB2YXIgZmlyc3RNdWx0aXBsZSA9IHNlc3Npb24uZmlyc3RNdWx0aXBsZTtcbiAgICB2YXIgb2Zmc2V0Q2VudGVyID0gZmlyc3RNdWx0aXBsZSA/IGZpcnN0TXVsdGlwbGUuY2VudGVyIDogZmlyc3RJbnB1dC5jZW50ZXI7XG5cbiAgICB2YXIgY2VudGVyID0gaW5wdXQuY2VudGVyID0gZ2V0Q2VudGVyKHBvaW50ZXJzKTtcbiAgICBpbnB1dC50aW1lU3RhbXAgPSBub3coKTtcbiAgICBpbnB1dC5kZWx0YVRpbWUgPSBpbnB1dC50aW1lU3RhbXAgLSBmaXJzdElucHV0LnRpbWVTdGFtcDtcblxuICAgIGlucHV0LmFuZ2xlID0gZ2V0QW5nbGUob2Zmc2V0Q2VudGVyLCBjZW50ZXIpO1xuICAgIGlucHV0LmRpc3RhbmNlID0gZ2V0RGlzdGFuY2Uob2Zmc2V0Q2VudGVyLCBjZW50ZXIpO1xuXG4gICAgY29tcHV0ZURlbHRhWFkoc2Vzc2lvbiwgaW5wdXQpO1xuICAgIGlucHV0Lm9mZnNldERpcmVjdGlvbiA9IGdldERpcmVjdGlvbihpbnB1dC5kZWx0YVgsIGlucHV0LmRlbHRhWSk7XG5cbiAgICB2YXIgb3ZlcmFsbFZlbG9jaXR5ID0gZ2V0VmVsb2NpdHkoaW5wdXQuZGVsdGFUaW1lLCBpbnB1dC5kZWx0YVgsIGlucHV0LmRlbHRhWSk7XG4gICAgaW5wdXQub3ZlcmFsbFZlbG9jaXR5WCA9IG92ZXJhbGxWZWxvY2l0eS54O1xuICAgIGlucHV0Lm92ZXJhbGxWZWxvY2l0eVkgPSBvdmVyYWxsVmVsb2NpdHkueTtcbiAgICBpbnB1dC5vdmVyYWxsVmVsb2NpdHkgPSAoYWJzKG92ZXJhbGxWZWxvY2l0eS54KSA+IGFicyhvdmVyYWxsVmVsb2NpdHkueSkpID8gb3ZlcmFsbFZlbG9jaXR5LnggOiBvdmVyYWxsVmVsb2NpdHkueTtcblxuICAgIGlucHV0LnNjYWxlID0gZmlyc3RNdWx0aXBsZSA/IGdldFNjYWxlKGZpcnN0TXVsdGlwbGUucG9pbnRlcnMsIHBvaW50ZXJzKSA6IDE7XG4gICAgaW5wdXQucm90YXRpb24gPSBmaXJzdE11bHRpcGxlID8gZ2V0Um90YXRpb24oZmlyc3RNdWx0aXBsZS5wb2ludGVycywgcG9pbnRlcnMpIDogMDtcblxuICAgIGlucHV0Lm1heFBvaW50ZXJzID0gIXNlc3Npb24ucHJldklucHV0ID8gaW5wdXQucG9pbnRlcnMubGVuZ3RoIDogKChpbnB1dC5wb2ludGVycy5sZW5ndGggPlxuICAgICAgICBzZXNzaW9uLnByZXZJbnB1dC5tYXhQb2ludGVycykgPyBpbnB1dC5wb2ludGVycy5sZW5ndGggOiBzZXNzaW9uLnByZXZJbnB1dC5tYXhQb2ludGVycyk7XG5cbiAgICBjb21wdXRlSW50ZXJ2YWxJbnB1dERhdGEoc2Vzc2lvbiwgaW5wdXQpO1xuXG4gICAgLy8gZmluZCB0aGUgY29ycmVjdCB0YXJnZXRcbiAgICB2YXIgdGFyZ2V0ID0gbWFuYWdlci5lbGVtZW50O1xuICAgIGlmIChoYXNQYXJlbnQoaW5wdXQuc3JjRXZlbnQudGFyZ2V0LCB0YXJnZXQpKSB7XG4gICAgICAgIHRhcmdldCA9IGlucHV0LnNyY0V2ZW50LnRhcmdldDtcbiAgICB9XG4gICAgaW5wdXQudGFyZ2V0ID0gdGFyZ2V0O1xufVxuXG5mdW5jdGlvbiBjb21wdXRlRGVsdGFYWShzZXNzaW9uLCBpbnB1dCkge1xuICAgIHZhciBjZW50ZXIgPSBpbnB1dC5jZW50ZXI7XG4gICAgdmFyIG9mZnNldCA9IHNlc3Npb24ub2Zmc2V0RGVsdGEgfHwge307XG4gICAgdmFyIHByZXZEZWx0YSA9IHNlc3Npb24ucHJldkRlbHRhIHx8IHt9O1xuICAgIHZhciBwcmV2SW5wdXQgPSBzZXNzaW9uLnByZXZJbnB1dCB8fCB7fTtcblxuICAgIGlmIChpbnB1dC5ldmVudFR5cGUgPT09IElOUFVUX1NUQVJUIHx8IHByZXZJbnB1dC5ldmVudFR5cGUgPT09IElOUFVUX0VORCkge1xuICAgICAgICBwcmV2RGVsdGEgPSBzZXNzaW9uLnByZXZEZWx0YSA9IHtcbiAgICAgICAgICAgIHg6IHByZXZJbnB1dC5kZWx0YVggfHwgMCxcbiAgICAgICAgICAgIHk6IHByZXZJbnB1dC5kZWx0YVkgfHwgMFxuICAgICAgICB9O1xuXG4gICAgICAgIG9mZnNldCA9IHNlc3Npb24ub2Zmc2V0RGVsdGEgPSB7XG4gICAgICAgICAgICB4OiBjZW50ZXIueCxcbiAgICAgICAgICAgIHk6IGNlbnRlci55XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgaW5wdXQuZGVsdGFYID0gcHJldkRlbHRhLnggKyAoY2VudGVyLnggLSBvZmZzZXQueCk7XG4gICAgaW5wdXQuZGVsdGFZID0gcHJldkRlbHRhLnkgKyAoY2VudGVyLnkgLSBvZmZzZXQueSk7XG59XG5cbi8qKlxuICogdmVsb2NpdHkgaXMgY2FsY3VsYXRlZCBldmVyeSB4IG1zXG4gKiBAcGFyYW0ge09iamVjdH0gc2Vzc2lvblxuICogQHBhcmFtIHtPYmplY3R9IGlucHV0XG4gKi9cbmZ1bmN0aW9uIGNvbXB1dGVJbnRlcnZhbElucHV0RGF0YShzZXNzaW9uLCBpbnB1dCkge1xuICAgIHZhciBsYXN0ID0gc2Vzc2lvbi5sYXN0SW50ZXJ2YWwgfHwgaW5wdXQsXG4gICAgICAgIGRlbHRhVGltZSA9IGlucHV0LnRpbWVTdGFtcCAtIGxhc3QudGltZVN0YW1wLFxuICAgICAgICB2ZWxvY2l0eSwgdmVsb2NpdHlYLCB2ZWxvY2l0eVksIGRpcmVjdGlvbjtcblxuICAgIGlmIChpbnB1dC5ldmVudFR5cGUgIT0gSU5QVVRfQ0FOQ0VMICYmIChkZWx0YVRpbWUgPiBDT01QVVRFX0lOVEVSVkFMIHx8IGxhc3QudmVsb2NpdHkgPT09IHVuZGVmaW5lZCkpIHtcbiAgICAgICAgdmFyIGRlbHRhWCA9IGlucHV0LmRlbHRhWCAtIGxhc3QuZGVsdGFYO1xuICAgICAgICB2YXIgZGVsdGFZID0gaW5wdXQuZGVsdGFZIC0gbGFzdC5kZWx0YVk7XG5cbiAgICAgICAgdmFyIHYgPSBnZXRWZWxvY2l0eShkZWx0YVRpbWUsIGRlbHRhWCwgZGVsdGFZKTtcbiAgICAgICAgdmVsb2NpdHlYID0gdi54O1xuICAgICAgICB2ZWxvY2l0eVkgPSB2Lnk7XG4gICAgICAgIHZlbG9jaXR5ID0gKGFicyh2LngpID4gYWJzKHYueSkpID8gdi54IDogdi55O1xuICAgICAgICBkaXJlY3Rpb24gPSBnZXREaXJlY3Rpb24oZGVsdGFYLCBkZWx0YVkpO1xuXG4gICAgICAgIHNlc3Npb24ubGFzdEludGVydmFsID0gaW5wdXQ7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gdXNlIGxhdGVzdCB2ZWxvY2l0eSBpbmZvIGlmIGl0IGRvZXNuJ3Qgb3ZlcnRha2UgYSBtaW5pbXVtIHBlcmlvZFxuICAgICAgICB2ZWxvY2l0eSA9IGxhc3QudmVsb2NpdHk7XG4gICAgICAgIHZlbG9jaXR5WCA9IGxhc3QudmVsb2NpdHlYO1xuICAgICAgICB2ZWxvY2l0eVkgPSBsYXN0LnZlbG9jaXR5WTtcbiAgICAgICAgZGlyZWN0aW9uID0gbGFzdC5kaXJlY3Rpb247XG4gICAgfVxuXG4gICAgaW5wdXQudmVsb2NpdHkgPSB2ZWxvY2l0eTtcbiAgICBpbnB1dC52ZWxvY2l0eVggPSB2ZWxvY2l0eVg7XG4gICAgaW5wdXQudmVsb2NpdHlZID0gdmVsb2NpdHlZO1xuICAgIGlucHV0LmRpcmVjdGlvbiA9IGRpcmVjdGlvbjtcbn1cblxuLyoqXG4gKiBjcmVhdGUgYSBzaW1wbGUgY2xvbmUgZnJvbSB0aGUgaW5wdXQgdXNlZCBmb3Igc3RvcmFnZSBvZiBmaXJzdElucHV0IGFuZCBmaXJzdE11bHRpcGxlXG4gKiBAcGFyYW0ge09iamVjdH0gaW5wdXRcbiAqIEByZXR1cm5zIHtPYmplY3R9IGNsb25lZElucHV0RGF0YVxuICovXG5mdW5jdGlvbiBzaW1wbGVDbG9uZUlucHV0RGF0YShpbnB1dCkge1xuICAgIC8vIG1ha2UgYSBzaW1wbGUgY29weSBvZiB0aGUgcG9pbnRlcnMgYmVjYXVzZSB3ZSB3aWxsIGdldCBhIHJlZmVyZW5jZSBpZiB3ZSBkb24ndFxuICAgIC8vIHdlIG9ubHkgbmVlZCBjbGllbnRYWSBmb3IgdGhlIGNhbGN1bGF0aW9uc1xuICAgIHZhciBwb2ludGVycyA9IFtdO1xuICAgIHZhciBpID0gMDtcbiAgICB3aGlsZSAoaSA8IGlucHV0LnBvaW50ZXJzLmxlbmd0aCkge1xuICAgICAgICBwb2ludGVyc1tpXSA9IHtcbiAgICAgICAgICAgIGNsaWVudFg6IHJvdW5kKGlucHV0LnBvaW50ZXJzW2ldLmNsaWVudFgpLFxuICAgICAgICAgICAgY2xpZW50WTogcm91bmQoaW5wdXQucG9pbnRlcnNbaV0uY2xpZW50WSlcbiAgICAgICAgfTtcbiAgICAgICAgaSsrO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHRpbWVTdGFtcDogbm93KCksXG4gICAgICAgIHBvaW50ZXJzOiBwb2ludGVycyxcbiAgICAgICAgY2VudGVyOiBnZXRDZW50ZXIocG9pbnRlcnMpLFxuICAgICAgICBkZWx0YVg6IGlucHV0LmRlbHRhWCxcbiAgICAgICAgZGVsdGFZOiBpbnB1dC5kZWx0YVlcbiAgICB9O1xufVxuXG4vKipcbiAqIGdldCB0aGUgY2VudGVyIG9mIGFsbCB0aGUgcG9pbnRlcnNcbiAqIEBwYXJhbSB7QXJyYXl9IHBvaW50ZXJzXG4gKiBAcmV0dXJuIHtPYmplY3R9IGNlbnRlciBjb250YWlucyBgeGAgYW5kIGB5YCBwcm9wZXJ0aWVzXG4gKi9cbmZ1bmN0aW9uIGdldENlbnRlcihwb2ludGVycykge1xuICAgIHZhciBwb2ludGVyc0xlbmd0aCA9IHBvaW50ZXJzLmxlbmd0aDtcblxuICAgIC8vIG5vIG5lZWQgdG8gbG9vcCB3aGVuIG9ubHkgb25lIHRvdWNoXG4gICAgaWYgKHBvaW50ZXJzTGVuZ3RoID09PSAxKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB4OiByb3VuZChwb2ludGVyc1swXS5jbGllbnRYKSxcbiAgICAgICAgICAgIHk6IHJvdW5kKHBvaW50ZXJzWzBdLmNsaWVudFkpXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgdmFyIHggPSAwLCB5ID0gMCwgaSA9IDA7XG4gICAgd2hpbGUgKGkgPCBwb2ludGVyc0xlbmd0aCkge1xuICAgICAgICB4ICs9IHBvaW50ZXJzW2ldLmNsaWVudFg7XG4gICAgICAgIHkgKz0gcG9pbnRlcnNbaV0uY2xpZW50WTtcbiAgICAgICAgaSsrO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHg6IHJvdW5kKHggLyBwb2ludGVyc0xlbmd0aCksXG4gICAgICAgIHk6IHJvdW5kKHkgLyBwb2ludGVyc0xlbmd0aClcbiAgICB9O1xufVxuXG4vKipcbiAqIGNhbGN1bGF0ZSB0aGUgdmVsb2NpdHkgYmV0d2VlbiB0d28gcG9pbnRzLiB1bml0IGlzIGluIHB4IHBlciBtcy5cbiAqIEBwYXJhbSB7TnVtYmVyfSBkZWx0YVRpbWVcbiAqIEBwYXJhbSB7TnVtYmVyfSB4XG4gKiBAcGFyYW0ge051bWJlcn0geVxuICogQHJldHVybiB7T2JqZWN0fSB2ZWxvY2l0eSBgeGAgYW5kIGB5YFxuICovXG5mdW5jdGlvbiBnZXRWZWxvY2l0eShkZWx0YVRpbWUsIHgsIHkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB4OiB4IC8gZGVsdGFUaW1lIHx8IDAsXG4gICAgICAgIHk6IHkgLyBkZWx0YVRpbWUgfHwgMFxuICAgIH07XG59XG5cbi8qKlxuICogZ2V0IHRoZSBkaXJlY3Rpb24gYmV0d2VlbiB0d28gcG9pbnRzXG4gKiBAcGFyYW0ge051bWJlcn0geFxuICogQHBhcmFtIHtOdW1iZXJ9IHlcbiAqIEByZXR1cm4ge051bWJlcn0gZGlyZWN0aW9uXG4gKi9cbmZ1bmN0aW9uIGdldERpcmVjdGlvbih4LCB5KSB7XG4gICAgaWYgKHggPT09IHkpIHtcbiAgICAgICAgcmV0dXJuIERJUkVDVElPTl9OT05FO1xuICAgIH1cblxuICAgIGlmIChhYnMoeCkgPj0gYWJzKHkpKSB7XG4gICAgICAgIHJldHVybiB4IDwgMCA/IERJUkVDVElPTl9MRUZUIDogRElSRUNUSU9OX1JJR0hUO1xuICAgIH1cbiAgICByZXR1cm4geSA8IDAgPyBESVJFQ1RJT05fVVAgOiBESVJFQ1RJT05fRE9XTjtcbn1cblxuLyoqXG4gKiBjYWxjdWxhdGUgdGhlIGFic29sdXRlIGRpc3RhbmNlIGJldHdlZW4gdHdvIHBvaW50c1xuICogQHBhcmFtIHtPYmplY3R9IHAxIHt4LCB5fVxuICogQHBhcmFtIHtPYmplY3R9IHAyIHt4LCB5fVxuICogQHBhcmFtIHtBcnJheX0gW3Byb3BzXSBjb250YWluaW5nIHggYW5kIHkga2V5c1xuICogQHJldHVybiB7TnVtYmVyfSBkaXN0YW5jZVxuICovXG5mdW5jdGlvbiBnZXREaXN0YW5jZShwMSwgcDIsIHByb3BzKSB7XG4gICAgaWYgKCFwcm9wcykge1xuICAgICAgICBwcm9wcyA9IFBST1BTX1hZO1xuICAgIH1cbiAgICB2YXIgeCA9IHAyW3Byb3BzWzBdXSAtIHAxW3Byb3BzWzBdXSxcbiAgICAgICAgeSA9IHAyW3Byb3BzWzFdXSAtIHAxW3Byb3BzWzFdXTtcblxuICAgIHJldHVybiBNYXRoLnNxcnQoKHggKiB4KSArICh5ICogeSkpO1xufVxuXG4vKipcbiAqIGNhbGN1bGF0ZSB0aGUgYW5nbGUgYmV0d2VlbiB0d28gY29vcmRpbmF0ZXNcbiAqIEBwYXJhbSB7T2JqZWN0fSBwMVxuICogQHBhcmFtIHtPYmplY3R9IHAyXG4gKiBAcGFyYW0ge0FycmF5fSBbcHJvcHNdIGNvbnRhaW5pbmcgeCBhbmQgeSBrZXlzXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IGFuZ2xlXG4gKi9cbmZ1bmN0aW9uIGdldEFuZ2xlKHAxLCBwMiwgcHJvcHMpIHtcbiAgICBpZiAoIXByb3BzKSB7XG4gICAgICAgIHByb3BzID0gUFJPUFNfWFk7XG4gICAgfVxuICAgIHZhciB4ID0gcDJbcHJvcHNbMF1dIC0gcDFbcHJvcHNbMF1dLFxuICAgICAgICB5ID0gcDJbcHJvcHNbMV1dIC0gcDFbcHJvcHNbMV1dO1xuICAgIHJldHVybiBNYXRoLmF0YW4yKHksIHgpICogMTgwIC8gTWF0aC5QSTtcbn1cblxuLyoqXG4gKiBjYWxjdWxhdGUgdGhlIHJvdGF0aW9uIGRlZ3JlZXMgYmV0d2VlbiB0d28gcG9pbnRlcnNldHNcbiAqIEBwYXJhbSB7QXJyYXl9IHN0YXJ0IGFycmF5IG9mIHBvaW50ZXJzXG4gKiBAcGFyYW0ge0FycmF5fSBlbmQgYXJyYXkgb2YgcG9pbnRlcnNcbiAqIEByZXR1cm4ge051bWJlcn0gcm90YXRpb25cbiAqL1xuZnVuY3Rpb24gZ2V0Um90YXRpb24oc3RhcnQsIGVuZCkge1xuICAgIHJldHVybiBnZXRBbmdsZShlbmRbMV0sIGVuZFswXSwgUFJPUFNfQ0xJRU5UX1hZKSArIGdldEFuZ2xlKHN0YXJ0WzFdLCBzdGFydFswXSwgUFJPUFNfQ0xJRU5UX1hZKTtcbn1cblxuLyoqXG4gKiBjYWxjdWxhdGUgdGhlIHNjYWxlIGZhY3RvciBiZXR3ZWVuIHR3byBwb2ludGVyc2V0c1xuICogbm8gc2NhbGUgaXMgMSwgYW5kIGdvZXMgZG93biB0byAwIHdoZW4gcGluY2hlZCB0b2dldGhlciwgYW5kIGJpZ2dlciB3aGVuIHBpbmNoZWQgb3V0XG4gKiBAcGFyYW0ge0FycmF5fSBzdGFydCBhcnJheSBvZiBwb2ludGVyc1xuICogQHBhcmFtIHtBcnJheX0gZW5kIGFycmF5IG9mIHBvaW50ZXJzXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IHNjYWxlXG4gKi9cbmZ1bmN0aW9uIGdldFNjYWxlKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gZ2V0RGlzdGFuY2UoZW5kWzBdLCBlbmRbMV0sIFBST1BTX0NMSUVOVF9YWSkgLyBnZXREaXN0YW5jZShzdGFydFswXSwgc3RhcnRbMV0sIFBST1BTX0NMSUVOVF9YWSk7XG59XG5cbnZhciBNT1VTRV9JTlBVVF9NQVAgPSB7XG4gICAgbW91c2Vkb3duOiBJTlBVVF9TVEFSVCxcbiAgICBtb3VzZW1vdmU6IElOUFVUX01PVkUsXG4gICAgbW91c2V1cDogSU5QVVRfRU5EXG59O1xuXG52YXIgTU9VU0VfRUxFTUVOVF9FVkVOVFMgPSAnbW91c2Vkb3duJztcbnZhciBNT1VTRV9XSU5ET1dfRVZFTlRTID0gJ21vdXNlbW92ZSBtb3VzZXVwJztcblxuLyoqXG4gKiBNb3VzZSBldmVudHMgaW5wdXRcbiAqIEBjb25zdHJ1Y3RvclxuICogQGV4dGVuZHMgSW5wdXRcbiAqL1xuZnVuY3Rpb24gTW91c2VJbnB1dCgpIHtcbiAgICB0aGlzLmV2RWwgPSBNT1VTRV9FTEVNRU5UX0VWRU5UUztcbiAgICB0aGlzLmV2V2luID0gTU9VU0VfV0lORE9XX0VWRU5UUztcblxuICAgIHRoaXMuYWxsb3cgPSB0cnVlOyAvLyB1c2VkIGJ5IElucHV0LlRvdWNoTW91c2UgdG8gZGlzYWJsZSBtb3VzZSBldmVudHNcbiAgICB0aGlzLnByZXNzZWQgPSBmYWxzZTsgLy8gbW91c2Vkb3duIHN0YXRlXG5cbiAgICBJbnB1dC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG5pbmhlcml0KE1vdXNlSW5wdXQsIElucHV0LCB7XG4gICAgLyoqXG4gICAgICogaGFuZGxlIG1vdXNlIGV2ZW50c1xuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgICAqL1xuICAgIGhhbmRsZXI6IGZ1bmN0aW9uIE1FaGFuZGxlcihldikge1xuICAgICAgICB2YXIgZXZlbnRUeXBlID0gTU9VU0VfSU5QVVRfTUFQW2V2LnR5cGVdO1xuXG4gICAgICAgIC8vIG9uIHN0YXJ0IHdlIHdhbnQgdG8gaGF2ZSB0aGUgbGVmdCBtb3VzZSBidXR0b24gZG93blxuICAgICAgICBpZiAoZXZlbnRUeXBlICYgSU5QVVRfU1RBUlQgJiYgZXYuYnV0dG9uID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLnByZXNzZWQgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGV2ZW50VHlwZSAmIElOUFVUX01PVkUgJiYgZXYud2hpY2ggIT09IDEpIHtcbiAgICAgICAgICAgIGV2ZW50VHlwZSA9IElOUFVUX0VORDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG1vdXNlIG11c3QgYmUgZG93biwgYW5kIG1vdXNlIGV2ZW50cyBhcmUgYWxsb3dlZCAoc2VlIHRoZSBUb3VjaE1vdXNlIGlucHV0KVxuICAgICAgICBpZiAoIXRoaXMucHJlc3NlZCB8fCAhdGhpcy5hbGxvdykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGV2ZW50VHlwZSAmIElOUFVUX0VORCkge1xuICAgICAgICAgICAgdGhpcy5wcmVzc2VkID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmNhbGxiYWNrKHRoaXMubWFuYWdlciwgZXZlbnRUeXBlLCB7XG4gICAgICAgICAgICBwb2ludGVyczogW2V2XSxcbiAgICAgICAgICAgIGNoYW5nZWRQb2ludGVyczogW2V2XSxcbiAgICAgICAgICAgIHBvaW50ZXJUeXBlOiBJTlBVVF9UWVBFX01PVVNFLFxuICAgICAgICAgICAgc3JjRXZlbnQ6IGV2XG4gICAgICAgIH0pO1xuICAgIH1cbn0pO1xuXG52YXIgUE9JTlRFUl9JTlBVVF9NQVAgPSB7XG4gICAgcG9pbnRlcmRvd246IElOUFVUX1NUQVJULFxuICAgIHBvaW50ZXJtb3ZlOiBJTlBVVF9NT1ZFLFxuICAgIHBvaW50ZXJ1cDogSU5QVVRfRU5ELFxuICAgIHBvaW50ZXJjYW5jZWw6IElOUFVUX0NBTkNFTCxcbiAgICBwb2ludGVyb3V0OiBJTlBVVF9DQU5DRUxcbn07XG5cbi8vIGluIElFMTAgdGhlIHBvaW50ZXIgdHlwZXMgaXMgZGVmaW5lZCBhcyBhbiBlbnVtXG52YXIgSUUxMF9QT0lOVEVSX1RZUEVfRU5VTSA9IHtcbiAgICAyOiBJTlBVVF9UWVBFX1RPVUNILFxuICAgIDM6IElOUFVUX1RZUEVfUEVOLFxuICAgIDQ6IElOUFVUX1RZUEVfTU9VU0UsXG4gICAgNTogSU5QVVRfVFlQRV9LSU5FQ1QgLy8gc2VlIGh0dHBzOi8vdHdpdHRlci5jb20vamFjb2Jyb3NzaS9zdGF0dXMvNDgwNTk2NDM4NDg5ODkwODE2XG59O1xuXG52YXIgUE9JTlRFUl9FTEVNRU5UX0VWRU5UUyA9ICdwb2ludGVyZG93bic7XG52YXIgUE9JTlRFUl9XSU5ET1dfRVZFTlRTID0gJ3BvaW50ZXJtb3ZlIHBvaW50ZXJ1cCBwb2ludGVyY2FuY2VsJztcblxuLy8gSUUxMCBoYXMgcHJlZml4ZWQgc3VwcG9ydCwgYW5kIGNhc2Utc2Vuc2l0aXZlXG5pZiAod2luZG93Lk1TUG9pbnRlckV2ZW50ICYmICF3aW5kb3cuUG9pbnRlckV2ZW50KSB7XG4gICAgUE9JTlRFUl9FTEVNRU5UX0VWRU5UUyA9ICdNU1BvaW50ZXJEb3duJztcbiAgICBQT0lOVEVSX1dJTkRPV19FVkVOVFMgPSAnTVNQb2ludGVyTW92ZSBNU1BvaW50ZXJVcCBNU1BvaW50ZXJDYW5jZWwnO1xufVxuXG4vKipcbiAqIFBvaW50ZXIgZXZlbnRzIGlucHV0XG4gKiBAY29uc3RydWN0b3JcbiAqIEBleHRlbmRzIElucHV0XG4gKi9cbmZ1bmN0aW9uIFBvaW50ZXJFdmVudElucHV0KCkge1xuICAgIHRoaXMuZXZFbCA9IFBPSU5URVJfRUxFTUVOVF9FVkVOVFM7XG4gICAgdGhpcy5ldldpbiA9IFBPSU5URVJfV0lORE9XX0VWRU5UUztcblxuICAgIElucHV0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cbiAgICB0aGlzLnN0b3JlID0gKHRoaXMubWFuYWdlci5zZXNzaW9uLnBvaW50ZXJFdmVudHMgPSBbXSk7XG59XG5cbmluaGVyaXQoUG9pbnRlckV2ZW50SW5wdXQsIElucHV0LCB7XG4gICAgLyoqXG4gICAgICogaGFuZGxlIG1vdXNlIGV2ZW50c1xuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgICAqL1xuICAgIGhhbmRsZXI6IGZ1bmN0aW9uIFBFaGFuZGxlcihldikge1xuICAgICAgICB2YXIgc3RvcmUgPSB0aGlzLnN0b3JlO1xuICAgICAgICB2YXIgcmVtb3ZlUG9pbnRlciA9IGZhbHNlO1xuXG4gICAgICAgIHZhciBldmVudFR5cGVOb3JtYWxpemVkID0gZXYudHlwZS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoJ21zJywgJycpO1xuICAgICAgICB2YXIgZXZlbnRUeXBlID0gUE9JTlRFUl9JTlBVVF9NQVBbZXZlbnRUeXBlTm9ybWFsaXplZF07XG4gICAgICAgIHZhciBwb2ludGVyVHlwZSA9IElFMTBfUE9JTlRFUl9UWVBFX0VOVU1bZXYucG9pbnRlclR5cGVdIHx8IGV2LnBvaW50ZXJUeXBlO1xuXG4gICAgICAgIHZhciBpc1RvdWNoID0gKHBvaW50ZXJUeXBlID09IElOUFVUX1RZUEVfVE9VQ0gpO1xuXG4gICAgICAgIC8vIGdldCBpbmRleCBvZiB0aGUgZXZlbnQgaW4gdGhlIHN0b3JlXG4gICAgICAgIHZhciBzdG9yZUluZGV4ID0gaW5BcnJheShzdG9yZSwgZXYucG9pbnRlcklkLCAncG9pbnRlcklkJyk7XG5cbiAgICAgICAgLy8gc3RhcnQgYW5kIG1vdXNlIG11c3QgYmUgZG93blxuICAgICAgICBpZiAoZXZlbnRUeXBlICYgSU5QVVRfU1RBUlQgJiYgKGV2LmJ1dHRvbiA9PT0gMCB8fCBpc1RvdWNoKSkge1xuICAgICAgICAgICAgaWYgKHN0b3JlSW5kZXggPCAwKSB7XG4gICAgICAgICAgICAgICAgc3RvcmUucHVzaChldik7XG4gICAgICAgICAgICAgICAgc3RvcmVJbmRleCA9IHN0b3JlLmxlbmd0aCAtIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoZXZlbnRUeXBlICYgKElOUFVUX0VORCB8IElOUFVUX0NBTkNFTCkpIHtcbiAgICAgICAgICAgIHJlbW92ZVBvaW50ZXIgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaXQgbm90IGZvdW5kLCBzbyB0aGUgcG9pbnRlciBoYXNuJ3QgYmVlbiBkb3duIChzbyBpdCdzIHByb2JhYmx5IGEgaG92ZXIpXG4gICAgICAgIGlmIChzdG9yZUluZGV4IDwgMCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gdXBkYXRlIHRoZSBldmVudCBpbiB0aGUgc3RvcmVcbiAgICAgICAgc3RvcmVbc3RvcmVJbmRleF0gPSBldjtcblxuICAgICAgICB0aGlzLmNhbGxiYWNrKHRoaXMubWFuYWdlciwgZXZlbnRUeXBlLCB7XG4gICAgICAgICAgICBwb2ludGVyczogc3RvcmUsXG4gICAgICAgICAgICBjaGFuZ2VkUG9pbnRlcnM6IFtldl0sXG4gICAgICAgICAgICBwb2ludGVyVHlwZTogcG9pbnRlclR5cGUsXG4gICAgICAgICAgICBzcmNFdmVudDogZXZcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKHJlbW92ZVBvaW50ZXIpIHtcbiAgICAgICAgICAgIC8vIHJlbW92ZSBmcm9tIHRoZSBzdG9yZVxuICAgICAgICAgICAgc3RvcmUuc3BsaWNlKHN0b3JlSW5kZXgsIDEpO1xuICAgICAgICB9XG4gICAgfVxufSk7XG5cbnZhciBTSU5HTEVfVE9VQ0hfSU5QVVRfTUFQID0ge1xuICAgIHRvdWNoc3RhcnQ6IElOUFVUX1NUQVJULFxuICAgIHRvdWNobW92ZTogSU5QVVRfTU9WRSxcbiAgICB0b3VjaGVuZDogSU5QVVRfRU5ELFxuICAgIHRvdWNoY2FuY2VsOiBJTlBVVF9DQU5DRUxcbn07XG5cbnZhciBTSU5HTEVfVE9VQ0hfVEFSR0VUX0VWRU5UUyA9ICd0b3VjaHN0YXJ0JztcbnZhciBTSU5HTEVfVE9VQ0hfV0lORE9XX0VWRU5UUyA9ICd0b3VjaHN0YXJ0IHRvdWNobW92ZSB0b3VjaGVuZCB0b3VjaGNhbmNlbCc7XG5cbi8qKlxuICogVG91Y2ggZXZlbnRzIGlucHV0XG4gKiBAY29uc3RydWN0b3JcbiAqIEBleHRlbmRzIElucHV0XG4gKi9cbmZ1bmN0aW9uIFNpbmdsZVRvdWNoSW5wdXQoKSB7XG4gICAgdGhpcy5ldlRhcmdldCA9IFNJTkdMRV9UT1VDSF9UQVJHRVRfRVZFTlRTO1xuICAgIHRoaXMuZXZXaW4gPSBTSU5HTEVfVE9VQ0hfV0lORE9XX0VWRU5UUztcbiAgICB0aGlzLnN0YXJ0ZWQgPSBmYWxzZTtcblxuICAgIElucHV0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbmluaGVyaXQoU2luZ2xlVG91Y2hJbnB1dCwgSW5wdXQsIHtcbiAgICBoYW5kbGVyOiBmdW5jdGlvbiBURWhhbmRsZXIoZXYpIHtcbiAgICAgICAgdmFyIHR5cGUgPSBTSU5HTEVfVE9VQ0hfSU5QVVRfTUFQW2V2LnR5cGVdO1xuXG4gICAgICAgIC8vIHNob3VsZCB3ZSBoYW5kbGUgdGhlIHRvdWNoIGV2ZW50cz9cbiAgICAgICAgaWYgKHR5cGUgPT09IElOUFVUX1NUQVJUKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCF0aGlzLnN0YXJ0ZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciB0b3VjaGVzID0gbm9ybWFsaXplU2luZ2xlVG91Y2hlcy5jYWxsKHRoaXMsIGV2LCB0eXBlKTtcblxuICAgICAgICAvLyB3aGVuIGRvbmUsIHJlc2V0IHRoZSBzdGFydGVkIHN0YXRlXG4gICAgICAgIGlmICh0eXBlICYgKElOUFVUX0VORCB8IElOUFVUX0NBTkNFTCkgJiYgdG91Y2hlc1swXS5sZW5ndGggLSB0b3VjaGVzWzFdLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5zdGFydGVkID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmNhbGxiYWNrKHRoaXMubWFuYWdlciwgdHlwZSwge1xuICAgICAgICAgICAgcG9pbnRlcnM6IHRvdWNoZXNbMF0sXG4gICAgICAgICAgICBjaGFuZ2VkUG9pbnRlcnM6IHRvdWNoZXNbMV0sXG4gICAgICAgICAgICBwb2ludGVyVHlwZTogSU5QVVRfVFlQRV9UT1VDSCxcbiAgICAgICAgICAgIHNyY0V2ZW50OiBldlxuICAgICAgICB9KTtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBAdGhpcyB7VG91Y2hJbnB1dH1cbiAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICogQHBhcmFtIHtOdW1iZXJ9IHR5cGUgZmxhZ1xuICogQHJldHVybnMge3VuZGVmaW5lZHxBcnJheX0gW2FsbCwgY2hhbmdlZF1cbiAqL1xuZnVuY3Rpb24gbm9ybWFsaXplU2luZ2xlVG91Y2hlcyhldiwgdHlwZSkge1xuICAgIHZhciBhbGwgPSB0b0FycmF5KGV2LnRvdWNoZXMpO1xuICAgIHZhciBjaGFuZ2VkID0gdG9BcnJheShldi5jaGFuZ2VkVG91Y2hlcyk7XG5cbiAgICBpZiAodHlwZSAmIChJTlBVVF9FTkQgfCBJTlBVVF9DQU5DRUwpKSB7XG4gICAgICAgIGFsbCA9IHVuaXF1ZUFycmF5KGFsbC5jb25jYXQoY2hhbmdlZCksICdpZGVudGlmaWVyJywgdHJ1ZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFthbGwsIGNoYW5nZWRdO1xufVxuXG52YXIgVE9VQ0hfSU5QVVRfTUFQID0ge1xuICAgIHRvdWNoc3RhcnQ6IElOUFVUX1NUQVJULFxuICAgIHRvdWNobW92ZTogSU5QVVRfTU9WRSxcbiAgICB0b3VjaGVuZDogSU5QVVRfRU5ELFxuICAgIHRvdWNoY2FuY2VsOiBJTlBVVF9DQU5DRUxcbn07XG5cbnZhciBUT1VDSF9UQVJHRVRfRVZFTlRTID0gJ3RvdWNoc3RhcnQgdG91Y2htb3ZlIHRvdWNoZW5kIHRvdWNoY2FuY2VsJztcblxuLyoqXG4gKiBNdWx0aS11c2VyIHRvdWNoIGV2ZW50cyBpbnB1dFxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBJbnB1dFxuICovXG5mdW5jdGlvbiBUb3VjaElucHV0KCkge1xuICAgIHRoaXMuZXZUYXJnZXQgPSBUT1VDSF9UQVJHRVRfRVZFTlRTO1xuICAgIHRoaXMudGFyZ2V0SWRzID0ge307XG5cbiAgICBJbnB1dC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG5pbmhlcml0KFRvdWNoSW5wdXQsIElucHV0LCB7XG4gICAgaGFuZGxlcjogZnVuY3Rpb24gTVRFaGFuZGxlcihldikge1xuICAgICAgICB2YXIgdHlwZSA9IFRPVUNIX0lOUFVUX01BUFtldi50eXBlXTtcbiAgICAgICAgdmFyIHRvdWNoZXMgPSBnZXRUb3VjaGVzLmNhbGwodGhpcywgZXYsIHR5cGUpO1xuICAgICAgICBpZiAoIXRvdWNoZXMpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuY2FsbGJhY2sodGhpcy5tYW5hZ2VyLCB0eXBlLCB7XG4gICAgICAgICAgICBwb2ludGVyczogdG91Y2hlc1swXSxcbiAgICAgICAgICAgIGNoYW5nZWRQb2ludGVyczogdG91Y2hlc1sxXSxcbiAgICAgICAgICAgIHBvaW50ZXJUeXBlOiBJTlBVVF9UWVBFX1RPVUNILFxuICAgICAgICAgICAgc3JjRXZlbnQ6IGV2XG4gICAgICAgIH0pO1xuICAgIH1cbn0pO1xuXG4vKipcbiAqIEB0aGlzIHtUb3VjaElucHV0fVxuICogQHBhcmFtIHtPYmplY3R9IGV2XG4gKiBAcGFyYW0ge051bWJlcn0gdHlwZSBmbGFnXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfEFycmF5fSBbYWxsLCBjaGFuZ2VkXVxuICovXG5mdW5jdGlvbiBnZXRUb3VjaGVzKGV2LCB0eXBlKSB7XG4gICAgdmFyIGFsbFRvdWNoZXMgPSB0b0FycmF5KGV2LnRvdWNoZXMpO1xuICAgIHZhciB0YXJnZXRJZHMgPSB0aGlzLnRhcmdldElkcztcblxuICAgIC8vIHdoZW4gdGhlcmUgaXMgb25seSBvbmUgdG91Y2gsIHRoZSBwcm9jZXNzIGNhbiBiZSBzaW1wbGlmaWVkXG4gICAgaWYgKHR5cGUgJiAoSU5QVVRfU1RBUlQgfCBJTlBVVF9NT1ZFKSAmJiBhbGxUb3VjaGVzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICB0YXJnZXRJZHNbYWxsVG91Y2hlc1swXS5pZGVudGlmaWVyXSA9IHRydWU7XG4gICAgICAgIHJldHVybiBbYWxsVG91Y2hlcywgYWxsVG91Y2hlc107XG4gICAgfVxuXG4gICAgdmFyIGksXG4gICAgICAgIHRhcmdldFRvdWNoZXMsXG4gICAgICAgIGNoYW5nZWRUb3VjaGVzID0gdG9BcnJheShldi5jaGFuZ2VkVG91Y2hlcyksXG4gICAgICAgIGNoYW5nZWRUYXJnZXRUb3VjaGVzID0gW10sXG4gICAgICAgIHRhcmdldCA9IHRoaXMudGFyZ2V0O1xuXG4gICAgLy8gZ2V0IHRhcmdldCB0b3VjaGVzIGZyb20gdG91Y2hlc1xuICAgIHRhcmdldFRvdWNoZXMgPSBhbGxUb3VjaGVzLmZpbHRlcihmdW5jdGlvbih0b3VjaCkge1xuICAgICAgICByZXR1cm4gaGFzUGFyZW50KHRvdWNoLnRhcmdldCwgdGFyZ2V0KTtcbiAgICB9KTtcblxuICAgIC8vIGNvbGxlY3QgdG91Y2hlc1xuICAgIGlmICh0eXBlID09PSBJTlBVVF9TVEFSVCkge1xuICAgICAgICBpID0gMDtcbiAgICAgICAgd2hpbGUgKGkgPCB0YXJnZXRUb3VjaGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGFyZ2V0SWRzW3RhcmdldFRvdWNoZXNbaV0uaWRlbnRpZmllcl0gPSB0cnVlO1xuICAgICAgICAgICAgaSsrO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gZmlsdGVyIGNoYW5nZWQgdG91Y2hlcyB0byBvbmx5IGNvbnRhaW4gdG91Y2hlcyB0aGF0IGV4aXN0IGluIHRoZSBjb2xsZWN0ZWQgdGFyZ2V0IGlkc1xuICAgIGkgPSAwO1xuICAgIHdoaWxlIChpIDwgY2hhbmdlZFRvdWNoZXMubGVuZ3RoKSB7XG4gICAgICAgIGlmICh0YXJnZXRJZHNbY2hhbmdlZFRvdWNoZXNbaV0uaWRlbnRpZmllcl0pIHtcbiAgICAgICAgICAgIGNoYW5nZWRUYXJnZXRUb3VjaGVzLnB1c2goY2hhbmdlZFRvdWNoZXNbaV0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gY2xlYW51cCByZW1vdmVkIHRvdWNoZXNcbiAgICAgICAgaWYgKHR5cGUgJiAoSU5QVVRfRU5EIHwgSU5QVVRfQ0FOQ0VMKSkge1xuICAgICAgICAgICAgZGVsZXRlIHRhcmdldElkc1tjaGFuZ2VkVG91Y2hlc1tpXS5pZGVudGlmaWVyXTtcbiAgICAgICAgfVxuICAgICAgICBpKys7XG4gICAgfVxuXG4gICAgaWYgKCFjaGFuZ2VkVGFyZ2V0VG91Y2hlcy5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHJldHVybiBbXG4gICAgICAgIC8vIG1lcmdlIHRhcmdldFRvdWNoZXMgd2l0aCBjaGFuZ2VkVGFyZ2V0VG91Y2hlcyBzbyBpdCBjb250YWlucyBBTEwgdG91Y2hlcywgaW5jbHVkaW5nICdlbmQnIGFuZCAnY2FuY2VsJ1xuICAgICAgICB1bmlxdWVBcnJheSh0YXJnZXRUb3VjaGVzLmNvbmNhdChjaGFuZ2VkVGFyZ2V0VG91Y2hlcyksICdpZGVudGlmaWVyJywgdHJ1ZSksXG4gICAgICAgIGNoYW5nZWRUYXJnZXRUb3VjaGVzXG4gICAgXTtcbn1cblxuLyoqXG4gKiBDb21iaW5lZCB0b3VjaCBhbmQgbW91c2UgaW5wdXRcbiAqXG4gKiBUb3VjaCBoYXMgYSBoaWdoZXIgcHJpb3JpdHkgdGhlbiBtb3VzZSwgYW5kIHdoaWxlIHRvdWNoaW5nIG5vIG1vdXNlIGV2ZW50cyBhcmUgYWxsb3dlZC5cbiAqIFRoaXMgYmVjYXVzZSB0b3VjaCBkZXZpY2VzIGFsc28gZW1pdCBtb3VzZSBldmVudHMgd2hpbGUgZG9pbmcgYSB0b3VjaC5cbiAqXG4gKiBAY29uc3RydWN0b3JcbiAqIEBleHRlbmRzIElucHV0XG4gKi9cbmZ1bmN0aW9uIFRvdWNoTW91c2VJbnB1dCgpIHtcbiAgICBJbnB1dC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG4gICAgdmFyIGhhbmRsZXIgPSBiaW5kRm4odGhpcy5oYW5kbGVyLCB0aGlzKTtcbiAgICB0aGlzLnRvdWNoID0gbmV3IFRvdWNoSW5wdXQodGhpcy5tYW5hZ2VyLCBoYW5kbGVyKTtcbiAgICB0aGlzLm1vdXNlID0gbmV3IE1vdXNlSW5wdXQodGhpcy5tYW5hZ2VyLCBoYW5kbGVyKTtcbn1cblxuaW5oZXJpdChUb3VjaE1vdXNlSW5wdXQsIElucHV0LCB7XG4gICAgLyoqXG4gICAgICogaGFuZGxlIG1vdXNlIGFuZCB0b3VjaCBldmVudHNcbiAgICAgKiBAcGFyYW0ge0hhbW1lcn0gbWFuYWdlclxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBpbnB1dEV2ZW50XG4gICAgICogQHBhcmFtIHtPYmplY3R9IGlucHV0RGF0YVxuICAgICAqL1xuICAgIGhhbmRsZXI6IGZ1bmN0aW9uIFRNRWhhbmRsZXIobWFuYWdlciwgaW5wdXRFdmVudCwgaW5wdXREYXRhKSB7XG4gICAgICAgIHZhciBpc1RvdWNoID0gKGlucHV0RGF0YS5wb2ludGVyVHlwZSA9PSBJTlBVVF9UWVBFX1RPVUNIKSxcbiAgICAgICAgICAgIGlzTW91c2UgPSAoaW5wdXREYXRhLnBvaW50ZXJUeXBlID09IElOUFVUX1RZUEVfTU9VU0UpO1xuXG4gICAgICAgIC8vIHdoZW4gd2UncmUgaW4gYSB0b3VjaCBldmVudCwgc28gIGJsb2NrIGFsbCB1cGNvbWluZyBtb3VzZSBldmVudHNcbiAgICAgICAgLy8gbW9zdCBtb2JpbGUgYnJvd3NlciBhbHNvIGVtaXQgbW91c2VldmVudHMsIHJpZ2h0IGFmdGVyIHRvdWNoc3RhcnRcbiAgICAgICAgaWYgKGlzVG91Y2gpIHtcbiAgICAgICAgICAgIHRoaXMubW91c2UuYWxsb3cgPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIGlmIChpc01vdXNlICYmICF0aGlzLm1vdXNlLmFsbG93KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyByZXNldCB0aGUgYWxsb3dNb3VzZSB3aGVuIHdlJ3JlIGRvbmVcbiAgICAgICAgaWYgKGlucHV0RXZlbnQgJiAoSU5QVVRfRU5EIHwgSU5QVVRfQ0FOQ0VMKSkge1xuICAgICAgICAgICAgdGhpcy5tb3VzZS5hbGxvdyA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmNhbGxiYWNrKG1hbmFnZXIsIGlucHV0RXZlbnQsIGlucHV0RGF0YSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIHJlbW92ZSB0aGUgZXZlbnQgbGlzdGVuZXJzXG4gICAgICovXG4gICAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy50b3VjaC5kZXN0cm95KCk7XG4gICAgICAgIHRoaXMubW91c2UuZGVzdHJveSgpO1xuICAgIH1cbn0pO1xuXG52YXIgUFJFRklYRURfVE9VQ0hfQUNUSU9OID0gcHJlZml4ZWQoVEVTVF9FTEVNRU5ULnN0eWxlLCAndG91Y2hBY3Rpb24nKTtcbnZhciBOQVRJVkVfVE9VQ0hfQUNUSU9OID0gUFJFRklYRURfVE9VQ0hfQUNUSU9OICE9PSB1bmRlZmluZWQ7XG5cbi8vIG1hZ2ljYWwgdG91Y2hBY3Rpb24gdmFsdWVcbnZhciBUT1VDSF9BQ1RJT05fQ09NUFVURSA9ICdjb21wdXRlJztcbnZhciBUT1VDSF9BQ1RJT05fQVVUTyA9ICdhdXRvJztcbnZhciBUT1VDSF9BQ1RJT05fTUFOSVBVTEFUSU9OID0gJ21hbmlwdWxhdGlvbic7IC8vIG5vdCBpbXBsZW1lbnRlZFxudmFyIFRPVUNIX0FDVElPTl9OT05FID0gJ25vbmUnO1xudmFyIFRPVUNIX0FDVElPTl9QQU5fWCA9ICdwYW4teCc7XG52YXIgVE9VQ0hfQUNUSU9OX1BBTl9ZID0gJ3Bhbi15JztcblxuLyoqXG4gKiBUb3VjaCBBY3Rpb25cbiAqIHNldHMgdGhlIHRvdWNoQWN0aW9uIHByb3BlcnR5IG9yIHVzZXMgdGhlIGpzIGFsdGVybmF0aXZlXG4gKiBAcGFyYW0ge01hbmFnZXJ9IG1hbmFnZXJcbiAqIEBwYXJhbSB7U3RyaW5nfSB2YWx1ZVxuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIFRvdWNoQWN0aW9uKG1hbmFnZXIsIHZhbHVlKSB7XG4gICAgdGhpcy5tYW5hZ2VyID0gbWFuYWdlcjtcbiAgICB0aGlzLnNldCh2YWx1ZSk7XG59XG5cblRvdWNoQWN0aW9uLnByb3RvdHlwZSA9IHtcbiAgICAvKipcbiAgICAgKiBzZXQgdGhlIHRvdWNoQWN0aW9uIHZhbHVlIG9uIHRoZSBlbGVtZW50IG9yIGVuYWJsZSB0aGUgcG9seWZpbGxcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gdmFsdWVcbiAgICAgKi9cbiAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgIC8vIGZpbmQgb3V0IHRoZSB0b3VjaC1hY3Rpb24gYnkgdGhlIGV2ZW50IGhhbmRsZXJzXG4gICAgICAgIGlmICh2YWx1ZSA9PSBUT1VDSF9BQ1RJT05fQ09NUFVURSkge1xuICAgICAgICAgICAgdmFsdWUgPSB0aGlzLmNvbXB1dGUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChOQVRJVkVfVE9VQ0hfQUNUSU9OICYmIHRoaXMubWFuYWdlci5lbGVtZW50LnN0eWxlKSB7XG4gICAgICAgICAgICB0aGlzLm1hbmFnZXIuZWxlbWVudC5zdHlsZVtQUkVGSVhFRF9UT1VDSF9BQ1RJT05dID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hY3Rpb25zID0gdmFsdWUudG9Mb3dlckNhc2UoKS50cmltKCk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIGp1c3QgcmUtc2V0IHRoZSB0b3VjaEFjdGlvbiB2YWx1ZVxuICAgICAqL1xuICAgIHVwZGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuc2V0KHRoaXMubWFuYWdlci5vcHRpb25zLnRvdWNoQWN0aW9uKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogY29tcHV0ZSB0aGUgdmFsdWUgZm9yIHRoZSB0b3VjaEFjdGlvbiBwcm9wZXJ0eSBiYXNlZCBvbiB0aGUgcmVjb2duaXplcidzIHNldHRpbmdzXG4gICAgICogQHJldHVybnMge1N0cmluZ30gdmFsdWVcbiAgICAgKi9cbiAgICBjb21wdXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGFjdGlvbnMgPSBbXTtcbiAgICAgICAgZWFjaCh0aGlzLm1hbmFnZXIucmVjb2duaXplcnMsIGZ1bmN0aW9uKHJlY29nbml6ZXIpIHtcbiAgICAgICAgICAgIGlmIChib29sT3JGbihyZWNvZ25pemVyLm9wdGlvbnMuZW5hYmxlLCBbcmVjb2duaXplcl0pKSB7XG4gICAgICAgICAgICAgICAgYWN0aW9ucyA9IGFjdGlvbnMuY29uY2F0KHJlY29nbml6ZXIuZ2V0VG91Y2hBY3Rpb24oKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gY2xlYW5Ub3VjaEFjdGlvbnMoYWN0aW9ucy5qb2luKCcgJykpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiB0aGlzIG1ldGhvZCBpcyBjYWxsZWQgb24gZWFjaCBpbnB1dCBjeWNsZSBhbmQgcHJvdmlkZXMgdGhlIHByZXZlbnRpbmcgb2YgdGhlIGJyb3dzZXIgYmVoYXZpb3JcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gaW5wdXRcbiAgICAgKi9cbiAgICBwcmV2ZW50RGVmYXVsdHM6IGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIC8vIG5vdCBuZWVkZWQgd2l0aCBuYXRpdmUgc3VwcG9ydCBmb3IgdGhlIHRvdWNoQWN0aW9uIHByb3BlcnR5XG4gICAgICAgIGlmIChOQVRJVkVfVE9VQ0hfQUNUSU9OKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgc3JjRXZlbnQgPSBpbnB1dC5zcmNFdmVudDtcbiAgICAgICAgdmFyIGRpcmVjdGlvbiA9IGlucHV0Lm9mZnNldERpcmVjdGlvbjtcblxuICAgICAgICAvLyBpZiB0aGUgdG91Y2ggYWN0aW9uIGRpZCBwcmV2ZW50ZWQgb25jZSB0aGlzIHNlc3Npb25cbiAgICAgICAgaWYgKHRoaXMubWFuYWdlci5zZXNzaW9uLnByZXZlbnRlZCkge1xuICAgICAgICAgICAgc3JjRXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBhY3Rpb25zID0gdGhpcy5hY3Rpb25zO1xuICAgICAgICB2YXIgaGFzTm9uZSA9IGluU3RyKGFjdGlvbnMsIFRPVUNIX0FDVElPTl9OT05FKTtcbiAgICAgICAgdmFyIGhhc1BhblkgPSBpblN0cihhY3Rpb25zLCBUT1VDSF9BQ1RJT05fUEFOX1kpO1xuICAgICAgICB2YXIgaGFzUGFuWCA9IGluU3RyKGFjdGlvbnMsIFRPVUNIX0FDVElPTl9QQU5fWCk7XG5cbiAgICAgICAgaWYgKGhhc05vbmUpIHtcbiAgICAgICAgICAgIC8vZG8gbm90IHByZXZlbnQgZGVmYXVsdHMgaWYgdGhpcyBpcyBhIHRhcCBnZXN0dXJlXG5cbiAgICAgICAgICAgIHZhciBpc1RhcFBvaW50ZXIgPSBpbnB1dC5wb2ludGVycy5sZW5ndGggPT09IDE7XG4gICAgICAgICAgICB2YXIgaXNUYXBNb3ZlbWVudCA9IGlucHV0LmRpc3RhbmNlIDwgMjtcbiAgICAgICAgICAgIHZhciBpc1RhcFRvdWNoVGltZSA9IGlucHV0LmRlbHRhVGltZSA8IDI1MDtcblxuICAgICAgICAgICAgaWYgKGlzVGFwUG9pbnRlciAmJiBpc1RhcE1vdmVtZW50ICYmIGlzVGFwVG91Y2hUaW1lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGhhc1BhblggJiYgaGFzUGFuWSkge1xuICAgICAgICAgICAgLy8gYHBhbi14IHBhbi15YCBtZWFucyBicm93c2VyIGhhbmRsZXMgYWxsIHNjcm9sbGluZy9wYW5uaW5nLCBkbyBub3QgcHJldmVudFxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGhhc05vbmUgfHxcbiAgICAgICAgICAgIChoYXNQYW5ZICYmIGRpcmVjdGlvbiAmIERJUkVDVElPTl9IT1JJWk9OVEFMKSB8fFxuICAgICAgICAgICAgKGhhc1BhblggJiYgZGlyZWN0aW9uICYgRElSRUNUSU9OX1ZFUlRJQ0FMKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJldmVudFNyYyhzcmNFdmVudCk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogY2FsbCBwcmV2ZW50RGVmYXVsdCB0byBwcmV2ZW50IHRoZSBicm93c2VyJ3MgZGVmYXVsdCBiZWhhdmlvciAoc2Nyb2xsaW5nIGluIG1vc3QgY2FzZXMpXG4gICAgICogQHBhcmFtIHtPYmplY3R9IHNyY0V2ZW50XG4gICAgICovXG4gICAgcHJldmVudFNyYzogZnVuY3Rpb24oc3JjRXZlbnQpIHtcbiAgICAgICAgdGhpcy5tYW5hZ2VyLnNlc3Npb24ucHJldmVudGVkID0gdHJ1ZTtcbiAgICAgICAgc3JjRXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG59O1xuXG4vKipcbiAqIHdoZW4gdGhlIHRvdWNoQWN0aW9ucyBhcmUgY29sbGVjdGVkIHRoZXkgYXJlIG5vdCBhIHZhbGlkIHZhbHVlLCBzbyB3ZSBuZWVkIHRvIGNsZWFuIHRoaW5ncyB1cC4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGFjdGlvbnNcbiAqIEByZXR1cm5zIHsqfVxuICovXG5mdW5jdGlvbiBjbGVhblRvdWNoQWN0aW9ucyhhY3Rpb25zKSB7XG4gICAgLy8gbm9uZVxuICAgIGlmIChpblN0cihhY3Rpb25zLCBUT1VDSF9BQ1RJT05fTk9ORSkpIHtcbiAgICAgICAgcmV0dXJuIFRPVUNIX0FDVElPTl9OT05FO1xuICAgIH1cblxuICAgIHZhciBoYXNQYW5YID0gaW5TdHIoYWN0aW9ucywgVE9VQ0hfQUNUSU9OX1BBTl9YKTtcbiAgICB2YXIgaGFzUGFuWSA9IGluU3RyKGFjdGlvbnMsIFRPVUNIX0FDVElPTl9QQU5fWSk7XG5cbiAgICAvLyBpZiBib3RoIHBhbi14IGFuZCBwYW4teSBhcmUgc2V0IChkaWZmZXJlbnQgcmVjb2duaXplcnNcbiAgICAvLyBmb3IgZGlmZmVyZW50IGRpcmVjdGlvbnMsIGUuZy4gaG9yaXpvbnRhbCBwYW4gYnV0IHZlcnRpY2FsIHN3aXBlPylcbiAgICAvLyB3ZSBuZWVkIG5vbmUgKGFzIG90aGVyd2lzZSB3aXRoIHBhbi14IHBhbi15IGNvbWJpbmVkIG5vbmUgb2YgdGhlc2VcbiAgICAvLyByZWNvZ25pemVycyB3aWxsIHdvcmssIHNpbmNlIHRoZSBicm93c2VyIHdvdWxkIGhhbmRsZSBhbGwgcGFubmluZ1xuICAgIGlmIChoYXNQYW5YICYmIGhhc1BhblkpIHtcbiAgICAgICAgcmV0dXJuIFRPVUNIX0FDVElPTl9OT05FO1xuICAgIH1cblxuICAgIC8vIHBhbi14IE9SIHBhbi15XG4gICAgaWYgKGhhc1BhblggfHwgaGFzUGFuWSkge1xuICAgICAgICByZXR1cm4gaGFzUGFuWCA/IFRPVUNIX0FDVElPTl9QQU5fWCA6IFRPVUNIX0FDVElPTl9QQU5fWTtcbiAgICB9XG5cbiAgICAvLyBtYW5pcHVsYXRpb25cbiAgICBpZiAoaW5TdHIoYWN0aW9ucywgVE9VQ0hfQUNUSU9OX01BTklQVUxBVElPTikpIHtcbiAgICAgICAgcmV0dXJuIFRPVUNIX0FDVElPTl9NQU5JUFVMQVRJT047XG4gICAgfVxuXG4gICAgcmV0dXJuIFRPVUNIX0FDVElPTl9BVVRPO1xufVxuXG4vKipcbiAqIFJlY29nbml6ZXIgZmxvdyBleHBsYWluZWQ7ICpcbiAqIEFsbCByZWNvZ25pemVycyBoYXZlIHRoZSBpbml0aWFsIHN0YXRlIG9mIFBPU1NJQkxFIHdoZW4gYSBpbnB1dCBzZXNzaW9uIHN0YXJ0cy5cbiAqIFRoZSBkZWZpbml0aW9uIG9mIGEgaW5wdXQgc2Vzc2lvbiBpcyBmcm9tIHRoZSBmaXJzdCBpbnB1dCB1bnRpbCB0aGUgbGFzdCBpbnB1dCwgd2l0aCBhbGwgaXQncyBtb3ZlbWVudCBpbiBpdC4gKlxuICogRXhhbXBsZSBzZXNzaW9uIGZvciBtb3VzZS1pbnB1dDogbW91c2Vkb3duIC0+IG1vdXNlbW92ZSAtPiBtb3VzZXVwXG4gKlxuICogT24gZWFjaCByZWNvZ25pemluZyBjeWNsZSAoc2VlIE1hbmFnZXIucmVjb2duaXplKSB0aGUgLnJlY29nbml6ZSgpIG1ldGhvZCBpcyBleGVjdXRlZFxuICogd2hpY2ggZGV0ZXJtaW5lcyB3aXRoIHN0YXRlIGl0IHNob3VsZCBiZS5cbiAqXG4gKiBJZiB0aGUgcmVjb2duaXplciBoYXMgdGhlIHN0YXRlIEZBSUxFRCwgQ0FOQ0VMTEVEIG9yIFJFQ09HTklaRUQgKGVxdWFscyBFTkRFRCksIGl0IGlzIHJlc2V0IHRvXG4gKiBQT1NTSUJMRSB0byBnaXZlIGl0IGFub3RoZXIgY2hhbmdlIG9uIHRoZSBuZXh0IGN5Y2xlLlxuICpcbiAqICAgICAgICAgICAgICAgUG9zc2libGVcbiAqICAgICAgICAgICAgICAgICAgfFxuICogICAgICAgICAgICArLS0tLS0rLS0tLS0tLS0tLS0tLS0tK1xuICogICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgfFxuICogICAgICArLS0tLS0rLS0tLS0rICAgICAgICAgICAgICAgfFxuICogICAgICB8ICAgICAgICAgICB8ICAgICAgICAgICAgICAgfFxuICogICBGYWlsZWQgICAgICBDYW5jZWxsZWQgICAgICAgICAgfFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICstLS0tLS0tKy0tLS0tLStcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICB8XG4gKiAgICAgICAgICAgICAgICAgICAgICBSZWNvZ25pemVkICAgICAgIEJlZ2FuXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENoYW5nZWRcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFbmRlZC9SZWNvZ25pemVkXG4gKi9cbnZhciBTVEFURV9QT1NTSUJMRSA9IDE7XG52YXIgU1RBVEVfQkVHQU4gPSAyO1xudmFyIFNUQVRFX0NIQU5HRUQgPSA0O1xudmFyIFNUQVRFX0VOREVEID0gODtcbnZhciBTVEFURV9SRUNPR05JWkVEID0gU1RBVEVfRU5ERUQ7XG52YXIgU1RBVEVfQ0FOQ0VMTEVEID0gMTY7XG52YXIgU1RBVEVfRkFJTEVEID0gMzI7XG5cbi8qKlxuICogUmVjb2duaXplclxuICogRXZlcnkgcmVjb2duaXplciBuZWVkcyB0byBleHRlbmQgZnJvbSB0aGlzIGNsYXNzLlxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICovXG5mdW5jdGlvbiBSZWNvZ25pemVyKG9wdGlvbnMpIHtcbiAgICB0aGlzLm9wdGlvbnMgPSBhc3NpZ24oe30sIHRoaXMuZGVmYXVsdHMsIG9wdGlvbnMgfHwge30pO1xuXG4gICAgdGhpcy5pZCA9IHVuaXF1ZUlkKCk7XG5cbiAgICB0aGlzLm1hbmFnZXIgPSBudWxsO1xuXG4gICAgLy8gZGVmYXVsdCBpcyBlbmFibGUgdHJ1ZVxuICAgIHRoaXMub3B0aW9ucy5lbmFibGUgPSBpZlVuZGVmaW5lZCh0aGlzLm9wdGlvbnMuZW5hYmxlLCB0cnVlKTtcblxuICAgIHRoaXMuc3RhdGUgPSBTVEFURV9QT1NTSUJMRTtcblxuICAgIHRoaXMuc2ltdWx0YW5lb3VzID0ge307XG4gICAgdGhpcy5yZXF1aXJlRmFpbCA9IFtdO1xufVxuXG5SZWNvZ25pemVyLnByb3RvdHlwZSA9IHtcbiAgICAvKipcbiAgICAgKiBAdmlydHVhbFxuICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICovXG4gICAgZGVmYXVsdHM6IHt9LFxuXG4gICAgLyoqXG4gICAgICogc2V0IG9wdGlvbnNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgICAqIEByZXR1cm4ge1JlY29nbml6ZXJ9XG4gICAgICovXG4gICAgc2V0OiBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICAgIGFzc2lnbih0aGlzLm9wdGlvbnMsIG9wdGlvbnMpO1xuXG4gICAgICAgIC8vIGFsc28gdXBkYXRlIHRoZSB0b3VjaEFjdGlvbiwgaW4gY2FzZSBzb21ldGhpbmcgY2hhbmdlZCBhYm91dCB0aGUgZGlyZWN0aW9ucy9lbmFibGVkIHN0YXRlXG4gICAgICAgIHRoaXMubWFuYWdlciAmJiB0aGlzLm1hbmFnZXIudG91Y2hBY3Rpb24udXBkYXRlKCk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiByZWNvZ25pemUgc2ltdWx0YW5lb3VzIHdpdGggYW4gb3RoZXIgcmVjb2duaXplci5cbiAgICAgKiBAcGFyYW0ge1JlY29nbml6ZXJ9IG90aGVyUmVjb2duaXplclxuICAgICAqIEByZXR1cm5zIHtSZWNvZ25pemVyfSB0aGlzXG4gICAgICovXG4gICAgcmVjb2duaXplV2l0aDogZnVuY3Rpb24ob3RoZXJSZWNvZ25pemVyKSB7XG4gICAgICAgIGlmIChpbnZva2VBcnJheUFyZyhvdGhlclJlY29nbml6ZXIsICdyZWNvZ25pemVXaXRoJywgdGhpcykpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHNpbXVsdGFuZW91cyA9IHRoaXMuc2ltdWx0YW5lb3VzO1xuICAgICAgICBvdGhlclJlY29nbml6ZXIgPSBnZXRSZWNvZ25pemVyQnlOYW1lSWZNYW5hZ2VyKG90aGVyUmVjb2duaXplciwgdGhpcyk7XG4gICAgICAgIGlmICghc2ltdWx0YW5lb3VzW290aGVyUmVjb2duaXplci5pZF0pIHtcbiAgICAgICAgICAgIHNpbXVsdGFuZW91c1tvdGhlclJlY29nbml6ZXIuaWRdID0gb3RoZXJSZWNvZ25pemVyO1xuICAgICAgICAgICAgb3RoZXJSZWNvZ25pemVyLnJlY29nbml6ZVdpdGgodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIGRyb3AgdGhlIHNpbXVsdGFuZW91cyBsaW5rLiBpdCBkb2VzbnQgcmVtb3ZlIHRoZSBsaW5rIG9uIHRoZSBvdGhlciByZWNvZ25pemVyLlxuICAgICAqIEBwYXJhbSB7UmVjb2duaXplcn0gb3RoZXJSZWNvZ25pemVyXG4gICAgICogQHJldHVybnMge1JlY29nbml6ZXJ9IHRoaXNcbiAgICAgKi9cbiAgICBkcm9wUmVjb2duaXplV2l0aDogZnVuY3Rpb24ob3RoZXJSZWNvZ25pemVyKSB7XG4gICAgICAgIGlmIChpbnZva2VBcnJheUFyZyhvdGhlclJlY29nbml6ZXIsICdkcm9wUmVjb2duaXplV2l0aCcsIHRoaXMpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuXG4gICAgICAgIG90aGVyUmVjb2duaXplciA9IGdldFJlY29nbml6ZXJCeU5hbWVJZk1hbmFnZXIob3RoZXJSZWNvZ25pemVyLCB0aGlzKTtcbiAgICAgICAgZGVsZXRlIHRoaXMuc2ltdWx0YW5lb3VzW290aGVyUmVjb2duaXplci5pZF07XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiByZWNvZ25pemVyIGNhbiBvbmx5IHJ1biB3aGVuIGFuIG90aGVyIGlzIGZhaWxpbmdcbiAgICAgKiBAcGFyYW0ge1JlY29nbml6ZXJ9IG90aGVyUmVjb2duaXplclxuICAgICAqIEByZXR1cm5zIHtSZWNvZ25pemVyfSB0aGlzXG4gICAgICovXG4gICAgcmVxdWlyZUZhaWx1cmU6IGZ1bmN0aW9uKG90aGVyUmVjb2duaXplcikge1xuICAgICAgICBpZiAoaW52b2tlQXJyYXlBcmcob3RoZXJSZWNvZ25pemVyLCAncmVxdWlyZUZhaWx1cmUnLCB0aGlzKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcmVxdWlyZUZhaWwgPSB0aGlzLnJlcXVpcmVGYWlsO1xuICAgICAgICBvdGhlclJlY29nbml6ZXIgPSBnZXRSZWNvZ25pemVyQnlOYW1lSWZNYW5hZ2VyKG90aGVyUmVjb2duaXplciwgdGhpcyk7XG4gICAgICAgIGlmIChpbkFycmF5KHJlcXVpcmVGYWlsLCBvdGhlclJlY29nbml6ZXIpID09PSAtMSkge1xuICAgICAgICAgICAgcmVxdWlyZUZhaWwucHVzaChvdGhlclJlY29nbml6ZXIpO1xuICAgICAgICAgICAgb3RoZXJSZWNvZ25pemVyLnJlcXVpcmVGYWlsdXJlKHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBkcm9wIHRoZSByZXF1aXJlRmFpbHVyZSBsaW5rLiBpdCBkb2VzIG5vdCByZW1vdmUgdGhlIGxpbmsgb24gdGhlIG90aGVyIHJlY29nbml6ZXIuXG4gICAgICogQHBhcmFtIHtSZWNvZ25pemVyfSBvdGhlclJlY29nbml6ZXJcbiAgICAgKiBAcmV0dXJucyB7UmVjb2duaXplcn0gdGhpc1xuICAgICAqL1xuICAgIGRyb3BSZXF1aXJlRmFpbHVyZTogZnVuY3Rpb24ob3RoZXJSZWNvZ25pemVyKSB7XG4gICAgICAgIGlmIChpbnZva2VBcnJheUFyZyhvdGhlclJlY29nbml6ZXIsICdkcm9wUmVxdWlyZUZhaWx1cmUnLCB0aGlzKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cblxuICAgICAgICBvdGhlclJlY29nbml6ZXIgPSBnZXRSZWNvZ25pemVyQnlOYW1lSWZNYW5hZ2VyKG90aGVyUmVjb2duaXplciwgdGhpcyk7XG4gICAgICAgIHZhciBpbmRleCA9IGluQXJyYXkodGhpcy5yZXF1aXJlRmFpbCwgb3RoZXJSZWNvZ25pemVyKTtcbiAgICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgICAgIHRoaXMucmVxdWlyZUZhaWwuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogaGFzIHJlcXVpcmUgZmFpbHVyZXMgYm9vbGVhblxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIGhhc1JlcXVpcmVGYWlsdXJlczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlcXVpcmVGYWlsLmxlbmd0aCA+IDA7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIGlmIHRoZSByZWNvZ25pemVyIGNhbiByZWNvZ25pemUgc2ltdWx0YW5lb3VzIHdpdGggYW4gb3RoZXIgcmVjb2duaXplclxuICAgICAqIEBwYXJhbSB7UmVjb2duaXplcn0gb3RoZXJSZWNvZ25pemVyXG4gICAgICogQHJldHVybnMge0Jvb2xlYW59XG4gICAgICovXG4gICAgY2FuUmVjb2duaXplV2l0aDogZnVuY3Rpb24ob3RoZXJSZWNvZ25pemVyKSB7XG4gICAgICAgIHJldHVybiAhIXRoaXMuc2ltdWx0YW5lb3VzW290aGVyUmVjb2duaXplci5pZF07XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFlvdSBzaG91bGQgdXNlIGB0cnlFbWl0YCBpbnN0ZWFkIG9mIGBlbWl0YCBkaXJlY3RseSB0byBjaGVja1xuICAgICAqIHRoYXQgYWxsIHRoZSBuZWVkZWQgcmVjb2duaXplcnMgaGFzIGZhaWxlZCBiZWZvcmUgZW1pdHRpbmcuXG4gICAgICogQHBhcmFtIHtPYmplY3R9IGlucHV0XG4gICAgICovXG4gICAgZW1pdDogZnVuY3Rpb24oaW5wdXQpIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICB2YXIgc3RhdGUgPSB0aGlzLnN0YXRlO1xuXG4gICAgICAgIGZ1bmN0aW9uIGVtaXQoZXZlbnQpIHtcbiAgICAgICAgICAgIHNlbGYubWFuYWdlci5lbWl0KGV2ZW50LCBpbnB1dCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyAncGFuc3RhcnQnIGFuZCAncGFubW92ZSdcbiAgICAgICAgaWYgKHN0YXRlIDwgU1RBVEVfRU5ERUQpIHtcbiAgICAgICAgICAgIGVtaXQoc2VsZi5vcHRpb25zLmV2ZW50ICsgc3RhdGVTdHIoc3RhdGUpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGVtaXQoc2VsZi5vcHRpb25zLmV2ZW50KTsgLy8gc2ltcGxlICdldmVudE5hbWUnIGV2ZW50c1xuXG4gICAgICAgIGlmIChpbnB1dC5hZGRpdGlvbmFsRXZlbnQpIHsgLy8gYWRkaXRpb25hbCBldmVudChwYW5sZWZ0LCBwYW5yaWdodCwgcGluY2hpbiwgcGluY2hvdXQuLi4pXG4gICAgICAgICAgICBlbWl0KGlucHV0LmFkZGl0aW9uYWxFdmVudCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBwYW5lbmQgYW5kIHBhbmNhbmNlbFxuICAgICAgICBpZiAoc3RhdGUgPj0gU1RBVEVfRU5ERUQpIHtcbiAgICAgICAgICAgIGVtaXQoc2VsZi5vcHRpb25zLmV2ZW50ICsgc3RhdGVTdHIoc3RhdGUpKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDaGVjayB0aGF0IGFsbCB0aGUgcmVxdWlyZSBmYWlsdXJlIHJlY29nbml6ZXJzIGhhcyBmYWlsZWQsXG4gICAgICogaWYgdHJ1ZSwgaXQgZW1pdHMgYSBnZXN0dXJlIGV2ZW50LFxuICAgICAqIG90aGVyd2lzZSwgc2V0dXAgdGhlIHN0YXRlIHRvIEZBSUxFRC5cbiAgICAgKiBAcGFyYW0ge09iamVjdH0gaW5wdXRcbiAgICAgKi9cbiAgICB0cnlFbWl0OiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICBpZiAodGhpcy5jYW5FbWl0KCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmVtaXQoaW5wdXQpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGl0J3MgZmFpbGluZyBhbnl3YXlcbiAgICAgICAgdGhpcy5zdGF0ZSA9IFNUQVRFX0ZBSUxFRDtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogY2FuIHdlIGVtaXQ/XG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICAgY2FuRW1pdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBpID0gMDtcbiAgICAgICAgd2hpbGUgKGkgPCB0aGlzLnJlcXVpcmVGYWlsLmxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKCEodGhpcy5yZXF1aXJlRmFpbFtpXS5zdGF0ZSAmIChTVEFURV9GQUlMRUQgfCBTVEFURV9QT1NTSUJMRSkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaSsrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiB1cGRhdGUgdGhlIHJlY29nbml6ZXJcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gaW5wdXREYXRhXG4gICAgICovXG4gICAgcmVjb2duaXplOiBmdW5jdGlvbihpbnB1dERhdGEpIHtcbiAgICAgICAgLy8gbWFrZSBhIG5ldyBjb3B5IG9mIHRoZSBpbnB1dERhdGFcbiAgICAgICAgLy8gc28gd2UgY2FuIGNoYW5nZSB0aGUgaW5wdXREYXRhIHdpdGhvdXQgbWVzc2luZyB1cCB0aGUgb3RoZXIgcmVjb2duaXplcnNcbiAgICAgICAgdmFyIGlucHV0RGF0YUNsb25lID0gYXNzaWduKHt9LCBpbnB1dERhdGEpO1xuXG4gICAgICAgIC8vIGlzIGlzIGVuYWJsZWQgYW5kIGFsbG93IHJlY29nbml6aW5nP1xuICAgICAgICBpZiAoIWJvb2xPckZuKHRoaXMub3B0aW9ucy5lbmFibGUsIFt0aGlzLCBpbnB1dERhdGFDbG9uZV0pKSB7XG4gICAgICAgICAgICB0aGlzLnJlc2V0KCk7XG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gU1RBVEVfRkFJTEVEO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcmVzZXQgd2hlbiB3ZSd2ZSByZWFjaGVkIHRoZSBlbmRcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUgJiAoU1RBVEVfUkVDT0dOSVpFRCB8IFNUQVRFX0NBTkNFTExFRCB8IFNUQVRFX0ZBSUxFRCkpIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBTVEFURV9QT1NTSUJMRTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc3RhdGUgPSB0aGlzLnByb2Nlc3MoaW5wdXREYXRhQ2xvbmUpO1xuXG4gICAgICAgIC8vIHRoZSByZWNvZ25pemVyIGhhcyByZWNvZ25pemVkIGEgZ2VzdHVyZVxuICAgICAgICAvLyBzbyB0cmlnZ2VyIGFuIGV2ZW50XG4gICAgICAgIGlmICh0aGlzLnN0YXRlICYgKFNUQVRFX0JFR0FOIHwgU1RBVEVfQ0hBTkdFRCB8IFNUQVRFX0VOREVEIHwgU1RBVEVfQ0FOQ0VMTEVEKSkge1xuICAgICAgICAgICAgdGhpcy50cnlFbWl0KGlucHV0RGF0YUNsb25lKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiByZXR1cm4gdGhlIHN0YXRlIG9mIHRoZSByZWNvZ25pemVyXG4gICAgICogdGhlIGFjdHVhbCByZWNvZ25pemluZyBoYXBwZW5zIGluIHRoaXMgbWV0aG9kXG4gICAgICogQHZpcnR1YWxcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gaW5wdXREYXRhXG4gICAgICogQHJldHVybnMge0NvbnN0fSBTVEFURVxuICAgICAqL1xuICAgIHByb2Nlc3M6IGZ1bmN0aW9uKGlucHV0RGF0YSkgeyB9LCAvLyBqc2hpbnQgaWdub3JlOmxpbmVcblxuICAgIC8qKlxuICAgICAqIHJldHVybiB0aGUgcHJlZmVycmVkIHRvdWNoLWFjdGlvblxuICAgICAqIEB2aXJ0dWFsXG4gICAgICogQHJldHVybnMge0FycmF5fVxuICAgICAqL1xuICAgIGdldFRvdWNoQWN0aW9uOiBmdW5jdGlvbigpIHsgfSxcblxuICAgIC8qKlxuICAgICAqIGNhbGxlZCB3aGVuIHRoZSBnZXN0dXJlIGlzbid0IGFsbG93ZWQgdG8gcmVjb2duaXplXG4gICAgICogbGlrZSB3aGVuIGFub3RoZXIgaXMgYmVpbmcgcmVjb2duaXplZCBvciBpdCBpcyBkaXNhYmxlZFxuICAgICAqIEB2aXJ0dWFsXG4gICAgICovXG4gICAgcmVzZXQ6IGZ1bmN0aW9uKCkgeyB9XG59O1xuXG4vKipcbiAqIGdldCBhIHVzYWJsZSBzdHJpbmcsIHVzZWQgYXMgZXZlbnQgcG9zdGZpeFxuICogQHBhcmFtIHtDb25zdH0gc3RhdGVcbiAqIEByZXR1cm5zIHtTdHJpbmd9IHN0YXRlXG4gKi9cbmZ1bmN0aW9uIHN0YXRlU3RyKHN0YXRlKSB7XG4gICAgaWYgKHN0YXRlICYgU1RBVEVfQ0FOQ0VMTEVEKSB7XG4gICAgICAgIHJldHVybiAnY2FuY2VsJztcbiAgICB9IGVsc2UgaWYgKHN0YXRlICYgU1RBVEVfRU5ERUQpIHtcbiAgICAgICAgcmV0dXJuICdlbmQnO1xuICAgIH0gZWxzZSBpZiAoc3RhdGUgJiBTVEFURV9DSEFOR0VEKSB7XG4gICAgICAgIHJldHVybiAnbW92ZSc7XG4gICAgfSBlbHNlIGlmIChzdGF0ZSAmIFNUQVRFX0JFR0FOKSB7XG4gICAgICAgIHJldHVybiAnc3RhcnQnO1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG59XG5cbi8qKlxuICogZGlyZWN0aW9uIGNvbnMgdG8gc3RyaW5nXG4gKiBAcGFyYW0ge0NvbnN0fSBkaXJlY3Rpb25cbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGRpcmVjdGlvblN0cihkaXJlY3Rpb24pIHtcbiAgICBpZiAoZGlyZWN0aW9uID09IERJUkVDVElPTl9ET1dOKSB7XG4gICAgICAgIHJldHVybiAnZG93bic7XG4gICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT0gRElSRUNUSU9OX1VQKSB7XG4gICAgICAgIHJldHVybiAndXAnO1xuICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09IERJUkVDVElPTl9MRUZUKSB7XG4gICAgICAgIHJldHVybiAnbGVmdCc7XG4gICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT0gRElSRUNUSU9OX1JJR0hUKSB7XG4gICAgICAgIHJldHVybiAncmlnaHQnO1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG59XG5cbi8qKlxuICogZ2V0IGEgcmVjb2duaXplciBieSBuYW1lIGlmIGl0IGlzIGJvdW5kIHRvIGEgbWFuYWdlclxuICogQHBhcmFtIHtSZWNvZ25pemVyfFN0cmluZ30gb3RoZXJSZWNvZ25pemVyXG4gKiBAcGFyYW0ge1JlY29nbml6ZXJ9IHJlY29nbml6ZXJcbiAqIEByZXR1cm5zIHtSZWNvZ25pemVyfVxuICovXG5mdW5jdGlvbiBnZXRSZWNvZ25pemVyQnlOYW1lSWZNYW5hZ2VyKG90aGVyUmVjb2duaXplciwgcmVjb2duaXplcikge1xuICAgIHZhciBtYW5hZ2VyID0gcmVjb2duaXplci5tYW5hZ2VyO1xuICAgIGlmIChtYW5hZ2VyKSB7XG4gICAgICAgIHJldHVybiBtYW5hZ2VyLmdldChvdGhlclJlY29nbml6ZXIpO1xuICAgIH1cbiAgICByZXR1cm4gb3RoZXJSZWNvZ25pemVyO1xufVxuXG4vKipcbiAqIFRoaXMgcmVjb2duaXplciBpcyBqdXN0IHVzZWQgYXMgYSBiYXNlIGZvciB0aGUgc2ltcGxlIGF0dHJpYnV0ZSByZWNvZ25pemVycy5cbiAqIEBjb25zdHJ1Y3RvclxuICogQGV4dGVuZHMgUmVjb2duaXplclxuICovXG5mdW5jdGlvbiBBdHRyUmVjb2duaXplcigpIHtcbiAgICBSZWNvZ25pemVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbmluaGVyaXQoQXR0clJlY29nbml6ZXIsIFJlY29nbml6ZXIsIHtcbiAgICAvKipcbiAgICAgKiBAbmFtZXNwYWNlXG4gICAgICogQG1lbWJlcm9mIEF0dHJSZWNvZ25pemVyXG4gICAgICovXG4gICAgZGVmYXVsdHM6IHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAgICAgICAqIEBkZWZhdWx0IDFcbiAgICAgICAgICovXG4gICAgICAgIHBvaW50ZXJzOiAxXG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFVzZWQgdG8gY2hlY2sgaWYgaXQgdGhlIHJlY29nbml6ZXIgcmVjZWl2ZXMgdmFsaWQgaW5wdXQsIGxpa2UgaW5wdXQuZGlzdGFuY2UgPiAxMC5cbiAgICAgKiBAbWVtYmVyb2YgQXR0clJlY29nbml6ZXJcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gaW5wdXRcbiAgICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0gcmVjb2duaXplZFxuICAgICAqL1xuICAgIGF0dHJUZXN0OiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICB2YXIgb3B0aW9uUG9pbnRlcnMgPSB0aGlzLm9wdGlvbnMucG9pbnRlcnM7XG4gICAgICAgIHJldHVybiBvcHRpb25Qb2ludGVycyA9PT0gMCB8fCBpbnB1dC5wb2ludGVycy5sZW5ndGggPT09IG9wdGlvblBvaW50ZXJzO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBQcm9jZXNzIHRoZSBpbnB1dCBhbmQgcmV0dXJuIHRoZSBzdGF0ZSBmb3IgdGhlIHJlY29nbml6ZXJcbiAgICAgKiBAbWVtYmVyb2YgQXR0clJlY29nbml6ZXJcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gaW5wdXRcbiAgICAgKiBAcmV0dXJucyB7Kn0gU3RhdGVcbiAgICAgKi9cbiAgICBwcm9jZXNzOiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICB2YXIgc3RhdGUgPSB0aGlzLnN0YXRlO1xuICAgICAgICB2YXIgZXZlbnRUeXBlID0gaW5wdXQuZXZlbnRUeXBlO1xuXG4gICAgICAgIHZhciBpc1JlY29nbml6ZWQgPSBzdGF0ZSAmIChTVEFURV9CRUdBTiB8IFNUQVRFX0NIQU5HRUQpO1xuICAgICAgICB2YXIgaXNWYWxpZCA9IHRoaXMuYXR0clRlc3QoaW5wdXQpO1xuXG4gICAgICAgIC8vIG9uIGNhbmNlbCBpbnB1dCBhbmQgd2UndmUgcmVjb2duaXplZCBiZWZvcmUsIHJldHVybiBTVEFURV9DQU5DRUxMRURcbiAgICAgICAgaWYgKGlzUmVjb2duaXplZCAmJiAoZXZlbnRUeXBlICYgSU5QVVRfQ0FOQ0VMIHx8ICFpc1ZhbGlkKSkge1xuICAgICAgICAgICAgcmV0dXJuIHN0YXRlIHwgU1RBVEVfQ0FOQ0VMTEVEO1xuICAgICAgICB9IGVsc2UgaWYgKGlzUmVjb2duaXplZCB8fCBpc1ZhbGlkKSB7XG4gICAgICAgICAgICBpZiAoZXZlbnRUeXBlICYgSU5QVVRfRU5EKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHN0YXRlIHwgU1RBVEVfRU5ERUQ7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKCEoc3RhdGUgJiBTVEFURV9CRUdBTikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gU1RBVEVfQkVHQU47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc3RhdGUgfCBTVEFURV9DSEFOR0VEO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBTVEFURV9GQUlMRUQ7XG4gICAgfVxufSk7XG5cbi8qKlxuICogUGFuXG4gKiBSZWNvZ25pemVkIHdoZW4gdGhlIHBvaW50ZXIgaXMgZG93biBhbmQgbW92ZWQgaW4gdGhlIGFsbG93ZWQgZGlyZWN0aW9uLlxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBBdHRyUmVjb2duaXplclxuICovXG5mdW5jdGlvbiBQYW5SZWNvZ25pemVyKCkge1xuICAgIEF0dHJSZWNvZ25pemVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cbiAgICB0aGlzLnBYID0gbnVsbDtcbiAgICB0aGlzLnBZID0gbnVsbDtcbn1cblxuaW5oZXJpdChQYW5SZWNvZ25pemVyLCBBdHRyUmVjb2duaXplciwge1xuICAgIC8qKlxuICAgICAqIEBuYW1lc3BhY2VcbiAgICAgKiBAbWVtYmVyb2YgUGFuUmVjb2duaXplclxuICAgICAqL1xuICAgIGRlZmF1bHRzOiB7XG4gICAgICAgIGV2ZW50OiAncGFuJyxcbiAgICAgICAgdGhyZXNob2xkOiAxMCxcbiAgICAgICAgcG9pbnRlcnM6IDEsXG4gICAgICAgIGRpcmVjdGlvbjogRElSRUNUSU9OX0FMTFxuICAgIH0sXG5cbiAgICBnZXRUb3VjaEFjdGlvbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBkaXJlY3Rpb24gPSB0aGlzLm9wdGlvbnMuZGlyZWN0aW9uO1xuICAgICAgICB2YXIgYWN0aW9ucyA9IFtdO1xuICAgICAgICBpZiAoZGlyZWN0aW9uICYgRElSRUNUSU9OX0hPUklaT05UQUwpIHtcbiAgICAgICAgICAgIGFjdGlvbnMucHVzaChUT1VDSF9BQ1RJT05fUEFOX1kpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkaXJlY3Rpb24gJiBESVJFQ1RJT05fVkVSVElDQUwpIHtcbiAgICAgICAgICAgIGFjdGlvbnMucHVzaChUT1VDSF9BQ1RJT05fUEFOX1gpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY3Rpb25zO1xuICAgIH0sXG5cbiAgICBkaXJlY3Rpb25UZXN0OiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICB2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9ucztcbiAgICAgICAgdmFyIGhhc01vdmVkID0gdHJ1ZTtcbiAgICAgICAgdmFyIGRpc3RhbmNlID0gaW5wdXQuZGlzdGFuY2U7XG4gICAgICAgIHZhciBkaXJlY3Rpb24gPSBpbnB1dC5kaXJlY3Rpb247XG4gICAgICAgIHZhciB4ID0gaW5wdXQuZGVsdGFYO1xuICAgICAgICB2YXIgeSA9IGlucHV0LmRlbHRhWTtcblxuICAgICAgICAvLyBsb2NrIHRvIGF4aXM/XG4gICAgICAgIGlmICghKGRpcmVjdGlvbiAmIG9wdGlvbnMuZGlyZWN0aW9uKSkge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMuZGlyZWN0aW9uICYgRElSRUNUSU9OX0hPUklaT05UQUwpIHtcbiAgICAgICAgICAgICAgICBkaXJlY3Rpb24gPSAoeCA9PT0gMCkgPyBESVJFQ1RJT05fTk9ORSA6ICh4IDwgMCkgPyBESVJFQ1RJT05fTEVGVCA6IERJUkVDVElPTl9SSUdIVDtcbiAgICAgICAgICAgICAgICBoYXNNb3ZlZCA9IHggIT0gdGhpcy5wWDtcbiAgICAgICAgICAgICAgICBkaXN0YW5jZSA9IE1hdGguYWJzKGlucHV0LmRlbHRhWCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiA9ICh5ID09PSAwKSA/IERJUkVDVElPTl9OT05FIDogKHkgPCAwKSA/IERJUkVDVElPTl9VUCA6IERJUkVDVElPTl9ET1dOO1xuICAgICAgICAgICAgICAgIGhhc01vdmVkID0geSAhPSB0aGlzLnBZO1xuICAgICAgICAgICAgICAgIGRpc3RhbmNlID0gTWF0aC5hYnMoaW5wdXQuZGVsdGFZKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpbnB1dC5kaXJlY3Rpb24gPSBkaXJlY3Rpb247XG4gICAgICAgIHJldHVybiBoYXNNb3ZlZCAmJiBkaXN0YW5jZSA+IG9wdGlvbnMudGhyZXNob2xkICYmIGRpcmVjdGlvbiAmIG9wdGlvbnMuZGlyZWN0aW9uO1xuICAgIH0sXG5cbiAgICBhdHRyVGVzdDogZnVuY3Rpb24oaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIEF0dHJSZWNvZ25pemVyLnByb3RvdHlwZS5hdHRyVGVzdC5jYWxsKHRoaXMsIGlucHV0KSAmJlxuICAgICAgICAgICAgKHRoaXMuc3RhdGUgJiBTVEFURV9CRUdBTiB8fCAoISh0aGlzLnN0YXRlICYgU1RBVEVfQkVHQU4pICYmIHRoaXMuZGlyZWN0aW9uVGVzdChpbnB1dCkpKTtcbiAgICB9LFxuXG4gICAgZW1pdDogZnVuY3Rpb24oaW5wdXQpIHtcblxuICAgICAgICB0aGlzLnBYID0gaW5wdXQuZGVsdGFYO1xuICAgICAgICB0aGlzLnBZID0gaW5wdXQuZGVsdGFZO1xuXG4gICAgICAgIHZhciBkaXJlY3Rpb24gPSBkaXJlY3Rpb25TdHIoaW5wdXQuZGlyZWN0aW9uKTtcblxuICAgICAgICBpZiAoZGlyZWN0aW9uKSB7XG4gICAgICAgICAgICBpbnB1dC5hZGRpdGlvbmFsRXZlbnQgPSB0aGlzLm9wdGlvbnMuZXZlbnQgKyBkaXJlY3Rpb247XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fc3VwZXIuZW1pdC5jYWxsKHRoaXMsIGlucHV0KTtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBQaW5jaFxuICogUmVjb2duaXplZCB3aGVuIHR3byBvciBtb3JlIHBvaW50ZXJzIGFyZSBtb3ZpbmcgdG93YXJkICh6b29tLWluKSBvciBhd2F5IGZyb20gZWFjaCBvdGhlciAoem9vbS1vdXQpLlxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBBdHRyUmVjb2duaXplclxuICovXG5mdW5jdGlvbiBQaW5jaFJlY29nbml6ZXIoKSB7XG4gICAgQXR0clJlY29nbml6ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cblxuaW5oZXJpdChQaW5jaFJlY29nbml6ZXIsIEF0dHJSZWNvZ25pemVyLCB7XG4gICAgLyoqXG4gICAgICogQG5hbWVzcGFjZVxuICAgICAqIEBtZW1iZXJvZiBQaW5jaFJlY29nbml6ZXJcbiAgICAgKi9cbiAgICBkZWZhdWx0czoge1xuICAgICAgICBldmVudDogJ3BpbmNoJyxcbiAgICAgICAgdGhyZXNob2xkOiAwLFxuICAgICAgICBwb2ludGVyczogMlxuICAgIH0sXG5cbiAgICBnZXRUb3VjaEFjdGlvbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBbVE9VQ0hfQUNUSU9OX05PTkVdO1xuICAgIH0sXG5cbiAgICBhdHRyVGVzdDogZnVuY3Rpb24oaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3N1cGVyLmF0dHJUZXN0LmNhbGwodGhpcywgaW5wdXQpICYmXG4gICAgICAgICAgICAoTWF0aC5hYnMoaW5wdXQuc2NhbGUgLSAxKSA+IHRoaXMub3B0aW9ucy50aHJlc2hvbGQgfHwgdGhpcy5zdGF0ZSAmIFNUQVRFX0JFR0FOKTtcbiAgICB9LFxuXG4gICAgZW1pdDogZnVuY3Rpb24oaW5wdXQpIHtcbiAgICAgICAgaWYgKGlucHV0LnNjYWxlICE9PSAxKSB7XG4gICAgICAgICAgICB2YXIgaW5PdXQgPSBpbnB1dC5zY2FsZSA8IDEgPyAnaW4nIDogJ291dCc7XG4gICAgICAgICAgICBpbnB1dC5hZGRpdGlvbmFsRXZlbnQgPSB0aGlzLm9wdGlvbnMuZXZlbnQgKyBpbk91dDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9zdXBlci5lbWl0LmNhbGwodGhpcywgaW5wdXQpO1xuICAgIH1cbn0pO1xuXG4vKipcbiAqIFByZXNzXG4gKiBSZWNvZ25pemVkIHdoZW4gdGhlIHBvaW50ZXIgaXMgZG93biBmb3IgeCBtcyB3aXRob3V0IGFueSBtb3ZlbWVudC5cbiAqIEBjb25zdHJ1Y3RvclxuICogQGV4dGVuZHMgUmVjb2duaXplclxuICovXG5mdW5jdGlvbiBQcmVzc1JlY29nbml6ZXIoKSB7XG4gICAgUmVjb2duaXplci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG4gICAgdGhpcy5fdGltZXIgPSBudWxsO1xuICAgIHRoaXMuX2lucHV0ID0gbnVsbDtcbn1cblxuaW5oZXJpdChQcmVzc1JlY29nbml6ZXIsIFJlY29nbml6ZXIsIHtcbiAgICAvKipcbiAgICAgKiBAbmFtZXNwYWNlXG4gICAgICogQG1lbWJlcm9mIFByZXNzUmVjb2duaXplclxuICAgICAqL1xuICAgIGRlZmF1bHRzOiB7XG4gICAgICAgIGV2ZW50OiAncHJlc3MnLFxuICAgICAgICBwb2ludGVyczogMSxcbiAgICAgICAgdGltZTogMjUxLCAvLyBtaW5pbWFsIHRpbWUgb2YgdGhlIHBvaW50ZXIgdG8gYmUgcHJlc3NlZFxuICAgICAgICB0aHJlc2hvbGQ6IDkgLy8gYSBtaW5pbWFsIG1vdmVtZW50IGlzIG9rLCBidXQga2VlcCBpdCBsb3dcbiAgICB9LFxuXG4gICAgZ2V0VG91Y2hBY3Rpb246IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gW1RPVUNIX0FDVElPTl9BVVRPXTtcbiAgICB9LFxuXG4gICAgcHJvY2VzczogZnVuY3Rpb24oaW5wdXQpIHtcbiAgICAgICAgdmFyIG9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG4gICAgICAgIHZhciB2YWxpZFBvaW50ZXJzID0gaW5wdXQucG9pbnRlcnMubGVuZ3RoID09PSBvcHRpb25zLnBvaW50ZXJzO1xuICAgICAgICB2YXIgdmFsaWRNb3ZlbWVudCA9IGlucHV0LmRpc3RhbmNlIDwgb3B0aW9ucy50aHJlc2hvbGQ7XG4gICAgICAgIHZhciB2YWxpZFRpbWUgPSBpbnB1dC5kZWx0YVRpbWUgPiBvcHRpb25zLnRpbWU7XG5cbiAgICAgICAgdGhpcy5faW5wdXQgPSBpbnB1dDtcblxuICAgICAgICAvLyB3ZSBvbmx5IGFsbG93IGxpdHRsZSBtb3ZlbWVudFxuICAgICAgICAvLyBhbmQgd2UndmUgcmVhY2hlZCBhbiBlbmQgZXZlbnQsIHNvIGEgdGFwIGlzIHBvc3NpYmxlXG4gICAgICAgIGlmICghdmFsaWRNb3ZlbWVudCB8fCAhdmFsaWRQb2ludGVycyB8fCAoaW5wdXQuZXZlbnRUeXBlICYgKElOUFVUX0VORCB8IElOUFVUX0NBTkNFTCkgJiYgIXZhbGlkVGltZSkpIHtcbiAgICAgICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICAgICAgfSBlbHNlIGlmIChpbnB1dC5ldmVudFR5cGUgJiBJTlBVVF9TVEFSVCkge1xuICAgICAgICAgICAgdGhpcy5yZXNldCgpO1xuICAgICAgICAgICAgdGhpcy5fdGltZXIgPSBzZXRUaW1lb3V0Q29udGV4dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXRlID0gU1RBVEVfUkVDT0dOSVpFRDtcbiAgICAgICAgICAgICAgICB0aGlzLnRyeUVtaXQoKTtcbiAgICAgICAgICAgIH0sIG9wdGlvbnMudGltZSwgdGhpcyk7XG4gICAgICAgIH0gZWxzZSBpZiAoaW5wdXQuZXZlbnRUeXBlICYgSU5QVVRfRU5EKSB7XG4gICAgICAgICAgICByZXR1cm4gU1RBVEVfUkVDT0dOSVpFRDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gU1RBVEVfRkFJTEVEO1xuICAgIH0sXG5cbiAgICByZXNldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90aW1lcik7XG4gICAgfSxcblxuICAgIGVtaXQ6IGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlICE9PSBTVEFURV9SRUNPR05JWkVEKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW5wdXQgJiYgKGlucHV0LmV2ZW50VHlwZSAmIElOUFVUX0VORCkpIHtcbiAgICAgICAgICAgIHRoaXMubWFuYWdlci5lbWl0KHRoaXMub3B0aW9ucy5ldmVudCArICd1cCcsIGlucHV0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX2lucHV0LnRpbWVTdGFtcCA9IG5vdygpO1xuICAgICAgICAgICAgdGhpcy5tYW5hZ2VyLmVtaXQodGhpcy5vcHRpb25zLmV2ZW50LCB0aGlzLl9pbnB1dCk7XG4gICAgICAgIH1cbiAgICB9XG59KTtcblxuLyoqXG4gKiBSb3RhdGVcbiAqIFJlY29nbml6ZWQgd2hlbiB0d28gb3IgbW9yZSBwb2ludGVyIGFyZSBtb3ZpbmcgaW4gYSBjaXJjdWxhciBtb3Rpb24uXG4gKiBAY29uc3RydWN0b3JcbiAqIEBleHRlbmRzIEF0dHJSZWNvZ25pemVyXG4gKi9cbmZ1bmN0aW9uIFJvdGF0ZVJlY29nbml6ZXIoKSB7XG4gICAgQXR0clJlY29nbml6ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cblxuaW5oZXJpdChSb3RhdGVSZWNvZ25pemVyLCBBdHRyUmVjb2duaXplciwge1xuICAgIC8qKlxuICAgICAqIEBuYW1lc3BhY2VcbiAgICAgKiBAbWVtYmVyb2YgUm90YXRlUmVjb2duaXplclxuICAgICAqL1xuICAgIGRlZmF1bHRzOiB7XG4gICAgICAgIGV2ZW50OiAncm90YXRlJyxcbiAgICAgICAgdGhyZXNob2xkOiAwLFxuICAgICAgICBwb2ludGVyczogMlxuICAgIH0sXG5cbiAgICBnZXRUb3VjaEFjdGlvbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBbVE9VQ0hfQUNUSU9OX05PTkVdO1xuICAgIH0sXG5cbiAgICBhdHRyVGVzdDogZnVuY3Rpb24oaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3N1cGVyLmF0dHJUZXN0LmNhbGwodGhpcywgaW5wdXQpICYmXG4gICAgICAgICAgICAoTWF0aC5hYnMoaW5wdXQucm90YXRpb24pID4gdGhpcy5vcHRpb25zLnRocmVzaG9sZCB8fCB0aGlzLnN0YXRlICYgU1RBVEVfQkVHQU4pO1xuICAgIH1cbn0pO1xuXG4vKipcbiAqIFN3aXBlXG4gKiBSZWNvZ25pemVkIHdoZW4gdGhlIHBvaW50ZXIgaXMgbW92aW5nIGZhc3QgKHZlbG9jaXR5KSwgd2l0aCBlbm91Z2ggZGlzdGFuY2UgaW4gdGhlIGFsbG93ZWQgZGlyZWN0aW9uLlxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBBdHRyUmVjb2duaXplclxuICovXG5mdW5jdGlvbiBTd2lwZVJlY29nbml6ZXIoKSB7XG4gICAgQXR0clJlY29nbml6ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cblxuaW5oZXJpdChTd2lwZVJlY29nbml6ZXIsIEF0dHJSZWNvZ25pemVyLCB7XG4gICAgLyoqXG4gICAgICogQG5hbWVzcGFjZVxuICAgICAqIEBtZW1iZXJvZiBTd2lwZVJlY29nbml6ZXJcbiAgICAgKi9cbiAgICBkZWZhdWx0czoge1xuICAgICAgICBldmVudDogJ3N3aXBlJyxcbiAgICAgICAgdGhyZXNob2xkOiAxMCxcbiAgICAgICAgdmVsb2NpdHk6IDAuMyxcbiAgICAgICAgZGlyZWN0aW9uOiBESVJFQ1RJT05fSE9SSVpPTlRBTCB8IERJUkVDVElPTl9WRVJUSUNBTCxcbiAgICAgICAgcG9pbnRlcnM6IDFcbiAgICB9LFxuXG4gICAgZ2V0VG91Y2hBY3Rpb246IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUGFuUmVjb2duaXplci5wcm90b3R5cGUuZ2V0VG91Y2hBY3Rpb24uY2FsbCh0aGlzKTtcbiAgICB9LFxuXG4gICAgYXR0clRlc3Q6IGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIHZhciBkaXJlY3Rpb24gPSB0aGlzLm9wdGlvbnMuZGlyZWN0aW9uO1xuICAgICAgICB2YXIgdmVsb2NpdHk7XG5cbiAgICAgICAgaWYgKGRpcmVjdGlvbiAmIChESVJFQ1RJT05fSE9SSVpPTlRBTCB8IERJUkVDVElPTl9WRVJUSUNBTCkpIHtcbiAgICAgICAgICAgIHZlbG9jaXR5ID0gaW5wdXQub3ZlcmFsbFZlbG9jaXR5O1xuICAgICAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiAmIERJUkVDVElPTl9IT1JJWk9OVEFMKSB7XG4gICAgICAgICAgICB2ZWxvY2l0eSA9IGlucHV0Lm92ZXJhbGxWZWxvY2l0eVg7XG4gICAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uICYgRElSRUNUSU9OX1ZFUlRJQ0FMKSB7XG4gICAgICAgICAgICB2ZWxvY2l0eSA9IGlucHV0Lm92ZXJhbGxWZWxvY2l0eVk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy5fc3VwZXIuYXR0clRlc3QuY2FsbCh0aGlzLCBpbnB1dCkgJiZcbiAgICAgICAgICAgIGRpcmVjdGlvbiAmIGlucHV0Lm9mZnNldERpcmVjdGlvbiAmJlxuICAgICAgICAgICAgaW5wdXQuZGlzdGFuY2UgPiB0aGlzLm9wdGlvbnMudGhyZXNob2xkICYmXG4gICAgICAgICAgICBpbnB1dC5tYXhQb2ludGVycyA9PSB0aGlzLm9wdGlvbnMucG9pbnRlcnMgJiZcbiAgICAgICAgICAgIGFicyh2ZWxvY2l0eSkgPiB0aGlzLm9wdGlvbnMudmVsb2NpdHkgJiYgaW5wdXQuZXZlbnRUeXBlICYgSU5QVVRfRU5EO1xuICAgIH0sXG5cbiAgICBlbWl0OiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICB2YXIgZGlyZWN0aW9uID0gZGlyZWN0aW9uU3RyKGlucHV0Lm9mZnNldERpcmVjdGlvbik7XG4gICAgICAgIGlmIChkaXJlY3Rpb24pIHtcbiAgICAgICAgICAgIHRoaXMubWFuYWdlci5lbWl0KHRoaXMub3B0aW9ucy5ldmVudCArIGRpcmVjdGlvbiwgaW5wdXQpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5tYW5hZ2VyLmVtaXQodGhpcy5vcHRpb25zLmV2ZW50LCBpbnB1dCk7XG4gICAgfVxufSk7XG5cbi8qKlxuICogQSB0YXAgaXMgZWNvZ25pemVkIHdoZW4gdGhlIHBvaW50ZXIgaXMgZG9pbmcgYSBzbWFsbCB0YXAvY2xpY2suIE11bHRpcGxlIHRhcHMgYXJlIHJlY29nbml6ZWQgaWYgdGhleSBvY2N1clxuICogYmV0d2VlbiB0aGUgZ2l2ZW4gaW50ZXJ2YWwgYW5kIHBvc2l0aW9uLiBUaGUgZGVsYXkgb3B0aW9uIGNhbiBiZSB1c2VkIHRvIHJlY29nbml6ZSBtdWx0aS10YXBzIHdpdGhvdXQgZmlyaW5nXG4gKiBhIHNpbmdsZSB0YXAuXG4gKlxuICogVGhlIGV2ZW50RGF0YSBmcm9tIHRoZSBlbWl0dGVkIGV2ZW50IGNvbnRhaW5zIHRoZSBwcm9wZXJ0eSBgdGFwQ291bnRgLCB3aGljaCBjb250YWlucyB0aGUgYW1vdW50IG9mXG4gKiBtdWx0aS10YXBzIGJlaW5nIHJlY29nbml6ZWQuXG4gKiBAY29uc3RydWN0b3JcbiAqIEBleHRlbmRzIFJlY29nbml6ZXJcbiAqL1xuZnVuY3Rpb24gVGFwUmVjb2duaXplcigpIHtcbiAgICBSZWNvZ25pemVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cbiAgICAvLyBwcmV2aW91cyB0aW1lIGFuZCBjZW50ZXIsXG4gICAgLy8gdXNlZCBmb3IgdGFwIGNvdW50aW5nXG4gICAgdGhpcy5wVGltZSA9IGZhbHNlO1xuICAgIHRoaXMucENlbnRlciA9IGZhbHNlO1xuXG4gICAgdGhpcy5fdGltZXIgPSBudWxsO1xuICAgIHRoaXMuX2lucHV0ID0gbnVsbDtcbiAgICB0aGlzLmNvdW50ID0gMDtcbn1cblxuaW5oZXJpdChUYXBSZWNvZ25pemVyLCBSZWNvZ25pemVyLCB7XG4gICAgLyoqXG4gICAgICogQG5hbWVzcGFjZVxuICAgICAqIEBtZW1iZXJvZiBQaW5jaFJlY29nbml6ZXJcbiAgICAgKi9cbiAgICBkZWZhdWx0czoge1xuICAgICAgICBldmVudDogJ3RhcCcsXG4gICAgICAgIHBvaW50ZXJzOiAxLFxuICAgICAgICB0YXBzOiAxLFxuICAgICAgICBpbnRlcnZhbDogMzAwLCAvLyBtYXggdGltZSBiZXR3ZWVuIHRoZSBtdWx0aS10YXAgdGFwc1xuICAgICAgICB0aW1lOiAyNTAsIC8vIG1heCB0aW1lIG9mIHRoZSBwb2ludGVyIHRvIGJlIGRvd24gKGxpa2UgZmluZ2VyIG9uIHRoZSBzY3JlZW4pXG4gICAgICAgIHRocmVzaG9sZDogOSwgLy8gYSBtaW5pbWFsIG1vdmVtZW50IGlzIG9rLCBidXQga2VlcCBpdCBsb3dcbiAgICAgICAgcG9zVGhyZXNob2xkOiAxMCAvLyBhIG11bHRpLXRhcCBjYW4gYmUgYSBiaXQgb2ZmIHRoZSBpbml0aWFsIHBvc2l0aW9uXG4gICAgfSxcblxuICAgIGdldFRvdWNoQWN0aW9uOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFtUT1VDSF9BQ1RJT05fTUFOSVBVTEFUSU9OXTtcbiAgICB9LFxuXG4gICAgcHJvY2VzczogZnVuY3Rpb24oaW5wdXQpIHtcbiAgICAgICAgdmFyIG9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG5cbiAgICAgICAgdmFyIHZhbGlkUG9pbnRlcnMgPSBpbnB1dC5wb2ludGVycy5sZW5ndGggPT09IG9wdGlvbnMucG9pbnRlcnM7XG4gICAgICAgIHZhciB2YWxpZE1vdmVtZW50ID0gaW5wdXQuZGlzdGFuY2UgPCBvcHRpb25zLnRocmVzaG9sZDtcbiAgICAgICAgdmFyIHZhbGlkVG91Y2hUaW1lID0gaW5wdXQuZGVsdGFUaW1lIDwgb3B0aW9ucy50aW1lO1xuXG4gICAgICAgIHRoaXMucmVzZXQoKTtcblxuICAgICAgICBpZiAoKGlucHV0LmV2ZW50VHlwZSAmIElOUFVUX1NUQVJUKSAmJiAodGhpcy5jb3VudCA9PT0gMCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZhaWxUaW1lb3V0KCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB3ZSBvbmx5IGFsbG93IGxpdHRsZSBtb3ZlbWVudFxuICAgICAgICAvLyBhbmQgd2UndmUgcmVhY2hlZCBhbiBlbmQgZXZlbnQsIHNvIGEgdGFwIGlzIHBvc3NpYmxlXG4gICAgICAgIGlmICh2YWxpZE1vdmVtZW50ICYmIHZhbGlkVG91Y2hUaW1lICYmIHZhbGlkUG9pbnRlcnMpIHtcbiAgICAgICAgICAgIGlmIChpbnB1dC5ldmVudFR5cGUgIT0gSU5QVVRfRU5EKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmFpbFRpbWVvdXQoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHZhbGlkSW50ZXJ2YWwgPSB0aGlzLnBUaW1lID8gKGlucHV0LnRpbWVTdGFtcCAtIHRoaXMucFRpbWUgPCBvcHRpb25zLmludGVydmFsKSA6IHRydWU7XG4gICAgICAgICAgICB2YXIgdmFsaWRNdWx0aVRhcCA9ICF0aGlzLnBDZW50ZXIgfHwgZ2V0RGlzdGFuY2UodGhpcy5wQ2VudGVyLCBpbnB1dC5jZW50ZXIpIDwgb3B0aW9ucy5wb3NUaHJlc2hvbGQ7XG5cbiAgICAgICAgICAgIHRoaXMucFRpbWUgPSBpbnB1dC50aW1lU3RhbXA7XG4gICAgICAgICAgICB0aGlzLnBDZW50ZXIgPSBpbnB1dC5jZW50ZXI7XG5cbiAgICAgICAgICAgIGlmICghdmFsaWRNdWx0aVRhcCB8fCAhdmFsaWRJbnRlcnZhbCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY291bnQgPSAxO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvdW50ICs9IDE7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuX2lucHV0ID0gaW5wdXQ7XG5cbiAgICAgICAgICAgIC8vIGlmIHRhcCBjb3VudCBtYXRjaGVzIHdlIGhhdmUgcmVjb2duaXplZCBpdCxcbiAgICAgICAgICAgIC8vIGVsc2UgaXQgaGFzIGJlZ2FuIHJlY29nbml6aW5nLi4uXG4gICAgICAgICAgICB2YXIgdGFwQ291bnQgPSB0aGlzLmNvdW50ICUgb3B0aW9ucy50YXBzO1xuICAgICAgICAgICAgaWYgKHRhcENvdW50ID09PSAwKSB7XG4gICAgICAgICAgICAgICAgLy8gbm8gZmFpbGluZyByZXF1aXJlbWVudHMsIGltbWVkaWF0ZWx5IHRyaWdnZXIgdGhlIHRhcCBldmVudFxuICAgICAgICAgICAgICAgIC8vIG9yIHdhaXQgYXMgbG9uZyBhcyB0aGUgbXVsdGl0YXAgaW50ZXJ2YWwgdG8gdHJpZ2dlclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5oYXNSZXF1aXJlRmFpbHVyZXMoKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gU1RBVEVfUkVDT0dOSVpFRDtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl90aW1lciA9IHNldFRpbWVvdXRDb250ZXh0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IFNUQVRFX1JFQ09HTklaRUQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRyeUVtaXQoKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgb3B0aW9ucy5pbnRlcnZhbCwgdGhpcyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBTVEFURV9CRUdBTjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFNUQVRFX0ZBSUxFRDtcbiAgICB9LFxuXG4gICAgZmFpbFRpbWVvdXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLl90aW1lciA9IHNldFRpbWVvdXRDb250ZXh0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IFNUQVRFX0ZBSUxFRDtcbiAgICAgICAgfSwgdGhpcy5vcHRpb25zLmludGVydmFsLCB0aGlzKTtcbiAgICAgICAgcmV0dXJuIFNUQVRFX0ZBSUxFRDtcbiAgICB9LFxuXG4gICAgcmVzZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5fdGltZXIpO1xuICAgIH0sXG5cbiAgICBlbWl0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUgPT0gU1RBVEVfUkVDT0dOSVpFRCkge1xuICAgICAgICAgICAgdGhpcy5faW5wdXQudGFwQ291bnQgPSB0aGlzLmNvdW50O1xuICAgICAgICAgICAgdGhpcy5tYW5hZ2VyLmVtaXQodGhpcy5vcHRpb25zLmV2ZW50LCB0aGlzLl9pbnB1dCk7XG4gICAgICAgIH1cbiAgICB9XG59KTtcblxuLyoqXG4gKiBTaW1wbGUgd2F5IHRvIGNyZWF0ZSBhIG1hbmFnZXIgd2l0aCBhIGRlZmF1bHQgc2V0IG9mIHJlY29nbml6ZXJzLlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIEhhbW1lcihlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgb3B0aW9ucy5yZWNvZ25pemVycyA9IGlmVW5kZWZpbmVkKG9wdGlvbnMucmVjb2duaXplcnMsIEhhbW1lci5kZWZhdWx0cy5wcmVzZXQpO1xuICAgIHJldHVybiBuZXcgTWFuYWdlcihlbGVtZW50LCBvcHRpb25zKTtcbn1cblxuLyoqXG4gKiBAY29uc3Qge3N0cmluZ31cbiAqL1xuSGFtbWVyLlZFUlNJT04gPSAnMi4wLjYnO1xuXG4vKipcbiAqIGRlZmF1bHQgc2V0dGluZ3NcbiAqIEBuYW1lc3BhY2VcbiAqL1xuSGFtbWVyLmRlZmF1bHRzID0ge1xuICAgIC8qKlxuICAgICAqIHNldCBpZiBET00gZXZlbnRzIGFyZSBiZWluZyB0cmlnZ2VyZWQuXG4gICAgICogQnV0IHRoaXMgaXMgc2xvd2VyIGFuZCB1bnVzZWQgYnkgc2ltcGxlIGltcGxlbWVudGF0aW9ucywgc28gZGlzYWJsZWQgYnkgZGVmYXVsdC5cbiAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAqL1xuICAgIGRvbUV2ZW50czogZmFsc2UsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgZm9yIHRoZSB0b3VjaEFjdGlvbiBwcm9wZXJ0eS9mYWxsYmFjay5cbiAgICAgKiBXaGVuIHNldCB0byBgY29tcHV0ZWAgaXQgd2lsbCBtYWdpY2FsbHkgc2V0IHRoZSBjb3JyZWN0IHZhbHVlIGJhc2VkIG9uIHRoZSBhZGRlZCByZWNvZ25pemVycy5cbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqIEBkZWZhdWx0IGNvbXB1dGVcbiAgICAgKi9cbiAgICB0b3VjaEFjdGlvbjogVE9VQ0hfQUNUSU9OX0NPTVBVVEUsXG5cbiAgICAvKipcbiAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgKiBAZGVmYXVsdCB0cnVlXG4gICAgICovXG4gICAgZW5hYmxlOiB0cnVlLFxuXG4gICAgLyoqXG4gICAgICogRVhQRVJJTUVOVEFMIEZFQVRVUkUgLS0gY2FuIGJlIHJlbW92ZWQvY2hhbmdlZFxuICAgICAqIENoYW5nZSB0aGUgcGFyZW50IGlucHV0IHRhcmdldCBlbGVtZW50LlxuICAgICAqIElmIE51bGwsIHRoZW4gaXQgaXMgYmVpbmcgc2V0IHRoZSB0byBtYWluIGVsZW1lbnQuXG4gICAgICogQHR5cGUge051bGx8RXZlbnRUYXJnZXR9XG4gICAgICogQGRlZmF1bHQgbnVsbFxuICAgICAqL1xuICAgIGlucHV0VGFyZ2V0OiBudWxsLFxuXG4gICAgLyoqXG4gICAgICogZm9yY2UgYW4gaW5wdXQgY2xhc3NcbiAgICAgKiBAdHlwZSB7TnVsbHxGdW5jdGlvbn1cbiAgICAgKiBAZGVmYXVsdCBudWxsXG4gICAgICovXG4gICAgaW5wdXRDbGFzczogbnVsbCxcblxuICAgIC8qKlxuICAgICAqIERlZmF1bHQgcmVjb2duaXplciBzZXR1cCB3aGVuIGNhbGxpbmcgYEhhbW1lcigpYFxuICAgICAqIFdoZW4gY3JlYXRpbmcgYSBuZXcgTWFuYWdlciB0aGVzZSB3aWxsIGJlIHNraXBwZWQuXG4gICAgICogQHR5cGUge0FycmF5fVxuICAgICAqL1xuICAgIHByZXNldDogW1xuICAgICAgICAvLyBSZWNvZ25pemVyQ2xhc3MsIG9wdGlvbnMsIFtyZWNvZ25pemVXaXRoLCAuLi5dLCBbcmVxdWlyZUZhaWx1cmUsIC4uLl1cbiAgICAgICAgW1JvdGF0ZVJlY29nbml6ZXIsIHtlbmFibGU6IGZhbHNlfV0sXG4gICAgICAgIFtQaW5jaFJlY29nbml6ZXIsIHtlbmFibGU6IGZhbHNlfSwgWydyb3RhdGUnXV0sXG4gICAgICAgIFtTd2lwZVJlY29nbml6ZXIsIHtkaXJlY3Rpb246IERJUkVDVElPTl9IT1JJWk9OVEFMfV0sXG4gICAgICAgIFtQYW5SZWNvZ25pemVyLCB7ZGlyZWN0aW9uOiBESVJFQ1RJT05fSE9SSVpPTlRBTH0sIFsnc3dpcGUnXV0sXG4gICAgICAgIFtUYXBSZWNvZ25pemVyXSxcbiAgICAgICAgW1RhcFJlY29nbml6ZXIsIHtldmVudDogJ2RvdWJsZXRhcCcsIHRhcHM6IDJ9LCBbJ3RhcCddXSxcbiAgICAgICAgW1ByZXNzUmVjb2duaXplcl1cbiAgICBdLFxuXG4gICAgLyoqXG4gICAgICogU29tZSBDU1MgcHJvcGVydGllcyBjYW4gYmUgdXNlZCB0byBpbXByb3ZlIHRoZSB3b3JraW5nIG9mIEhhbW1lci5cbiAgICAgKiBBZGQgdGhlbSB0byB0aGlzIG1ldGhvZCBhbmQgdGhleSB3aWxsIGJlIHNldCB3aGVuIGNyZWF0aW5nIGEgbmV3IE1hbmFnZXIuXG4gICAgICogQG5hbWVzcGFjZVxuICAgICAqL1xuICAgIGNzc1Byb3BzOiB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEaXNhYmxlcyB0ZXh0IHNlbGVjdGlvbiB0byBpbXByb3ZlIHRoZSBkcmFnZ2luZyBnZXN0dXJlLiBNYWlubHkgZm9yIGRlc2t0b3AgYnJvd3NlcnMuXG4gICAgICAgICAqIEB0eXBlIHtTdHJpbmd9XG4gICAgICAgICAqIEBkZWZhdWx0ICdub25lJ1xuICAgICAgICAgKi9cbiAgICAgICAgdXNlclNlbGVjdDogJ25vbmUnLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEaXNhYmxlIHRoZSBXaW5kb3dzIFBob25lIGdyaXBwZXJzIHdoZW4gcHJlc3NpbmcgYW4gZWxlbWVudC5cbiAgICAgICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgICAgICogQGRlZmF1bHQgJ25vbmUnXG4gICAgICAgICAqL1xuICAgICAgICB0b3VjaFNlbGVjdDogJ25vbmUnLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEaXNhYmxlcyB0aGUgZGVmYXVsdCBjYWxsb3V0IHNob3duIHdoZW4geW91IHRvdWNoIGFuZCBob2xkIGEgdG91Y2ggdGFyZ2V0LlxuICAgICAgICAgKiBPbiBpT1MsIHdoZW4geW91IHRvdWNoIGFuZCBob2xkIGEgdG91Y2ggdGFyZ2V0IHN1Y2ggYXMgYSBsaW5rLCBTYWZhcmkgZGlzcGxheXNcbiAgICAgICAgICogYSBjYWxsb3V0IGNvbnRhaW5pbmcgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGxpbmsuIFRoaXMgcHJvcGVydHkgYWxsb3dzIHlvdSB0byBkaXNhYmxlIHRoYXQgY2FsbG91dC5cbiAgICAgICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgICAgICogQGRlZmF1bHQgJ25vbmUnXG4gICAgICAgICAqL1xuICAgICAgICB0b3VjaENhbGxvdXQ6ICdub25lJyxcblxuICAgICAgICAvKipcbiAgICAgICAgICogU3BlY2lmaWVzIHdoZXRoZXIgem9vbWluZyBpcyBlbmFibGVkLiBVc2VkIGJ5IElFMTA+XG4gICAgICAgICAqIEB0eXBlIHtTdHJpbmd9XG4gICAgICAgICAqIEBkZWZhdWx0ICdub25lJ1xuICAgICAgICAgKi9cbiAgICAgICAgY29udGVudFpvb21pbmc6ICdub25lJyxcblxuICAgICAgICAvKipcbiAgICAgICAgICogU3BlY2lmaWVzIHRoYXQgYW4gZW50aXJlIGVsZW1lbnQgc2hvdWxkIGJlIGRyYWdnYWJsZSBpbnN0ZWFkIG9mIGl0cyBjb250ZW50cy4gTWFpbmx5IGZvciBkZXNrdG9wIGJyb3dzZXJzLlxuICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAgICAgKiBAZGVmYXVsdCAnbm9uZSdcbiAgICAgICAgICovXG4gICAgICAgIHVzZXJEcmFnOiAnbm9uZScsXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIE92ZXJyaWRlcyB0aGUgaGlnaGxpZ2h0IGNvbG9yIHNob3duIHdoZW4gdGhlIHVzZXIgdGFwcyBhIGxpbmsgb3IgYSBKYXZhU2NyaXB0XG4gICAgICAgICAqIGNsaWNrYWJsZSBlbGVtZW50IGluIGlPUy4gVGhpcyBwcm9wZXJ0eSBvYmV5cyB0aGUgYWxwaGEgdmFsdWUsIGlmIHNwZWNpZmllZC5cbiAgICAgICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgICAgICogQGRlZmF1bHQgJ3JnYmEoMCwwLDAsMCknXG4gICAgICAgICAqL1xuICAgICAgICB0YXBIaWdobGlnaHRDb2xvcjogJ3JnYmEoMCwwLDAsMCknXG4gICAgfVxufTtcblxudmFyIFNUT1AgPSAxO1xudmFyIEZPUkNFRF9TVE9QID0gMjtcblxuLyoqXG4gKiBNYW5hZ2VyXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gTWFuYWdlcihlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdGhpcy5vcHRpb25zID0gYXNzaWduKHt9LCBIYW1tZXIuZGVmYXVsdHMsIG9wdGlvbnMgfHwge30pO1xuXG4gICAgdGhpcy5vcHRpb25zLmlucHV0VGFyZ2V0ID0gdGhpcy5vcHRpb25zLmlucHV0VGFyZ2V0IHx8IGVsZW1lbnQ7XG5cbiAgICB0aGlzLmhhbmRsZXJzID0ge307XG4gICAgdGhpcy5zZXNzaW9uID0ge307XG4gICAgdGhpcy5yZWNvZ25pemVycyA9IFtdO1xuXG4gICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICB0aGlzLmlucHV0ID0gY3JlYXRlSW5wdXRJbnN0YW5jZSh0aGlzKTtcbiAgICB0aGlzLnRvdWNoQWN0aW9uID0gbmV3IFRvdWNoQWN0aW9uKHRoaXMsIHRoaXMub3B0aW9ucy50b3VjaEFjdGlvbik7XG5cbiAgICB0b2dnbGVDc3NQcm9wcyh0aGlzLCB0cnVlKTtcblxuICAgIGVhY2godGhpcy5vcHRpb25zLnJlY29nbml6ZXJzLCBmdW5jdGlvbihpdGVtKSB7XG4gICAgICAgIHZhciByZWNvZ25pemVyID0gdGhpcy5hZGQobmV3IChpdGVtWzBdKShpdGVtWzFdKSk7XG4gICAgICAgIGl0ZW1bMl0gJiYgcmVjb2duaXplci5yZWNvZ25pemVXaXRoKGl0ZW1bMl0pO1xuICAgICAgICBpdGVtWzNdICYmIHJlY29nbml6ZXIucmVxdWlyZUZhaWx1cmUoaXRlbVszXSk7XG4gICAgfSwgdGhpcyk7XG59XG5cbk1hbmFnZXIucHJvdG90eXBlID0ge1xuICAgIC8qKlxuICAgICAqIHNldCBvcHRpb25zXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAgICAgKiBAcmV0dXJucyB7TWFuYWdlcn1cbiAgICAgKi9cbiAgICBzZXQ6IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgICAgYXNzaWduKHRoaXMub3B0aW9ucywgb3B0aW9ucyk7XG5cbiAgICAgICAgLy8gT3B0aW9ucyB0aGF0IG5lZWQgYSBsaXR0bGUgbW9yZSBzZXR1cFxuICAgICAgICBpZiAob3B0aW9ucy50b3VjaEFjdGlvbikge1xuICAgICAgICAgICAgdGhpcy50b3VjaEFjdGlvbi51cGRhdGUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0aW9ucy5pbnB1dFRhcmdldCkge1xuICAgICAgICAgICAgLy8gQ2xlYW4gdXAgZXhpc3RpbmcgZXZlbnQgbGlzdGVuZXJzIGFuZCByZWluaXRpYWxpemVcbiAgICAgICAgICAgIHRoaXMuaW5wdXQuZGVzdHJveSgpO1xuICAgICAgICAgICAgdGhpcy5pbnB1dC50YXJnZXQgPSBvcHRpb25zLmlucHV0VGFyZ2V0O1xuICAgICAgICAgICAgdGhpcy5pbnB1dC5pbml0KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIHN0b3AgcmVjb2duaXppbmcgZm9yIHRoaXMgc2Vzc2lvbi5cbiAgICAgKiBUaGlzIHNlc3Npb24gd2lsbCBiZSBkaXNjYXJkZWQsIHdoZW4gYSBuZXcgW2lucHV0XXN0YXJ0IGV2ZW50IGlzIGZpcmVkLlxuICAgICAqIFdoZW4gZm9yY2VkLCB0aGUgcmVjb2duaXplciBjeWNsZSBpcyBzdG9wcGVkIGltbWVkaWF0ZWx5LlxuICAgICAqIEBwYXJhbSB7Qm9vbGVhbn0gW2ZvcmNlXVxuICAgICAqL1xuICAgIHN0b3A6IGZ1bmN0aW9uKGZvcmNlKSB7XG4gICAgICAgIHRoaXMuc2Vzc2lvbi5zdG9wcGVkID0gZm9yY2UgPyBGT1JDRURfU1RPUCA6IFNUT1A7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIHJ1biB0aGUgcmVjb2duaXplcnMhXG4gICAgICogY2FsbGVkIGJ5IHRoZSBpbnB1dEhhbmRsZXIgZnVuY3Rpb24gb24gZXZlcnkgbW92ZW1lbnQgb2YgdGhlIHBvaW50ZXJzICh0b3VjaGVzKVxuICAgICAqIGl0IHdhbGtzIHRocm91Z2ggYWxsIHRoZSByZWNvZ25pemVycyBhbmQgdHJpZXMgdG8gZGV0ZWN0IHRoZSBnZXN0dXJlIHRoYXQgaXMgYmVpbmcgbWFkZVxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBpbnB1dERhdGFcbiAgICAgKi9cbiAgICByZWNvZ25pemU6IGZ1bmN0aW9uKGlucHV0RGF0YSkge1xuICAgICAgICB2YXIgc2Vzc2lvbiA9IHRoaXMuc2Vzc2lvbjtcbiAgICAgICAgaWYgKHNlc3Npb24uc3RvcHBlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcnVuIHRoZSB0b3VjaC1hY3Rpb24gcG9seWZpbGxcbiAgICAgICAgdGhpcy50b3VjaEFjdGlvbi5wcmV2ZW50RGVmYXVsdHMoaW5wdXREYXRhKTtcblxuICAgICAgICB2YXIgcmVjb2duaXplcjtcbiAgICAgICAgdmFyIHJlY29nbml6ZXJzID0gdGhpcy5yZWNvZ25pemVycztcblxuICAgICAgICAvLyB0aGlzIGhvbGRzIHRoZSByZWNvZ25pemVyIHRoYXQgaXMgYmVpbmcgcmVjb2duaXplZC5cbiAgICAgICAgLy8gc28gdGhlIHJlY29nbml6ZXIncyBzdGF0ZSBuZWVkcyB0byBiZSBCRUdBTiwgQ0hBTkdFRCwgRU5ERUQgb3IgUkVDT0dOSVpFRFxuICAgICAgICAvLyBpZiBubyByZWNvZ25pemVyIGlzIGRldGVjdGluZyBhIHRoaW5nLCBpdCBpcyBzZXQgdG8gYG51bGxgXG4gICAgICAgIHZhciBjdXJSZWNvZ25pemVyID0gc2Vzc2lvbi5jdXJSZWNvZ25pemVyO1xuXG4gICAgICAgIC8vIHJlc2V0IHdoZW4gdGhlIGxhc3QgcmVjb2duaXplciBpcyByZWNvZ25pemVkXG4gICAgICAgIC8vIG9yIHdoZW4gd2UncmUgaW4gYSBuZXcgc2Vzc2lvblxuICAgICAgICBpZiAoIWN1clJlY29nbml6ZXIgfHwgKGN1clJlY29nbml6ZXIgJiYgY3VyUmVjb2duaXplci5zdGF0ZSAmIFNUQVRFX1JFQ09HTklaRUQpKSB7XG4gICAgICAgICAgICBjdXJSZWNvZ25pemVyID0gc2Vzc2lvbi5jdXJSZWNvZ25pemVyID0gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBpID0gMDtcbiAgICAgICAgd2hpbGUgKGkgPCByZWNvZ25pemVycy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJlY29nbml6ZXIgPSByZWNvZ25pemVyc1tpXTtcblxuICAgICAgICAgICAgLy8gZmluZCBvdXQgaWYgd2UgYXJlIGFsbG93ZWQgdHJ5IHRvIHJlY29nbml6ZSB0aGUgaW5wdXQgZm9yIHRoaXMgb25lLlxuICAgICAgICAgICAgLy8gMS4gICBhbGxvdyBpZiB0aGUgc2Vzc2lvbiBpcyBOT1QgZm9yY2VkIHN0b3BwZWQgKHNlZSB0aGUgLnN0b3AoKSBtZXRob2QpXG4gICAgICAgICAgICAvLyAyLiAgIGFsbG93IGlmIHdlIHN0aWxsIGhhdmVuJ3QgcmVjb2duaXplZCBhIGdlc3R1cmUgaW4gdGhpcyBzZXNzaW9uLCBvciB0aGUgdGhpcyByZWNvZ25pemVyIGlzIHRoZSBvbmVcbiAgICAgICAgICAgIC8vICAgICAgdGhhdCBpcyBiZWluZyByZWNvZ25pemVkLlxuICAgICAgICAgICAgLy8gMy4gICBhbGxvdyBpZiB0aGUgcmVjb2duaXplciBpcyBhbGxvd2VkIHRvIHJ1biBzaW11bHRhbmVvdXMgd2l0aCB0aGUgY3VycmVudCByZWNvZ25pemVkIHJlY29nbml6ZXIuXG4gICAgICAgICAgICAvLyAgICAgIHRoaXMgY2FuIGJlIHNldHVwIHdpdGggdGhlIGByZWNvZ25pemVXaXRoKClgIG1ldGhvZCBvbiB0aGUgcmVjb2duaXplci5cbiAgICAgICAgICAgIGlmIChzZXNzaW9uLnN0b3BwZWQgIT09IEZPUkNFRF9TVE9QICYmICggLy8gMVxuICAgICAgICAgICAgICAgICAgICAhY3VyUmVjb2duaXplciB8fCByZWNvZ25pemVyID09IGN1clJlY29nbml6ZXIgfHwgLy8gMlxuICAgICAgICAgICAgICAgICAgICByZWNvZ25pemVyLmNhblJlY29nbml6ZVdpdGgoY3VyUmVjb2duaXplcikpKSB7IC8vIDNcbiAgICAgICAgICAgICAgICByZWNvZ25pemVyLnJlY29nbml6ZShpbnB1dERhdGEpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZWNvZ25pemVyLnJlc2V0KCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGlmIHRoZSByZWNvZ25pemVyIGhhcyBiZWVuIHJlY29nbml6aW5nIHRoZSBpbnB1dCBhcyBhIHZhbGlkIGdlc3R1cmUsIHdlIHdhbnQgdG8gc3RvcmUgdGhpcyBvbmUgYXMgdGhlXG4gICAgICAgICAgICAvLyBjdXJyZW50IGFjdGl2ZSByZWNvZ25pemVyLiBidXQgb25seSBpZiB3ZSBkb24ndCBhbHJlYWR5IGhhdmUgYW4gYWN0aXZlIHJlY29nbml6ZXJcbiAgICAgICAgICAgIGlmICghY3VyUmVjb2duaXplciAmJiByZWNvZ25pemVyLnN0YXRlICYgKFNUQVRFX0JFR0FOIHwgU1RBVEVfQ0hBTkdFRCB8IFNUQVRFX0VOREVEKSkge1xuICAgICAgICAgICAgICAgIGN1clJlY29nbml6ZXIgPSBzZXNzaW9uLmN1clJlY29nbml6ZXIgPSByZWNvZ25pemVyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaSsrO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIGdldCBhIHJlY29nbml6ZXIgYnkgaXRzIGV2ZW50IG5hbWUuXG4gICAgICogQHBhcmFtIHtSZWNvZ25pemVyfFN0cmluZ30gcmVjb2duaXplclxuICAgICAqIEByZXR1cm5zIHtSZWNvZ25pemVyfE51bGx9XG4gICAgICovXG4gICAgZ2V0OiBmdW5jdGlvbihyZWNvZ25pemVyKSB7XG4gICAgICAgIGlmIChyZWNvZ25pemVyIGluc3RhbmNlb2YgUmVjb2duaXplcikge1xuICAgICAgICAgICAgcmV0dXJuIHJlY29nbml6ZXI7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcmVjb2duaXplcnMgPSB0aGlzLnJlY29nbml6ZXJzO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlY29nbml6ZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAocmVjb2duaXplcnNbaV0ub3B0aW9ucy5ldmVudCA9PSByZWNvZ25pemVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlY29nbml6ZXJzW2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBhZGQgYSByZWNvZ25pemVyIHRvIHRoZSBtYW5hZ2VyXG4gICAgICogZXhpc3RpbmcgcmVjb2duaXplcnMgd2l0aCB0aGUgc2FtZSBldmVudCBuYW1lIHdpbGwgYmUgcmVtb3ZlZFxuICAgICAqIEBwYXJhbSB7UmVjb2duaXplcn0gcmVjb2duaXplclxuICAgICAqIEByZXR1cm5zIHtSZWNvZ25pemVyfE1hbmFnZXJ9XG4gICAgICovXG4gICAgYWRkOiBmdW5jdGlvbihyZWNvZ25pemVyKSB7XG4gICAgICAgIGlmIChpbnZva2VBcnJheUFyZyhyZWNvZ25pemVyLCAnYWRkJywgdGhpcykpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcmVtb3ZlIGV4aXN0aW5nXG4gICAgICAgIHZhciBleGlzdGluZyA9IHRoaXMuZ2V0KHJlY29nbml6ZXIub3B0aW9ucy5ldmVudCk7XG4gICAgICAgIGlmIChleGlzdGluZykge1xuICAgICAgICAgICAgdGhpcy5yZW1vdmUoZXhpc3RpbmcpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5yZWNvZ25pemVycy5wdXNoKHJlY29nbml6ZXIpO1xuICAgICAgICByZWNvZ25pemVyLm1hbmFnZXIgPSB0aGlzO1xuXG4gICAgICAgIHRoaXMudG91Y2hBY3Rpb24udXBkYXRlKCk7XG4gICAgICAgIHJldHVybiByZWNvZ25pemVyO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiByZW1vdmUgYSByZWNvZ25pemVyIGJ5IG5hbWUgb3IgaW5zdGFuY2VcbiAgICAgKiBAcGFyYW0ge1JlY29nbml6ZXJ8U3RyaW5nfSByZWNvZ25pemVyXG4gICAgICogQHJldHVybnMge01hbmFnZXJ9XG4gICAgICovXG4gICAgcmVtb3ZlOiBmdW5jdGlvbihyZWNvZ25pemVyKSB7XG4gICAgICAgIGlmIChpbnZva2VBcnJheUFyZyhyZWNvZ25pemVyLCAncmVtb3ZlJywgdGhpcykpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVjb2duaXplciA9IHRoaXMuZ2V0KHJlY29nbml6ZXIpO1xuXG4gICAgICAgIC8vIGxldCdzIG1ha2Ugc3VyZSB0aGlzIHJlY29nbml6ZXIgZXhpc3RzXG4gICAgICAgIGlmIChyZWNvZ25pemVyKSB7XG4gICAgICAgICAgICB2YXIgcmVjb2duaXplcnMgPSB0aGlzLnJlY29nbml6ZXJzO1xuICAgICAgICAgICAgdmFyIGluZGV4ID0gaW5BcnJheShyZWNvZ25pemVycywgcmVjb2duaXplcik7XG5cbiAgICAgICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICByZWNvZ25pemVycy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgICAgICAgIHRoaXMudG91Y2hBY3Rpb24udXBkYXRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogYmluZCBldmVudFxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBldmVudHNcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyXG4gICAgICogQHJldHVybnMge0V2ZW50RW1pdHRlcn0gdGhpc1xuICAgICAqL1xuICAgIG9uOiBmdW5jdGlvbihldmVudHMsIGhhbmRsZXIpIHtcbiAgICAgICAgdmFyIGhhbmRsZXJzID0gdGhpcy5oYW5kbGVycztcbiAgICAgICAgZWFjaChzcGxpdFN0cihldmVudHMpLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgaGFuZGxlcnNbZXZlbnRdID0gaGFuZGxlcnNbZXZlbnRdIHx8IFtdO1xuICAgICAgICAgICAgaGFuZGxlcnNbZXZlbnRdLnB1c2goaGFuZGxlcik7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogdW5iaW5kIGV2ZW50LCBsZWF2ZSBlbWl0IGJsYW5rIHRvIHJlbW92ZSBhbGwgaGFuZGxlcnNcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRzXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2hhbmRsZXJdXG4gICAgICogQHJldHVybnMge0V2ZW50RW1pdHRlcn0gdGhpc1xuICAgICAqL1xuICAgIG9mZjogZnVuY3Rpb24oZXZlbnRzLCBoYW5kbGVyKSB7XG4gICAgICAgIHZhciBoYW5kbGVycyA9IHRoaXMuaGFuZGxlcnM7XG4gICAgICAgIGVhY2goc3BsaXRTdHIoZXZlbnRzKSwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgIGlmICghaGFuZGxlcikge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBoYW5kbGVyc1tldmVudF07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGhhbmRsZXJzW2V2ZW50XSAmJiBoYW5kbGVyc1tldmVudF0uc3BsaWNlKGluQXJyYXkoaGFuZGxlcnNbZXZlbnRdLCBoYW5kbGVyKSwgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogZW1pdCBldmVudCB0byB0aGUgbGlzdGVuZXJzXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50XG4gICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGFcbiAgICAgKi9cbiAgICBlbWl0OiBmdW5jdGlvbihldmVudCwgZGF0YSkge1xuICAgICAgICAvLyB3ZSBhbHNvIHdhbnQgdG8gdHJpZ2dlciBkb20gZXZlbnRzXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuZG9tRXZlbnRzKSB7XG4gICAgICAgICAgICB0cmlnZ2VyRG9tRXZlbnQoZXZlbnQsIGRhdGEpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gbm8gaGFuZGxlcnMsIHNvIHNraXAgaXQgYWxsXG4gICAgICAgIHZhciBoYW5kbGVycyA9IHRoaXMuaGFuZGxlcnNbZXZlbnRdICYmIHRoaXMuaGFuZGxlcnNbZXZlbnRdLnNsaWNlKCk7XG4gICAgICAgIGlmICghaGFuZGxlcnMgfHwgIWhhbmRsZXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgZGF0YS50eXBlID0gZXZlbnQ7XG4gICAgICAgIGRhdGEucHJldmVudERlZmF1bHQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGRhdGEuc3JjRXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfTtcblxuICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgIHdoaWxlIChpIDwgaGFuZGxlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICBoYW5kbGVyc1tpXShkYXRhKTtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBkZXN0cm95IHRoZSBtYW5hZ2VyIGFuZCB1bmJpbmRzIGFsbCBldmVudHNcbiAgICAgKiBpdCBkb2Vzbid0IHVuYmluZCBkb20gZXZlbnRzLCB0aGF0IGlzIHRoZSB1c2VyIG93biByZXNwb25zaWJpbGl0eVxuICAgICAqL1xuICAgIGRlc3Ryb3k6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmVsZW1lbnQgJiYgdG9nZ2xlQ3NzUHJvcHModGhpcywgZmFsc2UpO1xuXG4gICAgICAgIHRoaXMuaGFuZGxlcnMgPSB7fTtcbiAgICAgICAgdGhpcy5zZXNzaW9uID0ge307XG4gICAgICAgIHRoaXMuaW5wdXQuZGVzdHJveSgpO1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBudWxsO1xuICAgIH1cbn07XG5cbi8qKlxuICogYWRkL3JlbW92ZSB0aGUgY3NzIHByb3BlcnRpZXMgYXMgZGVmaW5lZCBpbiBtYW5hZ2VyLm9wdGlvbnMuY3NzUHJvcHNcbiAqIEBwYXJhbSB7TWFuYWdlcn0gbWFuYWdlclxuICogQHBhcmFtIHtCb29sZWFufSBhZGRcbiAqL1xuZnVuY3Rpb24gdG9nZ2xlQ3NzUHJvcHMobWFuYWdlciwgYWRkKSB7XG4gICAgdmFyIGVsZW1lbnQgPSBtYW5hZ2VyLmVsZW1lbnQ7XG4gICAgaWYgKCFlbGVtZW50LnN0eWxlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZWFjaChtYW5hZ2VyLm9wdGlvbnMuY3NzUHJvcHMsIGZ1bmN0aW9uKHZhbHVlLCBuYW1lKSB7XG4gICAgICAgIGVsZW1lbnQuc3R5bGVbcHJlZml4ZWQoZWxlbWVudC5zdHlsZSwgbmFtZSldID0gYWRkID8gdmFsdWUgOiAnJztcbiAgICB9KTtcbn1cblxuLyoqXG4gKiB0cmlnZ2VyIGRvbSBldmVudFxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50XG4gKiBAcGFyYW0ge09iamVjdH0gZGF0YVxuICovXG5mdW5jdGlvbiB0cmlnZ2VyRG9tRXZlbnQoZXZlbnQsIGRhdGEpIHtcbiAgICB2YXIgZ2VzdHVyZUV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG4gICAgZ2VzdHVyZUV2ZW50LmluaXRFdmVudChldmVudCwgdHJ1ZSwgdHJ1ZSk7XG4gICAgZ2VzdHVyZUV2ZW50Lmdlc3R1cmUgPSBkYXRhO1xuICAgIGRhdGEudGFyZ2V0LmRpc3BhdGNoRXZlbnQoZ2VzdHVyZUV2ZW50KTtcbn1cblxuYXNzaWduKEhhbW1lciwge1xuICAgIElOUFVUX1NUQVJUOiBJTlBVVF9TVEFSVCxcbiAgICBJTlBVVF9NT1ZFOiBJTlBVVF9NT1ZFLFxuICAgIElOUFVUX0VORDogSU5QVVRfRU5ELFxuICAgIElOUFVUX0NBTkNFTDogSU5QVVRfQ0FOQ0VMLFxuXG4gICAgU1RBVEVfUE9TU0lCTEU6IFNUQVRFX1BPU1NJQkxFLFxuICAgIFNUQVRFX0JFR0FOOiBTVEFURV9CRUdBTixcbiAgICBTVEFURV9DSEFOR0VEOiBTVEFURV9DSEFOR0VELFxuICAgIFNUQVRFX0VOREVEOiBTVEFURV9FTkRFRCxcbiAgICBTVEFURV9SRUNPR05JWkVEOiBTVEFURV9SRUNPR05JWkVELFxuICAgIFNUQVRFX0NBTkNFTExFRDogU1RBVEVfQ0FOQ0VMTEVELFxuICAgIFNUQVRFX0ZBSUxFRDogU1RBVEVfRkFJTEVELFxuXG4gICAgRElSRUNUSU9OX05PTkU6IERJUkVDVElPTl9OT05FLFxuICAgIERJUkVDVElPTl9MRUZUOiBESVJFQ1RJT05fTEVGVCxcbiAgICBESVJFQ1RJT05fUklHSFQ6IERJUkVDVElPTl9SSUdIVCxcbiAgICBESVJFQ1RJT05fVVA6IERJUkVDVElPTl9VUCxcbiAgICBESVJFQ1RJT05fRE9XTjogRElSRUNUSU9OX0RPV04sXG4gICAgRElSRUNUSU9OX0hPUklaT05UQUw6IERJUkVDVElPTl9IT1JJWk9OVEFMLFxuICAgIERJUkVDVElPTl9WRVJUSUNBTDogRElSRUNUSU9OX1ZFUlRJQ0FMLFxuICAgIERJUkVDVElPTl9BTEw6IERJUkVDVElPTl9BTEwsXG5cbiAgICBNYW5hZ2VyOiBNYW5hZ2VyLFxuICAgIElucHV0OiBJbnB1dCxcbiAgICBUb3VjaEFjdGlvbjogVG91Y2hBY3Rpb24sXG5cbiAgICBUb3VjaElucHV0OiBUb3VjaElucHV0LFxuICAgIE1vdXNlSW5wdXQ6IE1vdXNlSW5wdXQsXG4gICAgUG9pbnRlckV2ZW50SW5wdXQ6IFBvaW50ZXJFdmVudElucHV0LFxuICAgIFRvdWNoTW91c2VJbnB1dDogVG91Y2hNb3VzZUlucHV0LFxuICAgIFNpbmdsZVRvdWNoSW5wdXQ6IFNpbmdsZVRvdWNoSW5wdXQsXG5cbiAgICBSZWNvZ25pemVyOiBSZWNvZ25pemVyLFxuICAgIEF0dHJSZWNvZ25pemVyOiBBdHRyUmVjb2duaXplcixcbiAgICBUYXA6IFRhcFJlY29nbml6ZXIsXG4gICAgUGFuOiBQYW5SZWNvZ25pemVyLFxuICAgIFN3aXBlOiBTd2lwZVJlY29nbml6ZXIsXG4gICAgUGluY2g6IFBpbmNoUmVjb2duaXplcixcbiAgICBSb3RhdGU6IFJvdGF0ZVJlY29nbml6ZXIsXG4gICAgUHJlc3M6IFByZXNzUmVjb2duaXplcixcblxuICAgIG9uOiBhZGRFdmVudExpc3RlbmVycyxcbiAgICBvZmY6IHJlbW92ZUV2ZW50TGlzdGVuZXJzLFxuICAgIGVhY2g6IGVhY2gsXG4gICAgbWVyZ2U6IG1lcmdlLFxuICAgIGV4dGVuZDogZXh0ZW5kLFxuICAgIGFzc2lnbjogYXNzaWduLFxuICAgIGluaGVyaXQ6IGluaGVyaXQsXG4gICAgYmluZEZuOiBiaW5kRm4sXG4gICAgcHJlZml4ZWQ6IHByZWZpeGVkXG59KTtcblxuLy8gdGhpcyBwcmV2ZW50cyBlcnJvcnMgd2hlbiBIYW1tZXIgaXMgbG9hZGVkIGluIHRoZSBwcmVzZW5jZSBvZiBhbiBBTURcbi8vICBzdHlsZSBsb2FkZXIgYnV0IGJ5IHNjcmlwdCB0YWcsIG5vdCBieSB0aGUgbG9hZGVyLlxudmFyIGZyZWVHbG9iYWwgPSAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnID8gc2VsZiA6IHt9KSk7IC8vIGpzaGludCBpZ25vcmU6bGluZVxuZnJlZUdsb2JhbC5IYW1tZXIgPSBIYW1tZXI7XG5cbmlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBIYW1tZXI7XG4gICAgfSk7XG59IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgIT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IEhhbW1lcjtcbn0gZWxzZSB7XG4gICAgd2luZG93W2V4cG9ydE5hbWVdID0gSGFtbWVyO1xufVxuXG59KSh3aW5kb3csIGRvY3VtZW50LCAnSGFtbWVyJyk7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9oYW1tZXJqcy9oYW1tZXIuanNcbiAqKiBtb2R1bGUgaWQgPSA3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nmodule.exports = __webpack_require__(9);\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL2luZGV4LmpzPzQ3YmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEiLCJmaWxlIjoiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL3NyYy9qcy9tYWluJyk7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9wZXJmZWN0LXNjcm9sbGJhci9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDhcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar destroy = __webpack_require__(10)\n  , initialize = __webpack_require__(18)\n  , update = __webpack_require__(28);\n\nmodule.exports = {\n  initialize: initialize,\n  update: update,\n  destroy: destroy\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9tYWluLmpzP2ExYjYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGRlc3Ryb3kgPSByZXF1aXJlKCcuL3BsdWdpbi9kZXN0cm95JylcbiAgLCBpbml0aWFsaXplID0gcmVxdWlyZSgnLi9wbHVnaW4vaW5pdGlhbGl6ZScpXG4gICwgdXBkYXRlID0gcmVxdWlyZSgnLi9wbHVnaW4vdXBkYXRlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpbml0aWFsaXplOiBpbml0aWFsaXplLFxuICB1cGRhdGU6IHVwZGF0ZSxcbiAgZGVzdHJveTogZGVzdHJveVxufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9tYWluLmpzXG4gKiogbW9kdWxlIGlkID0gOVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar d = __webpack_require__(11)\n  , h = __webpack_require__(12)\n  , instances = __webpack_require__(14);\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n\n  if (!i) {\n    return;\n  }\n\n  i.event.unbindAll();\n  d.remove(i.scrollbarX);\n  d.remove(i.scrollbarY);\n  d.remove(i.scrollbarXRail);\n  d.remove(i.scrollbarYRail);\n  h.removePsClasses(element);\n\n  instances.remove(element);\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vZGVzdHJveS5qcz80ZDQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGQgPSByZXF1aXJlKCcuLi9saWIvZG9tJylcbiAgLCBoID0gcmVxdWlyZSgnLi4vbGliL2hlbHBlcicpXG4gICwgaW5zdGFuY2VzID0gcmVxdWlyZSgnLi9pbnN0YW5jZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICB2YXIgaSA9IGluc3RhbmNlcy5nZXQoZWxlbWVudCk7XG5cbiAgaWYgKCFpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaS5ldmVudC51bmJpbmRBbGwoKTtcbiAgZC5yZW1vdmUoaS5zY3JvbGxiYXJYKTtcbiAgZC5yZW1vdmUoaS5zY3JvbGxiYXJZKTtcbiAgZC5yZW1vdmUoaS5zY3JvbGxiYXJYUmFpbCk7XG4gIGQucmVtb3ZlKGkuc2Nyb2xsYmFyWVJhaWwpO1xuICBoLnJlbW92ZVBzQ2xhc3NlcyhlbGVtZW50KTtcblxuICBpbnN0YW5jZXMucmVtb3ZlKGVsZW1lbnQpO1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vZGVzdHJveS5qc1xuICoqIG1vZHVsZSBpZCA9IDEwXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 11 */
/***/ function(module, exports) {

	eval("'use strict';\n\nvar DOM = {};\n\nDOM.e = function (tagName, className) {\n  var element = document.createElement(tagName);\n  element.className = className;\n  return element;\n};\n\nDOM.appendTo = function (child, parent) {\n  parent.appendChild(child);\n  return child;\n};\n\nfunction cssGet(element, styleName) {\n  return window.getComputedStyle(element)[styleName];\n}\n\nfunction cssSet(element, styleName, styleValue) {\n  if (typeof styleValue === 'number') {\n    styleValue = styleValue.toString() + 'px';\n  }\n  element.style[styleName] = styleValue;\n  return element;\n}\n\nfunction cssMultiSet(element, obj) {\n  for (var key in obj) {\n    var val = obj[key];\n    if (typeof val === 'number') {\n      val = val.toString() + 'px';\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n\nDOM.css = function (element, styleNameOrObject, styleValue) {\n  if (typeof styleNameOrObject === 'object') {\n    // multiple set with object\n    return cssMultiSet(element, styleNameOrObject);\n  } else {\n    if (typeof styleValue === 'undefined') {\n      return cssGet(element, styleNameOrObject);\n    } else {\n      return cssSet(element, styleNameOrObject, styleValue);\n    }\n  }\n};\n\nDOM.matches = function (element, query) {\n  if (typeof element.matches !== 'undefined') {\n    return element.matches(query);\n  } else {\n    if (typeof element.matchesSelector !== 'undefined') {\n      return element.matchesSelector(query);\n    } else if (typeof element.webkitMatchesSelector !== 'undefined') {\n      return element.webkitMatchesSelector(query);\n    } else if (typeof element.mozMatchesSelector !== 'undefined') {\n      return element.mozMatchesSelector(query);\n    } else if (typeof element.msMatchesSelector !== 'undefined') {\n      return element.msMatchesSelector(query);\n    }\n  }\n};\n\nDOM.remove = function (element) {\n  if (typeof element.remove !== 'undefined') {\n    element.remove();\n  } else {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n};\n\nDOM.queryChildren = function (element, selector) {\n  return Array.prototype.filter.call(element.childNodes, function (child) {\n    return DOM.matches(child, selector);\n  });\n};\n\nmodule.exports = DOM;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9saWIvZG9tLmpzP2QyOWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBET00gPSB7fTtcblxuRE9NLmUgPSBmdW5jdGlvbiAodGFnTmFtZSwgY2xhc3NOYW1lKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWdOYW1lKTtcbiAgZWxlbWVudC5jbGFzc05hbWUgPSBjbGFzc05hbWU7XG4gIHJldHVybiBlbGVtZW50O1xufTtcblxuRE9NLmFwcGVuZFRvID0gZnVuY3Rpb24gKGNoaWxkLCBwYXJlbnQpIHtcbiAgcGFyZW50LmFwcGVuZENoaWxkKGNoaWxkKTtcbiAgcmV0dXJuIGNoaWxkO1xufTtcblxuZnVuY3Rpb24gY3NzR2V0KGVsZW1lbnQsIHN0eWxlTmFtZSkge1xuICByZXR1cm4gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWxlbWVudClbc3R5bGVOYW1lXTtcbn1cblxuZnVuY3Rpb24gY3NzU2V0KGVsZW1lbnQsIHN0eWxlTmFtZSwgc3R5bGVWYWx1ZSkge1xuICBpZiAodHlwZW9mIHN0eWxlVmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgc3R5bGVWYWx1ZSA9IHN0eWxlVmFsdWUudG9TdHJpbmcoKSArICdweCc7XG4gIH1cbiAgZWxlbWVudC5zdHlsZVtzdHlsZU5hbWVdID0gc3R5bGVWYWx1ZTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbmZ1bmN0aW9uIGNzc011bHRpU2V0KGVsZW1lbnQsIG9iaikge1xuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgdmFyIHZhbCA9IG9ialtrZXldO1xuICAgIGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJykge1xuICAgICAgdmFsID0gdmFsLnRvU3RyaW5nKCkgKyAncHgnO1xuICAgIH1cbiAgICBlbGVtZW50LnN0eWxlW2tleV0gPSB2YWw7XG4gIH1cbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbkRPTS5jc3MgPSBmdW5jdGlvbiAoZWxlbWVudCwgc3R5bGVOYW1lT3JPYmplY3QsIHN0eWxlVmFsdWUpIHtcbiAgaWYgKHR5cGVvZiBzdHlsZU5hbWVPck9iamVjdCA9PT0gJ29iamVjdCcpIHtcbiAgICAvLyBtdWx0aXBsZSBzZXQgd2l0aCBvYmplY3RcbiAgICByZXR1cm4gY3NzTXVsdGlTZXQoZWxlbWVudCwgc3R5bGVOYW1lT3JPYmplY3QpO1xuICB9IGVsc2Uge1xuICAgIGlmICh0eXBlb2Ygc3R5bGVWYWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiBjc3NHZXQoZWxlbWVudCwgc3R5bGVOYW1lT3JPYmplY3QpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gY3NzU2V0KGVsZW1lbnQsIHN0eWxlTmFtZU9yT2JqZWN0LCBzdHlsZVZhbHVlKTtcbiAgICB9XG4gIH1cbn07XG5cbkRPTS5tYXRjaGVzID0gZnVuY3Rpb24gKGVsZW1lbnQsIHF1ZXJ5KSB7XG4gIGlmICh0eXBlb2YgZWxlbWVudC5tYXRjaGVzICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBlbGVtZW50Lm1hdGNoZXMocXVlcnkpO1xuICB9IGVsc2Uge1xuICAgIGlmICh0eXBlb2YgZWxlbWVudC5tYXRjaGVzU2VsZWN0b3IgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm4gZWxlbWVudC5tYXRjaGVzU2VsZWN0b3IocXVlcnkpO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGVsZW1lbnQud2Via2l0TWF0Y2hlc1NlbGVjdG9yICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgcmV0dXJuIGVsZW1lbnQud2Via2l0TWF0Y2hlc1NlbGVjdG9yKHF1ZXJ5KTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBlbGVtZW50Lm1vek1hdGNoZXNTZWxlY3RvciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiBlbGVtZW50Lm1vek1hdGNoZXNTZWxlY3RvcihxdWVyeSk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZWxlbWVudC5tc01hdGNoZXNTZWxlY3RvciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiBlbGVtZW50Lm1zTWF0Y2hlc1NlbGVjdG9yKHF1ZXJ5KTtcbiAgICB9XG4gIH1cbn07XG5cbkRPTS5yZW1vdmUgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICBpZiAodHlwZW9mIGVsZW1lbnQucmVtb3ZlICE9PSAndW5kZWZpbmVkJykge1xuICAgIGVsZW1lbnQucmVtb3ZlKCk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKGVsZW1lbnQucGFyZW50Tm9kZSkge1xuICAgICAgZWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVsZW1lbnQpO1xuICAgIH1cbiAgfVxufTtcblxuRE9NLnF1ZXJ5Q2hpbGRyZW4gPSBmdW5jdGlvbiAoZWxlbWVudCwgc2VsZWN0b3IpIHtcbiAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5maWx0ZXIuY2FsbChlbGVtZW50LmNoaWxkTm9kZXMsIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgIHJldHVybiBET00ubWF0Y2hlcyhjaGlsZCwgc2VsZWN0b3IpO1xuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRE9NO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcGVyZmVjdC1zY3JvbGxiYXIvc3JjL2pzL2xpYi9kb20uanNcbiAqKiBtb2R1bGUgaWQgPSAxMVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar cls = __webpack_require__(13)\n  , d = __webpack_require__(11);\n\nexports.toInt = function (x) {\n  return parseInt(x, 10) || 0;\n};\n\nexports.clone = function (obj) {\n  if (obj === null) {\n    return null;\n  } else if (typeof obj === 'object') {\n    var result = {};\n    for (var key in obj) {\n      result[key] = this.clone(obj[key]);\n    }\n    return result;\n  } else {\n    return obj;\n  }\n};\n\nexports.extend = function (original, source) {\n  var result = this.clone(original);\n  for (var key in source) {\n    result[key] = this.clone(source[key]);\n  }\n  return result;\n};\n\nexports.isEditable = function (el) {\n  return d.matches(el, \"input,[contenteditable]\") ||\n         d.matches(el, \"select,[contenteditable]\") ||\n         d.matches(el, \"textarea,[contenteditable]\") ||\n         d.matches(el, \"button,[contenteditable]\");\n};\n\nexports.removePsClasses = function (element) {\n  var clsList = cls.list(element);\n  for (var i = 0; i < clsList.length; i++) {\n    var className = clsList[i];\n    if (className.indexOf('ps-') === 0) {\n      cls.remove(element, className);\n    }\n  }\n};\n\nexports.outerWidth = function (element) {\n  return this.toInt(d.css(element, 'width')) +\n         this.toInt(d.css(element, 'paddingLeft')) +\n         this.toInt(d.css(element, 'paddingRight')) +\n         this.toInt(d.css(element, 'borderLeftWidth')) +\n         this.toInt(d.css(element, 'borderRightWidth'));\n};\n\nexports.startScrolling = function (element, axis) {\n  cls.add(element, 'ps-in-scrolling');\n  if (typeof axis !== 'undefined') {\n    cls.add(element, 'ps-' + axis);\n  } else {\n    cls.add(element, 'ps-x');\n    cls.add(element, 'ps-y');\n  }\n};\n\nexports.stopScrolling = function (element, axis) {\n  cls.remove(element, 'ps-in-scrolling');\n  if (typeof axis !== 'undefined') {\n    cls.remove(element, 'ps-' + axis);\n  } else {\n    cls.remove(element, 'ps-x');\n    cls.remove(element, 'ps-y');\n  }\n};\n\nexports.env = {\n  isWebKit: 'WebkitAppearance' in document.documentElement.style,\n  supportsTouch: (('ontouchstart' in window) || window.DocumentTouch && document instanceof window.DocumentTouch),\n  supportsIePointer: window.navigator.msMaxTouchPoints !== null\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9saWIvaGVscGVyLmpzPzQwZGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLG9CQUFvQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGNscyA9IHJlcXVpcmUoJy4vY2xhc3MnKVxuICAsIGQgPSByZXF1aXJlKCcuL2RvbScpO1xuXG5leHBvcnRzLnRvSW50ID0gZnVuY3Rpb24gKHgpIHtcbiAgcmV0dXJuIHBhcnNlSW50KHgsIDEwKSB8fCAwO1xufTtcblxuZXhwb3J0cy5jbG9uZSA9IGZ1bmN0aW9uIChvYmopIHtcbiAgaWYgKG9iaiA9PT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBvYmogPT09ICdvYmplY3QnKSB7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdGhpcy5jbG9uZShvYmpba2V5XSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG9iajtcbiAgfVxufTtcblxuZXhwb3J0cy5leHRlbmQgPSBmdW5jdGlvbiAob3JpZ2luYWwsIHNvdXJjZSkge1xuICB2YXIgcmVzdWx0ID0gdGhpcy5jbG9uZShvcmlnaW5hbCk7XG4gIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICByZXN1bHRba2V5XSA9IHRoaXMuY2xvbmUoc291cmNlW2tleV0pO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG5leHBvcnRzLmlzRWRpdGFibGUgPSBmdW5jdGlvbiAoZWwpIHtcbiAgcmV0dXJuIGQubWF0Y2hlcyhlbCwgXCJpbnB1dCxbY29udGVudGVkaXRhYmxlXVwiKSB8fFxuICAgICAgICAgZC5tYXRjaGVzKGVsLCBcInNlbGVjdCxbY29udGVudGVkaXRhYmxlXVwiKSB8fFxuICAgICAgICAgZC5tYXRjaGVzKGVsLCBcInRleHRhcmVhLFtjb250ZW50ZWRpdGFibGVdXCIpIHx8XG4gICAgICAgICBkLm1hdGNoZXMoZWwsIFwiYnV0dG9uLFtjb250ZW50ZWRpdGFibGVdXCIpO1xufTtcblxuZXhwb3J0cy5yZW1vdmVQc0NsYXNzZXMgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICB2YXIgY2xzTGlzdCA9IGNscy5saXN0KGVsZW1lbnQpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGNsc0xpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgY2xhc3NOYW1lID0gY2xzTGlzdFtpXTtcbiAgICBpZiAoY2xhc3NOYW1lLmluZGV4T2YoJ3BzLScpID09PSAwKSB7XG4gICAgICBjbHMucmVtb3ZlKGVsZW1lbnQsIGNsYXNzTmFtZSk7XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnRzLm91dGVyV2lkdGggPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICByZXR1cm4gdGhpcy50b0ludChkLmNzcyhlbGVtZW50LCAnd2lkdGgnKSkgK1xuICAgICAgICAgdGhpcy50b0ludChkLmNzcyhlbGVtZW50LCAncGFkZGluZ0xlZnQnKSkgK1xuICAgICAgICAgdGhpcy50b0ludChkLmNzcyhlbGVtZW50LCAncGFkZGluZ1JpZ2h0JykpICtcbiAgICAgICAgIHRoaXMudG9JbnQoZC5jc3MoZWxlbWVudCwgJ2JvcmRlckxlZnRXaWR0aCcpKSArXG4gICAgICAgICB0aGlzLnRvSW50KGQuY3NzKGVsZW1lbnQsICdib3JkZXJSaWdodFdpZHRoJykpO1xufTtcblxuZXhwb3J0cy5zdGFydFNjcm9sbGluZyA9IGZ1bmN0aW9uIChlbGVtZW50LCBheGlzKSB7XG4gIGNscy5hZGQoZWxlbWVudCwgJ3BzLWluLXNjcm9sbGluZycpO1xuICBpZiAodHlwZW9mIGF4aXMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgY2xzLmFkZChlbGVtZW50LCAncHMtJyArIGF4aXMpO1xuICB9IGVsc2Uge1xuICAgIGNscy5hZGQoZWxlbWVudCwgJ3BzLXgnKTtcbiAgICBjbHMuYWRkKGVsZW1lbnQsICdwcy15Jyk7XG4gIH1cbn07XG5cbmV4cG9ydHMuc3RvcFNjcm9sbGluZyA9IGZ1bmN0aW9uIChlbGVtZW50LCBheGlzKSB7XG4gIGNscy5yZW1vdmUoZWxlbWVudCwgJ3BzLWluLXNjcm9sbGluZycpO1xuICBpZiAodHlwZW9mIGF4aXMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgY2xzLnJlbW92ZShlbGVtZW50LCAncHMtJyArIGF4aXMpO1xuICB9IGVsc2Uge1xuICAgIGNscy5yZW1vdmUoZWxlbWVudCwgJ3BzLXgnKTtcbiAgICBjbHMucmVtb3ZlKGVsZW1lbnQsICdwcy15Jyk7XG4gIH1cbn07XG5cbmV4cG9ydHMuZW52ID0ge1xuICBpc1dlYktpdDogJ1dlYmtpdEFwcGVhcmFuY2UnIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZSxcbiAgc3VwcG9ydHNUb3VjaDogKCgnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cpIHx8IHdpbmRvdy5Eb2N1bWVudFRvdWNoICYmIGRvY3VtZW50IGluc3RhbmNlb2Ygd2luZG93LkRvY3VtZW50VG91Y2gpLFxuICBzdXBwb3J0c0llUG9pbnRlcjogd2luZG93Lm5hdmlnYXRvci5tc01heFRvdWNoUG9pbnRzICE9PSBudWxsXG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcGVyZmVjdC1zY3JvbGxiYXIvc3JjL2pzL2xpYi9oZWxwZXIuanNcbiAqKiBtb2R1bGUgaWQgPSAxMlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 13 */
/***/ function(module, exports) {

	eval("'use strict';\n\nfunction oldAdd(element, className) {\n  var classes = element.className.split(' ');\n  if (classes.indexOf(className) < 0) {\n    classes.push(className);\n  }\n  element.className = classes.join(' ');\n}\n\nfunction oldRemove(element, className) {\n  var classes = element.className.split(' ');\n  var idx = classes.indexOf(className);\n  if (idx >= 0) {\n    classes.splice(idx, 1);\n  }\n  element.className = classes.join(' ');\n}\n\nexports.add = function (element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    oldAdd(element, className);\n  }\n};\n\nexports.remove = function (element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    oldRemove(element, className);\n  }\n};\n\nexports.list = function (element) {\n  if (element.classList) {\n    return Array.prototype.slice.apply(element.classList);\n  } else {\n    return element.className.split(' ');\n  }\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9saWIvY2xhc3MuanM/MmJjNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBIiwiZmlsZSI6IjEzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBvbGRBZGQoZWxlbWVudCwgY2xhc3NOYW1lKSB7XG4gIHZhciBjbGFzc2VzID0gZWxlbWVudC5jbGFzc05hbWUuc3BsaXQoJyAnKTtcbiAgaWYgKGNsYXNzZXMuaW5kZXhPZihjbGFzc05hbWUpIDwgMCkge1xuICAgIGNsYXNzZXMucHVzaChjbGFzc05hbWUpO1xuICB9XG4gIGVsZW1lbnQuY2xhc3NOYW1lID0gY2xhc3Nlcy5qb2luKCcgJyk7XG59XG5cbmZ1bmN0aW9uIG9sZFJlbW92ZShlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgdmFyIGNsYXNzZXMgPSBlbGVtZW50LmNsYXNzTmFtZS5zcGxpdCgnICcpO1xuICB2YXIgaWR4ID0gY2xhc3Nlcy5pbmRleE9mKGNsYXNzTmFtZSk7XG4gIGlmIChpZHggPj0gMCkge1xuICAgIGNsYXNzZXMuc3BsaWNlKGlkeCwgMSk7XG4gIH1cbiAgZWxlbWVudC5jbGFzc05hbWUgPSBjbGFzc2VzLmpvaW4oJyAnKTtcbn1cblxuZXhwb3J0cy5hZGQgPSBmdW5jdGlvbiAoZWxlbWVudCwgY2xhc3NOYW1lKSB7XG4gIGlmIChlbGVtZW50LmNsYXNzTGlzdCkge1xuICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xuICB9IGVsc2Uge1xuICAgIG9sZEFkZChlbGVtZW50LCBjbGFzc05hbWUpO1xuICB9XG59O1xuXG5leHBvcnRzLnJlbW92ZSA9IGZ1bmN0aW9uIChlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KSB7XG4gICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XG4gIH0gZWxzZSB7XG4gICAgb2xkUmVtb3ZlKGVsZW1lbnQsIGNsYXNzTmFtZSk7XG4gIH1cbn07XG5cbmV4cG9ydHMubGlzdCA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gIGlmIChlbGVtZW50LmNsYXNzTGlzdCkge1xuICAgIHJldHVybiBBcnJheS5wcm90b3R5cGUuc2xpY2UuYXBwbHkoZWxlbWVudC5jbGFzc0xpc3QpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBlbGVtZW50LmNsYXNzTmFtZS5zcGxpdCgnICcpO1xuICB9XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcGVyZmVjdC1zY3JvbGxiYXIvc3JjL2pzL2xpYi9jbGFzcy5qc1xuICoqIG1vZHVsZSBpZCA9IDEzXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar cls = __webpack_require__(13)\n  , d = __webpack_require__(11)\n  , defaultSettings = __webpack_require__(15)\n  , EventManager = __webpack_require__(16)\n  , guid = __webpack_require__(17)\n  , h = __webpack_require__(12);\n\nvar instances = {};\n\nfunction Instance(element) {\n  var i = this;\n\n  i.settings = h.clone(defaultSettings);\n  i.containerWidth = null;\n  i.containerHeight = null;\n  i.contentWidth = null;\n  i.contentHeight = null;\n\n  i.isRtl = d.css(element, 'direction') === \"rtl\";\n  i.isNegativeScroll = (function () {\n    var originalScrollLeft = element.scrollLeft;\n    var result = null;\n    element.scrollLeft = -1;\n    result = element.scrollLeft < 0;\n    element.scrollLeft = originalScrollLeft;\n    return result;\n  })();\n  i.negativeScrollAdjustment = i.isNegativeScroll ? element.scrollWidth - element.clientWidth : 0;\n  i.event = new EventManager();\n  i.ownerDocument = element.ownerDocument || document;\n\n  function focus() {\n    cls.add(element, 'ps-focus');\n  }\n\n  function blur() {\n    cls.remove(element, 'ps-focus');\n  }\n\n  i.scrollbarXRail = d.appendTo(d.e('div', 'ps-scrollbar-x-rail'), element);\n  i.scrollbarX = d.appendTo(d.e('div', 'ps-scrollbar-x'), i.scrollbarXRail);\n  i.scrollbarX.setAttribute('tabindex', 0);\n  i.event.bind(i.scrollbarX, 'focus', focus);\n  i.event.bind(i.scrollbarX, 'blur', blur);\n  i.scrollbarXActive = null;\n  i.scrollbarXWidth = null;\n  i.scrollbarXLeft = null;\n  i.scrollbarXBottom = h.toInt(d.css(i.scrollbarXRail, 'bottom'));\n  i.isScrollbarXUsingBottom = i.scrollbarXBottom === i.scrollbarXBottom; // !isNaN\n  i.scrollbarXTop = i.isScrollbarXUsingBottom ? null : h.toInt(d.css(i.scrollbarXRail, 'top'));\n  i.railBorderXWidth = h.toInt(d.css(i.scrollbarXRail, 'borderLeftWidth')) + h.toInt(d.css(i.scrollbarXRail, 'borderRightWidth'));\n  // Set rail to display:block to calculate margins\n  d.css(i.scrollbarXRail, 'display', 'block');\n  i.railXMarginWidth = h.toInt(d.css(i.scrollbarXRail, 'marginLeft')) + h.toInt(d.css(i.scrollbarXRail, 'marginRight'));\n  d.css(i.scrollbarXRail, 'display', '');\n  i.railXWidth = null;\n  i.railXRatio = null;\n\n  i.scrollbarYRail = d.appendTo(d.e('div', 'ps-scrollbar-y-rail'), element);\n  i.scrollbarY = d.appendTo(d.e('div', 'ps-scrollbar-y'), i.scrollbarYRail);\n  i.scrollbarY.setAttribute('tabindex', 0);\n  i.event.bind(i.scrollbarY, 'focus', focus);\n  i.event.bind(i.scrollbarY, 'blur', blur);\n  i.scrollbarYActive = null;\n  i.scrollbarYHeight = null;\n  i.scrollbarYTop = null;\n  i.scrollbarYRight = h.toInt(d.css(i.scrollbarYRail, 'right'));\n  i.isScrollbarYUsingRight = i.scrollbarYRight === i.scrollbarYRight; // !isNaN\n  i.scrollbarYLeft = i.isScrollbarYUsingRight ? null : h.toInt(d.css(i.scrollbarYRail, 'left'));\n  i.scrollbarYOuterWidth = i.isRtl ? h.outerWidth(i.scrollbarY) : null;\n  i.railBorderYWidth = h.toInt(d.css(i.scrollbarYRail, 'borderTopWidth')) + h.toInt(d.css(i.scrollbarYRail, 'borderBottomWidth'));\n  d.css(i.scrollbarYRail, 'display', 'block');\n  i.railYMarginHeight = h.toInt(d.css(i.scrollbarYRail, 'marginTop')) + h.toInt(d.css(i.scrollbarYRail, 'marginBottom'));\n  d.css(i.scrollbarYRail, 'display', '');\n  i.railYHeight = null;\n  i.railYRatio = null;\n}\n\nfunction getId(element) {\n  if (typeof element.dataset === 'undefined') {\n    return element.getAttribute('data-ps-id');\n  } else {\n    return element.dataset.psId;\n  }\n}\n\nfunction setId(element, id) {\n  if (typeof element.dataset === 'undefined') {\n    element.setAttribute('data-ps-id', id);\n  } else {\n    element.dataset.psId = id;\n  }\n}\n\nfunction removeId(element) {\n  if (typeof element.dataset === 'undefined') {\n    element.removeAttribute('data-ps-id');\n  } else {\n    delete element.dataset.psId;\n  }\n}\n\nexports.add = function (element) {\n  var newId = guid();\n  setId(element, newId);\n  instances[newId] = new Instance(element);\n  return instances[newId];\n};\n\nexports.remove = function (element) {\n  delete instances[getId(element)];\n  removeId(element);\n};\n\nexports.get = function (element) {\n  return instances[getId(element)];\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vaW5zdGFuY2VzLmpzPzNiZDIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRTtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIxNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGNscyA9IHJlcXVpcmUoJy4uL2xpYi9jbGFzcycpXG4gICwgZCA9IHJlcXVpcmUoJy4uL2xpYi9kb20nKVxuICAsIGRlZmF1bHRTZXR0aW5ncyA9IHJlcXVpcmUoJy4vZGVmYXVsdC1zZXR0aW5nJylcbiAgLCBFdmVudE1hbmFnZXIgPSByZXF1aXJlKCcuLi9saWIvZXZlbnQtbWFuYWdlcicpXG4gICwgZ3VpZCA9IHJlcXVpcmUoJy4uL2xpYi9ndWlkJylcbiAgLCBoID0gcmVxdWlyZSgnLi4vbGliL2hlbHBlcicpO1xuXG52YXIgaW5zdGFuY2VzID0ge307XG5cbmZ1bmN0aW9uIEluc3RhbmNlKGVsZW1lbnQpIHtcbiAgdmFyIGkgPSB0aGlzO1xuXG4gIGkuc2V0dGluZ3MgPSBoLmNsb25lKGRlZmF1bHRTZXR0aW5ncyk7XG4gIGkuY29udGFpbmVyV2lkdGggPSBudWxsO1xuICBpLmNvbnRhaW5lckhlaWdodCA9IG51bGw7XG4gIGkuY29udGVudFdpZHRoID0gbnVsbDtcbiAgaS5jb250ZW50SGVpZ2h0ID0gbnVsbDtcblxuICBpLmlzUnRsID0gZC5jc3MoZWxlbWVudCwgJ2RpcmVjdGlvbicpID09PSBcInJ0bFwiO1xuICBpLmlzTmVnYXRpdmVTY3JvbGwgPSAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBvcmlnaW5hbFNjcm9sbExlZnQgPSBlbGVtZW50LnNjcm9sbExlZnQ7XG4gICAgdmFyIHJlc3VsdCA9IG51bGw7XG4gICAgZWxlbWVudC5zY3JvbGxMZWZ0ID0gLTE7XG4gICAgcmVzdWx0ID0gZWxlbWVudC5zY3JvbGxMZWZ0IDwgMDtcbiAgICBlbGVtZW50LnNjcm9sbExlZnQgPSBvcmlnaW5hbFNjcm9sbExlZnQ7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSkoKTtcbiAgaS5uZWdhdGl2ZVNjcm9sbEFkanVzdG1lbnQgPSBpLmlzTmVnYXRpdmVTY3JvbGwgPyBlbGVtZW50LnNjcm9sbFdpZHRoIC0gZWxlbWVudC5jbGllbnRXaWR0aCA6IDA7XG4gIGkuZXZlbnQgPSBuZXcgRXZlbnRNYW5hZ2VyKCk7XG4gIGkub3duZXJEb2N1bWVudCA9IGVsZW1lbnQub3duZXJEb2N1bWVudCB8fCBkb2N1bWVudDtcblxuICBmdW5jdGlvbiBmb2N1cygpIHtcbiAgICBjbHMuYWRkKGVsZW1lbnQsICdwcy1mb2N1cycpO1xuICB9XG5cbiAgZnVuY3Rpb24gYmx1cigpIHtcbiAgICBjbHMucmVtb3ZlKGVsZW1lbnQsICdwcy1mb2N1cycpO1xuICB9XG5cbiAgaS5zY3JvbGxiYXJYUmFpbCA9IGQuYXBwZW5kVG8oZC5lKCdkaXYnLCAncHMtc2Nyb2xsYmFyLXgtcmFpbCcpLCBlbGVtZW50KTtcbiAgaS5zY3JvbGxiYXJYID0gZC5hcHBlbmRUbyhkLmUoJ2RpdicsICdwcy1zY3JvbGxiYXIteCcpLCBpLnNjcm9sbGJhclhSYWlsKTtcbiAgaS5zY3JvbGxiYXJYLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAwKTtcbiAgaS5ldmVudC5iaW5kKGkuc2Nyb2xsYmFyWCwgJ2ZvY3VzJywgZm9jdXMpO1xuICBpLmV2ZW50LmJpbmQoaS5zY3JvbGxiYXJYLCAnYmx1cicsIGJsdXIpO1xuICBpLnNjcm9sbGJhclhBY3RpdmUgPSBudWxsO1xuICBpLnNjcm9sbGJhclhXaWR0aCA9IG51bGw7XG4gIGkuc2Nyb2xsYmFyWExlZnQgPSBudWxsO1xuICBpLnNjcm9sbGJhclhCb3R0b20gPSBoLnRvSW50KGQuY3NzKGkuc2Nyb2xsYmFyWFJhaWwsICdib3R0b20nKSk7XG4gIGkuaXNTY3JvbGxiYXJYVXNpbmdCb3R0b20gPSBpLnNjcm9sbGJhclhCb3R0b20gPT09IGkuc2Nyb2xsYmFyWEJvdHRvbTsgLy8gIWlzTmFOXG4gIGkuc2Nyb2xsYmFyWFRvcCA9IGkuaXNTY3JvbGxiYXJYVXNpbmdCb3R0b20gPyBudWxsIDogaC50b0ludChkLmNzcyhpLnNjcm9sbGJhclhSYWlsLCAndG9wJykpO1xuICBpLnJhaWxCb3JkZXJYV2lkdGggPSBoLnRvSW50KGQuY3NzKGkuc2Nyb2xsYmFyWFJhaWwsICdib3JkZXJMZWZ0V2lkdGgnKSkgKyBoLnRvSW50KGQuY3NzKGkuc2Nyb2xsYmFyWFJhaWwsICdib3JkZXJSaWdodFdpZHRoJykpO1xuICAvLyBTZXQgcmFpbCB0byBkaXNwbGF5OmJsb2NrIHRvIGNhbGN1bGF0ZSBtYXJnaW5zXG4gIGQuY3NzKGkuc2Nyb2xsYmFyWFJhaWwsICdkaXNwbGF5JywgJ2Jsb2NrJyk7XG4gIGkucmFpbFhNYXJnaW5XaWR0aCA9IGgudG9JbnQoZC5jc3MoaS5zY3JvbGxiYXJYUmFpbCwgJ21hcmdpbkxlZnQnKSkgKyBoLnRvSW50KGQuY3NzKGkuc2Nyb2xsYmFyWFJhaWwsICdtYXJnaW5SaWdodCcpKTtcbiAgZC5jc3MoaS5zY3JvbGxiYXJYUmFpbCwgJ2Rpc3BsYXknLCAnJyk7XG4gIGkucmFpbFhXaWR0aCA9IG51bGw7XG4gIGkucmFpbFhSYXRpbyA9IG51bGw7XG5cbiAgaS5zY3JvbGxiYXJZUmFpbCA9IGQuYXBwZW5kVG8oZC5lKCdkaXYnLCAncHMtc2Nyb2xsYmFyLXktcmFpbCcpLCBlbGVtZW50KTtcbiAgaS5zY3JvbGxiYXJZID0gZC5hcHBlbmRUbyhkLmUoJ2RpdicsICdwcy1zY3JvbGxiYXIteScpLCBpLnNjcm9sbGJhcllSYWlsKTtcbiAgaS5zY3JvbGxiYXJZLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAwKTtcbiAgaS5ldmVudC5iaW5kKGkuc2Nyb2xsYmFyWSwgJ2ZvY3VzJywgZm9jdXMpO1xuICBpLmV2ZW50LmJpbmQoaS5zY3JvbGxiYXJZLCAnYmx1cicsIGJsdXIpO1xuICBpLnNjcm9sbGJhcllBY3RpdmUgPSBudWxsO1xuICBpLnNjcm9sbGJhcllIZWlnaHQgPSBudWxsO1xuICBpLnNjcm9sbGJhcllUb3AgPSBudWxsO1xuICBpLnNjcm9sbGJhcllSaWdodCA9IGgudG9JbnQoZC5jc3MoaS5zY3JvbGxiYXJZUmFpbCwgJ3JpZ2h0JykpO1xuICBpLmlzU2Nyb2xsYmFyWVVzaW5nUmlnaHQgPSBpLnNjcm9sbGJhcllSaWdodCA9PT0gaS5zY3JvbGxiYXJZUmlnaHQ7IC8vICFpc05hTlxuICBpLnNjcm9sbGJhcllMZWZ0ID0gaS5pc1Njcm9sbGJhcllVc2luZ1JpZ2h0ID8gbnVsbCA6IGgudG9JbnQoZC5jc3MoaS5zY3JvbGxiYXJZUmFpbCwgJ2xlZnQnKSk7XG4gIGkuc2Nyb2xsYmFyWU91dGVyV2lkdGggPSBpLmlzUnRsID8gaC5vdXRlcldpZHRoKGkuc2Nyb2xsYmFyWSkgOiBudWxsO1xuICBpLnJhaWxCb3JkZXJZV2lkdGggPSBoLnRvSW50KGQuY3NzKGkuc2Nyb2xsYmFyWVJhaWwsICdib3JkZXJUb3BXaWR0aCcpKSArIGgudG9JbnQoZC5jc3MoaS5zY3JvbGxiYXJZUmFpbCwgJ2JvcmRlckJvdHRvbVdpZHRoJykpO1xuICBkLmNzcyhpLnNjcm9sbGJhcllSYWlsLCAnZGlzcGxheScsICdibG9jaycpO1xuICBpLnJhaWxZTWFyZ2luSGVpZ2h0ID0gaC50b0ludChkLmNzcyhpLnNjcm9sbGJhcllSYWlsLCAnbWFyZ2luVG9wJykpICsgaC50b0ludChkLmNzcyhpLnNjcm9sbGJhcllSYWlsLCAnbWFyZ2luQm90dG9tJykpO1xuICBkLmNzcyhpLnNjcm9sbGJhcllSYWlsLCAnZGlzcGxheScsICcnKTtcbiAgaS5yYWlsWUhlaWdodCA9IG51bGw7XG4gIGkucmFpbFlSYXRpbyA9IG51bGw7XG59XG5cbmZ1bmN0aW9uIGdldElkKGVsZW1lbnQpIHtcbiAgaWYgKHR5cGVvZiBlbGVtZW50LmRhdGFzZXQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXBzLWlkJyk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGVsZW1lbnQuZGF0YXNldC5wc0lkO1xuICB9XG59XG5cbmZ1bmN0aW9uIHNldElkKGVsZW1lbnQsIGlkKSB7XG4gIGlmICh0eXBlb2YgZWxlbWVudC5kYXRhc2V0ID09PSAndW5kZWZpbmVkJykge1xuICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLXBzLWlkJywgaWQpO1xuICB9IGVsc2Uge1xuICAgIGVsZW1lbnQuZGF0YXNldC5wc0lkID0gaWQ7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlSWQoZWxlbWVudCkge1xuICBpZiAodHlwZW9mIGVsZW1lbnQuZGF0YXNldCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS1wcy1pZCcpO1xuICB9IGVsc2Uge1xuICAgIGRlbGV0ZSBlbGVtZW50LmRhdGFzZXQucHNJZDtcbiAgfVxufVxuXG5leHBvcnRzLmFkZCA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gIHZhciBuZXdJZCA9IGd1aWQoKTtcbiAgc2V0SWQoZWxlbWVudCwgbmV3SWQpO1xuICBpbnN0YW5jZXNbbmV3SWRdID0gbmV3IEluc3RhbmNlKGVsZW1lbnQpO1xuICByZXR1cm4gaW5zdGFuY2VzW25ld0lkXTtcbn07XG5cbmV4cG9ydHMucmVtb3ZlID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgZGVsZXRlIGluc3RhbmNlc1tnZXRJZChlbGVtZW50KV07XG4gIHJlbW92ZUlkKGVsZW1lbnQpO1xufTtcblxuZXhwb3J0cy5nZXQgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICByZXR1cm4gaW5zdGFuY2VzW2dldElkKGVsZW1lbnQpXTtcbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9wZXJmZWN0LXNjcm9sbGJhci9zcmMvanMvcGx1Z2luL2luc3RhbmNlcy5qc1xuICoqIG1vZHVsZSBpZCA9IDE0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 15 */
/***/ function(module, exports) {

	eval("'use strict';\n\nmodule.exports = {\n  maxScrollbarLength: null,\n  minScrollbarLength: null,\n  scrollXMarginOffset: 0,\n  scrollYMarginOffset: 0,\n  stopPropagationOnClick: true,\n  suppressScrollX: false,\n  suppressScrollY: false,\n  swipePropagation: true,\n  useBothWheelAxes: false,\n  useKeyboard: true,\n  useSelectionScroll: false,\n  wheelPropagation: false,\n  wheelSpeed: 1,\n  theme: 'default'\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vZGVmYXVsdC1zZXR0aW5nLmpzP2UxZmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBtYXhTY3JvbGxiYXJMZW5ndGg6IG51bGwsXG4gIG1pblNjcm9sbGJhckxlbmd0aDogbnVsbCxcbiAgc2Nyb2xsWE1hcmdpbk9mZnNldDogMCxcbiAgc2Nyb2xsWU1hcmdpbk9mZnNldDogMCxcbiAgc3RvcFByb3BhZ2F0aW9uT25DbGljazogdHJ1ZSxcbiAgc3VwcHJlc3NTY3JvbGxYOiBmYWxzZSxcbiAgc3VwcHJlc3NTY3JvbGxZOiBmYWxzZSxcbiAgc3dpcGVQcm9wYWdhdGlvbjogdHJ1ZSxcbiAgdXNlQm90aFdoZWVsQXhlczogZmFsc2UsXG4gIHVzZUtleWJvYXJkOiB0cnVlLFxuICB1c2VTZWxlY3Rpb25TY3JvbGw6IGZhbHNlLFxuICB3aGVlbFByb3BhZ2F0aW9uOiBmYWxzZSxcbiAgd2hlZWxTcGVlZDogMSxcbiAgdGhlbWU6ICdkZWZhdWx0J1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vZGVmYXVsdC1zZXR0aW5nLmpzXG4gKiogbW9kdWxlIGlkID0gMTVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 16 */
/***/ function(module, exports) {

	eval("'use strict';\n\nvar EventElement = function (element) {\n  this.element = element;\n  this.events = {};\n};\n\nEventElement.prototype.bind = function (eventName, handler) {\n  if (typeof this.events[eventName] === 'undefined') {\n    this.events[eventName] = [];\n  }\n  this.events[eventName].push(handler);\n  this.element.addEventListener(eventName, handler, false);\n};\n\nEventElement.prototype.unbind = function (eventName, handler) {\n  var isHandlerProvided = (typeof handler !== 'undefined');\n  this.events[eventName] = this.events[eventName].filter(function (hdlr) {\n    if (isHandlerProvided && hdlr !== handler) {\n      return true;\n    }\n    this.element.removeEventListener(eventName, hdlr, false);\n    return false;\n  }, this);\n};\n\nEventElement.prototype.unbindAll = function () {\n  for (var name in this.events) {\n    this.unbind(name);\n  }\n};\n\nvar EventManager = function () {\n  this.eventElements = [];\n};\n\nEventManager.prototype.eventElement = function (element) {\n  var ee = this.eventElements.filter(function (eventElement) {\n    return eventElement.element === element;\n  })[0];\n  if (typeof ee === 'undefined') {\n    ee = new EventElement(element);\n    this.eventElements.push(ee);\n  }\n  return ee;\n};\n\nEventManager.prototype.bind = function (element, eventName, handler) {\n  this.eventElement(element).bind(eventName, handler);\n};\n\nEventManager.prototype.unbind = function (element, eventName, handler) {\n  this.eventElement(element).unbind(eventName, handler);\n};\n\nEventManager.prototype.unbindAll = function () {\n  for (var i = 0; i < this.eventElements.length; i++) {\n    this.eventElements[i].unbindAll();\n  }\n};\n\nEventManager.prototype.once = function (element, eventName, handler) {\n  var ee = this.eventElement(element);\n  var onceHandler = function (e) {\n    ee.unbind(eventName, onceHandler);\n    handler(e);\n  };\n  ee.bind(eventName, onceHandler);\n};\n\nmodule.exports = EventManager;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9saWIvZXZlbnQtbWFuYWdlci5qcz84MDdiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLCtCQUErQjtBQUNoRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIxNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEV2ZW50RWxlbWVudCA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG4gIHRoaXMuZXZlbnRzID0ge307XG59O1xuXG5FdmVudEVsZW1lbnQucHJvdG90eXBlLmJpbmQgPSBmdW5jdGlvbiAoZXZlbnROYW1lLCBoYW5kbGVyKSB7XG4gIGlmICh0eXBlb2YgdGhpcy5ldmVudHNbZXZlbnROYW1lXSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB0aGlzLmV2ZW50c1tldmVudE5hbWVdID0gW107XG4gIH1cbiAgdGhpcy5ldmVudHNbZXZlbnROYW1lXS5wdXNoKGhhbmRsZXIpO1xuICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGhhbmRsZXIsIGZhbHNlKTtcbn07XG5cbkV2ZW50RWxlbWVudC5wcm90b3R5cGUudW5iaW5kID0gZnVuY3Rpb24gKGV2ZW50TmFtZSwgaGFuZGxlcikge1xuICB2YXIgaXNIYW5kbGVyUHJvdmlkZWQgPSAodHlwZW9mIGhhbmRsZXIgIT09ICd1bmRlZmluZWQnKTtcbiAgdGhpcy5ldmVudHNbZXZlbnROYW1lXSA9IHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0uZmlsdGVyKGZ1bmN0aW9uIChoZGxyKSB7XG4gICAgaWYgKGlzSGFuZGxlclByb3ZpZGVkICYmIGhkbHIgIT09IGhhbmRsZXIpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICB0aGlzLmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGhkbHIsIGZhbHNlKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sIHRoaXMpO1xufTtcblxuRXZlbnRFbGVtZW50LnByb3RvdHlwZS51bmJpbmRBbGwgPSBmdW5jdGlvbiAoKSB7XG4gIGZvciAodmFyIG5hbWUgaW4gdGhpcy5ldmVudHMpIHtcbiAgICB0aGlzLnVuYmluZChuYW1lKTtcbiAgfVxufTtcblxudmFyIEV2ZW50TWFuYWdlciA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5ldmVudEVsZW1lbnRzID0gW107XG59O1xuXG5FdmVudE1hbmFnZXIucHJvdG90eXBlLmV2ZW50RWxlbWVudCA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gIHZhciBlZSA9IHRoaXMuZXZlbnRFbGVtZW50cy5maWx0ZXIoZnVuY3Rpb24gKGV2ZW50RWxlbWVudCkge1xuICAgIHJldHVybiBldmVudEVsZW1lbnQuZWxlbWVudCA9PT0gZWxlbWVudDtcbiAgfSlbMF07XG4gIGlmICh0eXBlb2YgZWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgZWUgPSBuZXcgRXZlbnRFbGVtZW50KGVsZW1lbnQpO1xuICAgIHRoaXMuZXZlbnRFbGVtZW50cy5wdXNoKGVlKTtcbiAgfVxuICByZXR1cm4gZWU7XG59O1xuXG5FdmVudE1hbmFnZXIucHJvdG90eXBlLmJpbmQgPSBmdW5jdGlvbiAoZWxlbWVudCwgZXZlbnROYW1lLCBoYW5kbGVyKSB7XG4gIHRoaXMuZXZlbnRFbGVtZW50KGVsZW1lbnQpLmJpbmQoZXZlbnROYW1lLCBoYW5kbGVyKTtcbn07XG5cbkV2ZW50TWFuYWdlci5wcm90b3R5cGUudW5iaW5kID0gZnVuY3Rpb24gKGVsZW1lbnQsIGV2ZW50TmFtZSwgaGFuZGxlcikge1xuICB0aGlzLmV2ZW50RWxlbWVudChlbGVtZW50KS51bmJpbmQoZXZlbnROYW1lLCBoYW5kbGVyKTtcbn07XG5cbkV2ZW50TWFuYWdlci5wcm90b3R5cGUudW5iaW5kQWxsID0gZnVuY3Rpb24gKCkge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuZXZlbnRFbGVtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHRoaXMuZXZlbnRFbGVtZW50c1tpXS51bmJpbmRBbGwoKTtcbiAgfVxufTtcblxuRXZlbnRNYW5hZ2VyLnByb3RvdHlwZS5vbmNlID0gZnVuY3Rpb24gKGVsZW1lbnQsIGV2ZW50TmFtZSwgaGFuZGxlcikge1xuICB2YXIgZWUgPSB0aGlzLmV2ZW50RWxlbWVudChlbGVtZW50KTtcbiAgdmFyIG9uY2VIYW5kbGVyID0gZnVuY3Rpb24gKGUpIHtcbiAgICBlZS51bmJpbmQoZXZlbnROYW1lLCBvbmNlSGFuZGxlcik7XG4gICAgaGFuZGxlcihlKTtcbiAgfTtcbiAgZWUuYmluZChldmVudE5hbWUsIG9uY2VIYW5kbGVyKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXZlbnRNYW5hZ2VyO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcGVyZmVjdC1zY3JvbGxiYXIvc3JjL2pzL2xpYi9ldmVudC1tYW5hZ2VyLmpzXG4gKiogbW9kdWxlIGlkID0gMTZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 17 */
/***/ function(module, exports) {

	eval("'use strict';\n\nmodule.exports = (function () {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n               .toString(16)\n               .substring(1);\n  }\n  return function () {\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n           s4() + '-' + s4() + s4() + s4();\n  };\n})();\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9saWIvZ3VpZC5qcz84NzFmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIxNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSAoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBzNCgpIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcigoMSArIE1hdGgucmFuZG9tKCkpICogMHgxMDAwMClcbiAgICAgICAgICAgICAgIC50b1N0cmluZygxNilcbiAgICAgICAgICAgICAgIC5zdWJzdHJpbmcoMSk7XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gczQoKSArIHM0KCkgKyAnLScgKyBzNCgpICsgJy0nICsgczQoKSArICctJyArXG4gICAgICAgICAgIHM0KCkgKyAnLScgKyBzNCgpICsgczQoKSArIHM0KCk7XG4gIH07XG59KSgpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcGVyZmVjdC1zY3JvbGxiYXIvc3JjL2pzL2xpYi9ndWlkLmpzXG4gKiogbW9kdWxlIGlkID0gMTdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar cls = __webpack_require__(13)\n  , h = __webpack_require__(12)\n  , instances = __webpack_require__(14)\n  , updateGeometry = __webpack_require__(19);\n\n// Handlers\nvar clickRailHandler = __webpack_require__(21)\n  , dragScrollbarHandler = __webpack_require__(22)\n  , keyboardHandler = __webpack_require__(23)\n  , mouseWheelHandler = __webpack_require__(24)\n  , nativeScrollHandler = __webpack_require__(25)\n  , selectionHandler = __webpack_require__(26)\n  , touchHandler = __webpack_require__(27);\n\nmodule.exports = function (element, userSettings) {\n  userSettings = typeof userSettings === 'object' ? userSettings : {};\n\n  cls.add(element, 'ps-container');\n\n  // Create a plugin instance.\n  var i = instances.add(element);\n\n  i.settings = h.extend(i.settings, userSettings);\n  cls.add(element, 'ps-theme-' + i.settings.theme);\n\n  clickRailHandler(element);\n  dragScrollbarHandler(element);\n  mouseWheelHandler(element);\n  nativeScrollHandler(element);\n\n  if (i.settings.useSelectionScroll) {\n    selectionHandler(element);\n  }\n\n  if (h.env.supportsTouch || h.env.supportsIePointer) {\n    touchHandler(element, h.env.supportsTouch, h.env.supportsIePointer);\n  }\n  if (i.settings.useKeyboard) {\n    keyboardHandler(element);\n  }\n\n  updateGeometry(element);\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vaW5pdGlhbGl6ZS5qcz9iZTU0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY2xzID0gcmVxdWlyZSgnLi4vbGliL2NsYXNzJylcbiAgLCBoID0gcmVxdWlyZSgnLi4vbGliL2hlbHBlcicpXG4gICwgaW5zdGFuY2VzID0gcmVxdWlyZSgnLi9pbnN0YW5jZXMnKVxuICAsIHVwZGF0ZUdlb21ldHJ5ID0gcmVxdWlyZSgnLi91cGRhdGUtZ2VvbWV0cnknKTtcblxuLy8gSGFuZGxlcnNcbnZhciBjbGlja1JhaWxIYW5kbGVyID0gcmVxdWlyZSgnLi9oYW5kbGVyL2NsaWNrLXJhaWwnKVxuICAsIGRyYWdTY3JvbGxiYXJIYW5kbGVyID0gcmVxdWlyZSgnLi9oYW5kbGVyL2RyYWctc2Nyb2xsYmFyJylcbiAgLCBrZXlib2FyZEhhbmRsZXIgPSByZXF1aXJlKCcuL2hhbmRsZXIva2V5Ym9hcmQnKVxuICAsIG1vdXNlV2hlZWxIYW5kbGVyID0gcmVxdWlyZSgnLi9oYW5kbGVyL21vdXNlLXdoZWVsJylcbiAgLCBuYXRpdmVTY3JvbGxIYW5kbGVyID0gcmVxdWlyZSgnLi9oYW5kbGVyL25hdGl2ZS1zY3JvbGwnKVxuICAsIHNlbGVjdGlvbkhhbmRsZXIgPSByZXF1aXJlKCcuL2hhbmRsZXIvc2VsZWN0aW9uJylcbiAgLCB0b3VjaEhhbmRsZXIgPSByZXF1aXJlKCcuL2hhbmRsZXIvdG91Y2gnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZWxlbWVudCwgdXNlclNldHRpbmdzKSB7XG4gIHVzZXJTZXR0aW5ncyA9IHR5cGVvZiB1c2VyU2V0dGluZ3MgPT09ICdvYmplY3QnID8gdXNlclNldHRpbmdzIDoge307XG5cbiAgY2xzLmFkZChlbGVtZW50LCAncHMtY29udGFpbmVyJyk7XG5cbiAgLy8gQ3JlYXRlIGEgcGx1Z2luIGluc3RhbmNlLlxuICB2YXIgaSA9IGluc3RhbmNlcy5hZGQoZWxlbWVudCk7XG5cbiAgaS5zZXR0aW5ncyA9IGguZXh0ZW5kKGkuc2V0dGluZ3MsIHVzZXJTZXR0aW5ncyk7XG4gIGNscy5hZGQoZWxlbWVudCwgJ3BzLXRoZW1lLScgKyBpLnNldHRpbmdzLnRoZW1lKTtcblxuICBjbGlja1JhaWxIYW5kbGVyKGVsZW1lbnQpO1xuICBkcmFnU2Nyb2xsYmFySGFuZGxlcihlbGVtZW50KTtcbiAgbW91c2VXaGVlbEhhbmRsZXIoZWxlbWVudCk7XG4gIG5hdGl2ZVNjcm9sbEhhbmRsZXIoZWxlbWVudCk7XG5cbiAgaWYgKGkuc2V0dGluZ3MudXNlU2VsZWN0aW9uU2Nyb2xsKSB7XG4gICAgc2VsZWN0aW9uSGFuZGxlcihlbGVtZW50KTtcbiAgfVxuXG4gIGlmIChoLmVudi5zdXBwb3J0c1RvdWNoIHx8IGguZW52LnN1cHBvcnRzSWVQb2ludGVyKSB7XG4gICAgdG91Y2hIYW5kbGVyKGVsZW1lbnQsIGguZW52LnN1cHBvcnRzVG91Y2gsIGguZW52LnN1cHBvcnRzSWVQb2ludGVyKTtcbiAgfVxuICBpZiAoaS5zZXR0aW5ncy51c2VLZXlib2FyZCkge1xuICAgIGtleWJvYXJkSGFuZGxlcihlbGVtZW50KTtcbiAgfVxuXG4gIHVwZGF0ZUdlb21ldHJ5KGVsZW1lbnQpO1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vaW5pdGlhbGl6ZS5qc1xuICoqIG1vZHVsZSBpZCA9IDE4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar cls = __webpack_require__(13)\n  , d = __webpack_require__(11)\n  , h = __webpack_require__(12)\n  , instances = __webpack_require__(14)\n  , updateScroll = __webpack_require__(20);\n\nfunction getThumbSize(i, thumbSize) {\n  if (i.settings.minScrollbarLength) {\n    thumbSize = Math.max(thumbSize, i.settings.minScrollbarLength);\n  }\n  if (i.settings.maxScrollbarLength) {\n    thumbSize = Math.min(thumbSize, i.settings.maxScrollbarLength);\n  }\n  return thumbSize;\n}\n\nfunction updateCss(element, i) {\n  var xRailOffset = {width: i.railXWidth};\n  if (i.isRtl) {\n    xRailOffset.left = i.negativeScrollAdjustment + element.scrollLeft + i.containerWidth - i.contentWidth;\n  } else {\n    xRailOffset.left = element.scrollLeft;\n  }\n  if (i.isScrollbarXUsingBottom) {\n    xRailOffset.bottom = i.scrollbarXBottom - element.scrollTop;\n  } else {\n    xRailOffset.top = i.scrollbarXTop + element.scrollTop;\n  }\n  d.css(i.scrollbarXRail, xRailOffset);\n\n  var yRailOffset = {top: element.scrollTop, height: i.railYHeight};\n  if (i.isScrollbarYUsingRight) {\n    if (i.isRtl) {\n      yRailOffset.right = i.contentWidth - (i.negativeScrollAdjustment + element.scrollLeft) - i.scrollbarYRight - i.scrollbarYOuterWidth;\n    } else {\n      yRailOffset.right = i.scrollbarYRight - element.scrollLeft;\n    }\n  } else {\n    if (i.isRtl) {\n      yRailOffset.left = i.negativeScrollAdjustment + element.scrollLeft + i.containerWidth * 2 - i.contentWidth - i.scrollbarYLeft - i.scrollbarYOuterWidth;\n    } else {\n      yRailOffset.left = i.scrollbarYLeft + element.scrollLeft;\n    }\n  }\n  d.css(i.scrollbarYRail, yRailOffset);\n\n  d.css(i.scrollbarX, {left: i.scrollbarXLeft, width: i.scrollbarXWidth - i.railBorderXWidth});\n  d.css(i.scrollbarY, {top: i.scrollbarYTop, height: i.scrollbarYHeight - i.railBorderYWidth});\n}\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n\n  i.containerWidth = element.clientWidth;\n  i.containerHeight = element.clientHeight;\n  i.contentWidth = element.scrollWidth;\n  i.contentHeight = element.scrollHeight;\n\n  var existingRails;\n  if (!element.contains(i.scrollbarXRail)) {\n    existingRails = d.queryChildren(element, '.ps-scrollbar-x-rail');\n    if (existingRails.length > 0) {\n      existingRails.forEach(function (rail) {\n        d.remove(rail);\n      });\n    }\n    d.appendTo(i.scrollbarXRail, element);\n  }\n  if (!element.contains(i.scrollbarYRail)) {\n    existingRails = d.queryChildren(element, '.ps-scrollbar-y-rail');\n    if (existingRails.length > 0) {\n      existingRails.forEach(function (rail) {\n        d.remove(rail);\n      });\n    }\n    d.appendTo(i.scrollbarYRail, element);\n  }\n\n  if (!i.settings.suppressScrollX && i.containerWidth + i.settings.scrollXMarginOffset < i.contentWidth) {\n    i.scrollbarXActive = true;\n    i.railXWidth = i.containerWidth - i.railXMarginWidth;\n    i.railXRatio = i.containerWidth / i.railXWidth;\n    i.scrollbarXWidth = getThumbSize(i, h.toInt(i.railXWidth * i.containerWidth / i.contentWidth));\n    i.scrollbarXLeft = h.toInt((i.negativeScrollAdjustment + element.scrollLeft) * (i.railXWidth - i.scrollbarXWidth) / (i.contentWidth - i.containerWidth));\n  } else {\n    i.scrollbarXActive = false;\n  }\n\n  if (!i.settings.suppressScrollY && i.containerHeight + i.settings.scrollYMarginOffset < i.contentHeight) {\n    i.scrollbarYActive = true;\n    i.railYHeight = i.containerHeight - i.railYMarginHeight;\n    i.railYRatio = i.containerHeight / i.railYHeight;\n    i.scrollbarYHeight = getThumbSize(i, h.toInt(i.railYHeight * i.containerHeight / i.contentHeight));\n    i.scrollbarYTop = h.toInt(element.scrollTop * (i.railYHeight - i.scrollbarYHeight) / (i.contentHeight - i.containerHeight));\n  } else {\n    i.scrollbarYActive = false;\n  }\n\n  if (i.scrollbarXLeft >= i.railXWidth - i.scrollbarXWidth) {\n    i.scrollbarXLeft = i.railXWidth - i.scrollbarXWidth;\n  }\n  if (i.scrollbarYTop >= i.railYHeight - i.scrollbarYHeight) {\n    i.scrollbarYTop = i.railYHeight - i.scrollbarYHeight;\n  }\n\n  updateCss(element, i);\n\n  if (i.scrollbarXActive) {\n    cls.add(element, 'ps-active-x');\n  } else {\n    cls.remove(element, 'ps-active-x');\n    i.scrollbarXWidth = 0;\n    i.scrollbarXLeft = 0;\n    updateScroll(element, 'left', 0);\n  }\n  if (i.scrollbarYActive) {\n    cls.add(element, 'ps-active-y');\n  } else {\n    cls.remove(element, 'ps-active-y');\n    i.scrollbarYHeight = 0;\n    i.scrollbarYTop = 0;\n    updateScroll(element, 'top', 0);\n  }\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vdXBkYXRlLWdlb21ldHJ5LmpzP2YwYjgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLHNFQUFzRTtBQUM3Rix1QkFBdUIsc0VBQXNFO0FBQzdGOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGNscyA9IHJlcXVpcmUoJy4uL2xpYi9jbGFzcycpXG4gICwgZCA9IHJlcXVpcmUoJy4uL2xpYi9kb20nKVxuICAsIGggPSByZXF1aXJlKCcuLi9saWIvaGVscGVyJylcbiAgLCBpbnN0YW5jZXMgPSByZXF1aXJlKCcuL2luc3RhbmNlcycpXG4gICwgdXBkYXRlU2Nyb2xsID0gcmVxdWlyZSgnLi91cGRhdGUtc2Nyb2xsJyk7XG5cbmZ1bmN0aW9uIGdldFRodW1iU2l6ZShpLCB0aHVtYlNpemUpIHtcbiAgaWYgKGkuc2V0dGluZ3MubWluU2Nyb2xsYmFyTGVuZ3RoKSB7XG4gICAgdGh1bWJTaXplID0gTWF0aC5tYXgodGh1bWJTaXplLCBpLnNldHRpbmdzLm1pblNjcm9sbGJhckxlbmd0aCk7XG4gIH1cbiAgaWYgKGkuc2V0dGluZ3MubWF4U2Nyb2xsYmFyTGVuZ3RoKSB7XG4gICAgdGh1bWJTaXplID0gTWF0aC5taW4odGh1bWJTaXplLCBpLnNldHRpbmdzLm1heFNjcm9sbGJhckxlbmd0aCk7XG4gIH1cbiAgcmV0dXJuIHRodW1iU2l6ZTtcbn1cblxuZnVuY3Rpb24gdXBkYXRlQ3NzKGVsZW1lbnQsIGkpIHtcbiAgdmFyIHhSYWlsT2Zmc2V0ID0ge3dpZHRoOiBpLnJhaWxYV2lkdGh9O1xuICBpZiAoaS5pc1J0bCkge1xuICAgIHhSYWlsT2Zmc2V0LmxlZnQgPSBpLm5lZ2F0aXZlU2Nyb2xsQWRqdXN0bWVudCArIGVsZW1lbnQuc2Nyb2xsTGVmdCArIGkuY29udGFpbmVyV2lkdGggLSBpLmNvbnRlbnRXaWR0aDtcbiAgfSBlbHNlIHtcbiAgICB4UmFpbE9mZnNldC5sZWZ0ID0gZWxlbWVudC5zY3JvbGxMZWZ0O1xuICB9XG4gIGlmIChpLmlzU2Nyb2xsYmFyWFVzaW5nQm90dG9tKSB7XG4gICAgeFJhaWxPZmZzZXQuYm90dG9tID0gaS5zY3JvbGxiYXJYQm90dG9tIC0gZWxlbWVudC5zY3JvbGxUb3A7XG4gIH0gZWxzZSB7XG4gICAgeFJhaWxPZmZzZXQudG9wID0gaS5zY3JvbGxiYXJYVG9wICsgZWxlbWVudC5zY3JvbGxUb3A7XG4gIH1cbiAgZC5jc3MoaS5zY3JvbGxiYXJYUmFpbCwgeFJhaWxPZmZzZXQpO1xuXG4gIHZhciB5UmFpbE9mZnNldCA9IHt0b3A6IGVsZW1lbnQuc2Nyb2xsVG9wLCBoZWlnaHQ6IGkucmFpbFlIZWlnaHR9O1xuICBpZiAoaS5pc1Njcm9sbGJhcllVc2luZ1JpZ2h0KSB7XG4gICAgaWYgKGkuaXNSdGwpIHtcbiAgICAgIHlSYWlsT2Zmc2V0LnJpZ2h0ID0gaS5jb250ZW50V2lkdGggLSAoaS5uZWdhdGl2ZVNjcm9sbEFkanVzdG1lbnQgKyBlbGVtZW50LnNjcm9sbExlZnQpIC0gaS5zY3JvbGxiYXJZUmlnaHQgLSBpLnNjcm9sbGJhcllPdXRlcldpZHRoO1xuICAgIH0gZWxzZSB7XG4gICAgICB5UmFpbE9mZnNldC5yaWdodCA9IGkuc2Nyb2xsYmFyWVJpZ2h0IC0gZWxlbWVudC5zY3JvbGxMZWZ0O1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpZiAoaS5pc1J0bCkge1xuICAgICAgeVJhaWxPZmZzZXQubGVmdCA9IGkubmVnYXRpdmVTY3JvbGxBZGp1c3RtZW50ICsgZWxlbWVudC5zY3JvbGxMZWZ0ICsgaS5jb250YWluZXJXaWR0aCAqIDIgLSBpLmNvbnRlbnRXaWR0aCAtIGkuc2Nyb2xsYmFyWUxlZnQgLSBpLnNjcm9sbGJhcllPdXRlcldpZHRoO1xuICAgIH0gZWxzZSB7XG4gICAgICB5UmFpbE9mZnNldC5sZWZ0ID0gaS5zY3JvbGxiYXJZTGVmdCArIGVsZW1lbnQuc2Nyb2xsTGVmdDtcbiAgICB9XG4gIH1cbiAgZC5jc3MoaS5zY3JvbGxiYXJZUmFpbCwgeVJhaWxPZmZzZXQpO1xuXG4gIGQuY3NzKGkuc2Nyb2xsYmFyWCwge2xlZnQ6IGkuc2Nyb2xsYmFyWExlZnQsIHdpZHRoOiBpLnNjcm9sbGJhclhXaWR0aCAtIGkucmFpbEJvcmRlclhXaWR0aH0pO1xuICBkLmNzcyhpLnNjcm9sbGJhclksIHt0b3A6IGkuc2Nyb2xsYmFyWVRvcCwgaGVpZ2h0OiBpLnNjcm9sbGJhcllIZWlnaHQgLSBpLnJhaWxCb3JkZXJZV2lkdGh9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICB2YXIgaSA9IGluc3RhbmNlcy5nZXQoZWxlbWVudCk7XG5cbiAgaS5jb250YWluZXJXaWR0aCA9IGVsZW1lbnQuY2xpZW50V2lkdGg7XG4gIGkuY29udGFpbmVySGVpZ2h0ID0gZWxlbWVudC5jbGllbnRIZWlnaHQ7XG4gIGkuY29udGVudFdpZHRoID0gZWxlbWVudC5zY3JvbGxXaWR0aDtcbiAgaS5jb250ZW50SGVpZ2h0ID0gZWxlbWVudC5zY3JvbGxIZWlnaHQ7XG5cbiAgdmFyIGV4aXN0aW5nUmFpbHM7XG4gIGlmICghZWxlbWVudC5jb250YWlucyhpLnNjcm9sbGJhclhSYWlsKSkge1xuICAgIGV4aXN0aW5nUmFpbHMgPSBkLnF1ZXJ5Q2hpbGRyZW4oZWxlbWVudCwgJy5wcy1zY3JvbGxiYXIteC1yYWlsJyk7XG4gICAgaWYgKGV4aXN0aW5nUmFpbHMubGVuZ3RoID4gMCkge1xuICAgICAgZXhpc3RpbmdSYWlscy5mb3JFYWNoKGZ1bmN0aW9uIChyYWlsKSB7XG4gICAgICAgIGQucmVtb3ZlKHJhaWwpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGQuYXBwZW5kVG8oaS5zY3JvbGxiYXJYUmFpbCwgZWxlbWVudCk7XG4gIH1cbiAgaWYgKCFlbGVtZW50LmNvbnRhaW5zKGkuc2Nyb2xsYmFyWVJhaWwpKSB7XG4gICAgZXhpc3RpbmdSYWlscyA9IGQucXVlcnlDaGlsZHJlbihlbGVtZW50LCAnLnBzLXNjcm9sbGJhci15LXJhaWwnKTtcbiAgICBpZiAoZXhpc3RpbmdSYWlscy5sZW5ndGggPiAwKSB7XG4gICAgICBleGlzdGluZ1JhaWxzLmZvckVhY2goZnVuY3Rpb24gKHJhaWwpIHtcbiAgICAgICAgZC5yZW1vdmUocmFpbCk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgZC5hcHBlbmRUbyhpLnNjcm9sbGJhcllSYWlsLCBlbGVtZW50KTtcbiAgfVxuXG4gIGlmICghaS5zZXR0aW5ncy5zdXBwcmVzc1Njcm9sbFggJiYgaS5jb250YWluZXJXaWR0aCArIGkuc2V0dGluZ3Muc2Nyb2xsWE1hcmdpbk9mZnNldCA8IGkuY29udGVudFdpZHRoKSB7XG4gICAgaS5zY3JvbGxiYXJYQWN0aXZlID0gdHJ1ZTtcbiAgICBpLnJhaWxYV2lkdGggPSBpLmNvbnRhaW5lcldpZHRoIC0gaS5yYWlsWE1hcmdpbldpZHRoO1xuICAgIGkucmFpbFhSYXRpbyA9IGkuY29udGFpbmVyV2lkdGggLyBpLnJhaWxYV2lkdGg7XG4gICAgaS5zY3JvbGxiYXJYV2lkdGggPSBnZXRUaHVtYlNpemUoaSwgaC50b0ludChpLnJhaWxYV2lkdGggKiBpLmNvbnRhaW5lcldpZHRoIC8gaS5jb250ZW50V2lkdGgpKTtcbiAgICBpLnNjcm9sbGJhclhMZWZ0ID0gaC50b0ludCgoaS5uZWdhdGl2ZVNjcm9sbEFkanVzdG1lbnQgKyBlbGVtZW50LnNjcm9sbExlZnQpICogKGkucmFpbFhXaWR0aCAtIGkuc2Nyb2xsYmFyWFdpZHRoKSAvIChpLmNvbnRlbnRXaWR0aCAtIGkuY29udGFpbmVyV2lkdGgpKTtcbiAgfSBlbHNlIHtcbiAgICBpLnNjcm9sbGJhclhBY3RpdmUgPSBmYWxzZTtcbiAgfVxuXG4gIGlmICghaS5zZXR0aW5ncy5zdXBwcmVzc1Njcm9sbFkgJiYgaS5jb250YWluZXJIZWlnaHQgKyBpLnNldHRpbmdzLnNjcm9sbFlNYXJnaW5PZmZzZXQgPCBpLmNvbnRlbnRIZWlnaHQpIHtcbiAgICBpLnNjcm9sbGJhcllBY3RpdmUgPSB0cnVlO1xuICAgIGkucmFpbFlIZWlnaHQgPSBpLmNvbnRhaW5lckhlaWdodCAtIGkucmFpbFlNYXJnaW5IZWlnaHQ7XG4gICAgaS5yYWlsWVJhdGlvID0gaS5jb250YWluZXJIZWlnaHQgLyBpLnJhaWxZSGVpZ2h0O1xuICAgIGkuc2Nyb2xsYmFyWUhlaWdodCA9IGdldFRodW1iU2l6ZShpLCBoLnRvSW50KGkucmFpbFlIZWlnaHQgKiBpLmNvbnRhaW5lckhlaWdodCAvIGkuY29udGVudEhlaWdodCkpO1xuICAgIGkuc2Nyb2xsYmFyWVRvcCA9IGgudG9JbnQoZWxlbWVudC5zY3JvbGxUb3AgKiAoaS5yYWlsWUhlaWdodCAtIGkuc2Nyb2xsYmFyWUhlaWdodCkgLyAoaS5jb250ZW50SGVpZ2h0IC0gaS5jb250YWluZXJIZWlnaHQpKTtcbiAgfSBlbHNlIHtcbiAgICBpLnNjcm9sbGJhcllBY3RpdmUgPSBmYWxzZTtcbiAgfVxuXG4gIGlmIChpLnNjcm9sbGJhclhMZWZ0ID49IGkucmFpbFhXaWR0aCAtIGkuc2Nyb2xsYmFyWFdpZHRoKSB7XG4gICAgaS5zY3JvbGxiYXJYTGVmdCA9IGkucmFpbFhXaWR0aCAtIGkuc2Nyb2xsYmFyWFdpZHRoO1xuICB9XG4gIGlmIChpLnNjcm9sbGJhcllUb3AgPj0gaS5yYWlsWUhlaWdodCAtIGkuc2Nyb2xsYmFyWUhlaWdodCkge1xuICAgIGkuc2Nyb2xsYmFyWVRvcCA9IGkucmFpbFlIZWlnaHQgLSBpLnNjcm9sbGJhcllIZWlnaHQ7XG4gIH1cblxuICB1cGRhdGVDc3MoZWxlbWVudCwgaSk7XG5cbiAgaWYgKGkuc2Nyb2xsYmFyWEFjdGl2ZSkge1xuICAgIGNscy5hZGQoZWxlbWVudCwgJ3BzLWFjdGl2ZS14Jyk7XG4gIH0gZWxzZSB7XG4gICAgY2xzLnJlbW92ZShlbGVtZW50LCAncHMtYWN0aXZlLXgnKTtcbiAgICBpLnNjcm9sbGJhclhXaWR0aCA9IDA7XG4gICAgaS5zY3JvbGxiYXJYTGVmdCA9IDA7XG4gICAgdXBkYXRlU2Nyb2xsKGVsZW1lbnQsICdsZWZ0JywgMCk7XG4gIH1cbiAgaWYgKGkuc2Nyb2xsYmFyWUFjdGl2ZSkge1xuICAgIGNscy5hZGQoZWxlbWVudCwgJ3BzLWFjdGl2ZS15Jyk7XG4gIH0gZWxzZSB7XG4gICAgY2xzLnJlbW92ZShlbGVtZW50LCAncHMtYWN0aXZlLXknKTtcbiAgICBpLnNjcm9sbGJhcllIZWlnaHQgPSAwO1xuICAgIGkuc2Nyb2xsYmFyWVRvcCA9IDA7XG4gICAgdXBkYXRlU2Nyb2xsKGVsZW1lbnQsICd0b3AnLCAwKTtcbiAgfVxufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vdXBkYXRlLWdlb21ldHJ5LmpzXG4gKiogbW9kdWxlIGlkID0gMTlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar instances = __webpack_require__(14);\n\nvar upEvent = document.createEvent('Event')\n  , downEvent = document.createEvent('Event')\n  , leftEvent = document.createEvent('Event')\n  , rightEvent = document.createEvent('Event')\n  , yEvent = document.createEvent('Event')\n  , xEvent = document.createEvent('Event')\n  , xStartEvent = document.createEvent('Event')\n  , xEndEvent = document.createEvent('Event')\n  , yStartEvent = document.createEvent('Event')\n  , yEndEvent = document.createEvent('Event')\n  , lastTop\n  , lastLeft;\n\nupEvent.initEvent('ps-scroll-up', true, true);\ndownEvent.initEvent('ps-scroll-down', true, true);\nleftEvent.initEvent('ps-scroll-left', true, true);\nrightEvent.initEvent('ps-scroll-right', true, true);\nyEvent.initEvent('ps-scroll-y', true, true);\nxEvent.initEvent('ps-scroll-x', true, true);\nxStartEvent.initEvent('ps-x-reach-start', true, true);\nxEndEvent.initEvent('ps-x-reach-end', true, true);\nyStartEvent.initEvent('ps-y-reach-start', true, true);\nyEndEvent.initEvent('ps-y-reach-end', true, true);\n\nmodule.exports = function (element, axis, value) {\n  if (typeof element === 'undefined') {\n    throw 'You must provide an element to the update-scroll function';\n  }\n\n  if (typeof axis === 'undefined') {\n    throw 'You must provide an axis to the update-scroll function';\n  }\n\n  if (typeof value === 'undefined') {\n    throw 'You must provide a value to the update-scroll function';\n  }\n\n  if (axis === 'top' && value <= 0) {\n    element.scrollTop = value = 0; // don't allow negative scroll\n    element.dispatchEvent(yStartEvent);\n  }\n\n  if (axis === 'left' && value <= 0) {\n    element.scrollLeft = value = 0; // don't allow negative scroll\n    element.dispatchEvent(xStartEvent);\n  }\n\n  var i = instances.get(element);\n\n  if (axis === 'top' && value >= i.contentHeight - i.containerHeight) {\n    element.scrollTop = value = i.contentHeight - i.containerHeight; // don't allow scroll past container\n    element.dispatchEvent(yEndEvent);\n  }\n\n  if (axis === 'left' && value >= i.contentWidth - i.containerWidth) {\n    element.scrollLeft = value = i.contentWidth - i.containerWidth; // don't allow scroll past container\n    element.dispatchEvent(xEndEvent);\n  }\n\n  if (!lastTop) {\n    lastTop = element.scrollTop;\n  }\n\n  if (!lastLeft) {\n    lastLeft = element.scrollLeft;\n  }\n\n  if (axis === 'top' && value < lastTop) {\n    element.dispatchEvent(upEvent);\n  }\n\n  if (axis === 'top' && value > lastTop) {\n    element.dispatchEvent(downEvent);\n  }\n\n  if (axis === 'left' && value < lastLeft) {\n    element.dispatchEvent(leftEvent);\n  }\n\n  if (axis === 'left' && value > lastLeft) {\n    element.dispatchEvent(rightEvent);\n  }\n\n  if (axis === 'top') {\n    element.scrollTop = lastTop = value;\n    element.dispatchEvent(yEvent);\n  }\n\n  if (axis === 'left') {\n    element.scrollLeft = lastLeft = value;\n    element.dispatchEvent(xEvent);\n  }\n\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vdXBkYXRlLXNjcm9sbC5qcz8wN2NiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLG9FQUFvRTtBQUNwRTtBQUNBOztBQUVBO0FBQ0EsbUVBQW1FO0FBQ25FO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbnN0YW5jZXMgPSByZXF1aXJlKCcuL2luc3RhbmNlcycpO1xuXG52YXIgdXBFdmVudCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdFdmVudCcpXG4gICwgZG93bkV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50JylcbiAgLCBsZWZ0RXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnRXZlbnQnKVxuICAsIHJpZ2h0RXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnRXZlbnQnKVxuICAsIHlFdmVudCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdFdmVudCcpXG4gICwgeEV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50JylcbiAgLCB4U3RhcnRFdmVudCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdFdmVudCcpXG4gICwgeEVuZEV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50JylcbiAgLCB5U3RhcnRFdmVudCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdFdmVudCcpXG4gICwgeUVuZEV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50JylcbiAgLCBsYXN0VG9wXG4gICwgbGFzdExlZnQ7XG5cbnVwRXZlbnQuaW5pdEV2ZW50KCdwcy1zY3JvbGwtdXAnLCB0cnVlLCB0cnVlKTtcbmRvd25FdmVudC5pbml0RXZlbnQoJ3BzLXNjcm9sbC1kb3duJywgdHJ1ZSwgdHJ1ZSk7XG5sZWZ0RXZlbnQuaW5pdEV2ZW50KCdwcy1zY3JvbGwtbGVmdCcsIHRydWUsIHRydWUpO1xucmlnaHRFdmVudC5pbml0RXZlbnQoJ3BzLXNjcm9sbC1yaWdodCcsIHRydWUsIHRydWUpO1xueUV2ZW50LmluaXRFdmVudCgncHMtc2Nyb2xsLXknLCB0cnVlLCB0cnVlKTtcbnhFdmVudC5pbml0RXZlbnQoJ3BzLXNjcm9sbC14JywgdHJ1ZSwgdHJ1ZSk7XG54U3RhcnRFdmVudC5pbml0RXZlbnQoJ3BzLXgtcmVhY2gtc3RhcnQnLCB0cnVlLCB0cnVlKTtcbnhFbmRFdmVudC5pbml0RXZlbnQoJ3BzLXgtcmVhY2gtZW5kJywgdHJ1ZSwgdHJ1ZSk7XG55U3RhcnRFdmVudC5pbml0RXZlbnQoJ3BzLXktcmVhY2gtc3RhcnQnLCB0cnVlLCB0cnVlKTtcbnlFbmRFdmVudC5pbml0RXZlbnQoJ3BzLXktcmVhY2gtZW5kJywgdHJ1ZSwgdHJ1ZSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGVsZW1lbnQsIGF4aXMsIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgZWxlbWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB0aHJvdyAnWW91IG11c3QgcHJvdmlkZSBhbiBlbGVtZW50IHRvIHRoZSB1cGRhdGUtc2Nyb2xsIGZ1bmN0aW9uJztcbiAgfVxuXG4gIGlmICh0eXBlb2YgYXhpcyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB0aHJvdyAnWW91IG11c3QgcHJvdmlkZSBhbiBheGlzIHRvIHRoZSB1cGRhdGUtc2Nyb2xsIGZ1bmN0aW9uJztcbiAgfVxuXG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdGhyb3cgJ1lvdSBtdXN0IHByb3ZpZGUgYSB2YWx1ZSB0byB0aGUgdXBkYXRlLXNjcm9sbCBmdW5jdGlvbic7XG4gIH1cblxuICBpZiAoYXhpcyA9PT0gJ3RvcCcgJiYgdmFsdWUgPD0gMCkge1xuICAgIGVsZW1lbnQuc2Nyb2xsVG9wID0gdmFsdWUgPSAwOyAvLyBkb24ndCBhbGxvdyBuZWdhdGl2ZSBzY3JvbGxcbiAgICBlbGVtZW50LmRpc3BhdGNoRXZlbnQoeVN0YXJ0RXZlbnQpO1xuICB9XG5cbiAgaWYgKGF4aXMgPT09ICdsZWZ0JyAmJiB2YWx1ZSA8PSAwKSB7XG4gICAgZWxlbWVudC5zY3JvbGxMZWZ0ID0gdmFsdWUgPSAwOyAvLyBkb24ndCBhbGxvdyBuZWdhdGl2ZSBzY3JvbGxcbiAgICBlbGVtZW50LmRpc3BhdGNoRXZlbnQoeFN0YXJ0RXZlbnQpO1xuICB9XG5cbiAgdmFyIGkgPSBpbnN0YW5jZXMuZ2V0KGVsZW1lbnQpO1xuXG4gIGlmIChheGlzID09PSAndG9wJyAmJiB2YWx1ZSA+PSBpLmNvbnRlbnRIZWlnaHQgLSBpLmNvbnRhaW5lckhlaWdodCkge1xuICAgIGVsZW1lbnQuc2Nyb2xsVG9wID0gdmFsdWUgPSBpLmNvbnRlbnRIZWlnaHQgLSBpLmNvbnRhaW5lckhlaWdodDsgLy8gZG9uJ3QgYWxsb3cgc2Nyb2xsIHBhc3QgY29udGFpbmVyXG4gICAgZWxlbWVudC5kaXNwYXRjaEV2ZW50KHlFbmRFdmVudCk7XG4gIH1cblxuICBpZiAoYXhpcyA9PT0gJ2xlZnQnICYmIHZhbHVlID49IGkuY29udGVudFdpZHRoIC0gaS5jb250YWluZXJXaWR0aCkge1xuICAgIGVsZW1lbnQuc2Nyb2xsTGVmdCA9IHZhbHVlID0gaS5jb250ZW50V2lkdGggLSBpLmNvbnRhaW5lcldpZHRoOyAvLyBkb24ndCBhbGxvdyBzY3JvbGwgcGFzdCBjb250YWluZXJcbiAgICBlbGVtZW50LmRpc3BhdGNoRXZlbnQoeEVuZEV2ZW50KTtcbiAgfVxuXG4gIGlmICghbGFzdFRvcCkge1xuICAgIGxhc3RUb3AgPSBlbGVtZW50LnNjcm9sbFRvcDtcbiAgfVxuXG4gIGlmICghbGFzdExlZnQpIHtcbiAgICBsYXN0TGVmdCA9IGVsZW1lbnQuc2Nyb2xsTGVmdDtcbiAgfVxuXG4gIGlmIChheGlzID09PSAndG9wJyAmJiB2YWx1ZSA8IGxhc3RUb3ApIHtcbiAgICBlbGVtZW50LmRpc3BhdGNoRXZlbnQodXBFdmVudCk7XG4gIH1cblxuICBpZiAoYXhpcyA9PT0gJ3RvcCcgJiYgdmFsdWUgPiBsYXN0VG9wKSB7XG4gICAgZWxlbWVudC5kaXNwYXRjaEV2ZW50KGRvd25FdmVudCk7XG4gIH1cblxuICBpZiAoYXhpcyA9PT0gJ2xlZnQnICYmIHZhbHVlIDwgbGFzdExlZnQpIHtcbiAgICBlbGVtZW50LmRpc3BhdGNoRXZlbnQobGVmdEV2ZW50KTtcbiAgfVxuXG4gIGlmIChheGlzID09PSAnbGVmdCcgJiYgdmFsdWUgPiBsYXN0TGVmdCkge1xuICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChyaWdodEV2ZW50KTtcbiAgfVxuXG4gIGlmIChheGlzID09PSAndG9wJykge1xuICAgIGVsZW1lbnQuc2Nyb2xsVG9wID0gbGFzdFRvcCA9IHZhbHVlO1xuICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudCh5RXZlbnQpO1xuICB9XG5cbiAgaWYgKGF4aXMgPT09ICdsZWZ0Jykge1xuICAgIGVsZW1lbnQuc2Nyb2xsTGVmdCA9IGxhc3RMZWZ0ID0gdmFsdWU7XG4gICAgZWxlbWVudC5kaXNwYXRjaEV2ZW50KHhFdmVudCk7XG4gIH1cblxufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vdXBkYXRlLXNjcm9sbC5qc1xuICoqIG1vZHVsZSBpZCA9IDIwXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar h = __webpack_require__(12)\n  , instances = __webpack_require__(14)\n  , updateGeometry = __webpack_require__(19)\n  , updateScroll = __webpack_require__(20);\n\nfunction bindClickRailHandler(element, i) {\n  function pageOffset(el) {\n    return el.getBoundingClientRect();\n  }\n  var stopPropagation = window.Event.prototype.stopPropagation.bind;\n\n  if (i.settings.stopPropagationOnClick) {\n    i.event.bind(i.scrollbarY, 'click', stopPropagation);\n  }\n  i.event.bind(i.scrollbarYRail, 'click', function (e) {\n    var halfOfScrollbarLength = h.toInt(i.scrollbarYHeight / 2);\n    var positionTop = i.railYRatio * (e.pageY - window.pageYOffset - pageOffset(i.scrollbarYRail).top - halfOfScrollbarLength);\n    var maxPositionTop = i.railYRatio * (i.railYHeight - i.scrollbarYHeight);\n    var positionRatio = positionTop / maxPositionTop;\n\n    if (positionRatio < 0) {\n      positionRatio = 0;\n    } else if (positionRatio > 1) {\n      positionRatio = 1;\n    }\n\n    updateScroll(element, 'top', (i.contentHeight - i.containerHeight) * positionRatio);\n    updateGeometry(element);\n\n    e.stopPropagation();\n  });\n\n  if (i.settings.stopPropagationOnClick) {\n    i.event.bind(i.scrollbarX, 'click', stopPropagation);\n  }\n  i.event.bind(i.scrollbarXRail, 'click', function (e) {\n    var halfOfScrollbarLength = h.toInt(i.scrollbarXWidth / 2);\n    var positionLeft = i.railXRatio * (e.pageX - window.pageXOffset - pageOffset(i.scrollbarXRail).left - halfOfScrollbarLength);\n    var maxPositionLeft = i.railXRatio * (i.railXWidth - i.scrollbarXWidth);\n    var positionRatio = positionLeft / maxPositionLeft;\n\n    if (positionRatio < 0) {\n      positionRatio = 0;\n    } else if (positionRatio > 1) {\n      positionRatio = 1;\n    }\n\n    updateScroll(element, 'left', ((i.contentWidth - i.containerWidth) * positionRatio) - i.negativeScrollAdjustment);\n    updateGeometry(element);\n\n    e.stopPropagation();\n  });\n}\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n  bindClickRailHandler(element, i);\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vaGFuZGxlci9jbGljay1yYWlsLmpzPzVkYmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaCA9IHJlcXVpcmUoJy4uLy4uL2xpYi9oZWxwZXInKVxuICAsIGluc3RhbmNlcyA9IHJlcXVpcmUoJy4uL2luc3RhbmNlcycpXG4gICwgdXBkYXRlR2VvbWV0cnkgPSByZXF1aXJlKCcuLi91cGRhdGUtZ2VvbWV0cnknKVxuICAsIHVwZGF0ZVNjcm9sbCA9IHJlcXVpcmUoJy4uL3VwZGF0ZS1zY3JvbGwnKTtcblxuZnVuY3Rpb24gYmluZENsaWNrUmFpbEhhbmRsZXIoZWxlbWVudCwgaSkge1xuICBmdW5jdGlvbiBwYWdlT2Zmc2V0KGVsKSB7XG4gICAgcmV0dXJuIGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICB9XG4gIHZhciBzdG9wUHJvcGFnYXRpb24gPSB3aW5kb3cuRXZlbnQucHJvdG90eXBlLnN0b3BQcm9wYWdhdGlvbi5iaW5kO1xuXG4gIGlmIChpLnNldHRpbmdzLnN0b3BQcm9wYWdhdGlvbk9uQ2xpY2spIHtcbiAgICBpLmV2ZW50LmJpbmQoaS5zY3JvbGxiYXJZLCAnY2xpY2snLCBzdG9wUHJvcGFnYXRpb24pO1xuICB9XG4gIGkuZXZlbnQuYmluZChpLnNjcm9sbGJhcllSYWlsLCAnY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgIHZhciBoYWxmT2ZTY3JvbGxiYXJMZW5ndGggPSBoLnRvSW50KGkuc2Nyb2xsYmFyWUhlaWdodCAvIDIpO1xuICAgIHZhciBwb3NpdGlvblRvcCA9IGkucmFpbFlSYXRpbyAqIChlLnBhZ2VZIC0gd2luZG93LnBhZ2VZT2Zmc2V0IC0gcGFnZU9mZnNldChpLnNjcm9sbGJhcllSYWlsKS50b3AgLSBoYWxmT2ZTY3JvbGxiYXJMZW5ndGgpO1xuICAgIHZhciBtYXhQb3NpdGlvblRvcCA9IGkucmFpbFlSYXRpbyAqIChpLnJhaWxZSGVpZ2h0IC0gaS5zY3JvbGxiYXJZSGVpZ2h0KTtcbiAgICB2YXIgcG9zaXRpb25SYXRpbyA9IHBvc2l0aW9uVG9wIC8gbWF4UG9zaXRpb25Ub3A7XG5cbiAgICBpZiAocG9zaXRpb25SYXRpbyA8IDApIHtcbiAgICAgIHBvc2l0aW9uUmF0aW8gPSAwO1xuICAgIH0gZWxzZSBpZiAocG9zaXRpb25SYXRpbyA+IDEpIHtcbiAgICAgIHBvc2l0aW9uUmF0aW8gPSAxO1xuICAgIH1cblxuICAgIHVwZGF0ZVNjcm9sbChlbGVtZW50LCAndG9wJywgKGkuY29udGVudEhlaWdodCAtIGkuY29udGFpbmVySGVpZ2h0KSAqIHBvc2l0aW9uUmF0aW8pO1xuICAgIHVwZGF0ZUdlb21ldHJ5KGVsZW1lbnQpO1xuXG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfSk7XG5cbiAgaWYgKGkuc2V0dGluZ3Muc3RvcFByb3BhZ2F0aW9uT25DbGljaykge1xuICAgIGkuZXZlbnQuYmluZChpLnNjcm9sbGJhclgsICdjbGljaycsIHN0b3BQcm9wYWdhdGlvbik7XG4gIH1cbiAgaS5ldmVudC5iaW5kKGkuc2Nyb2xsYmFyWFJhaWwsICdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG4gICAgdmFyIGhhbGZPZlNjcm9sbGJhckxlbmd0aCA9IGgudG9JbnQoaS5zY3JvbGxiYXJYV2lkdGggLyAyKTtcbiAgICB2YXIgcG9zaXRpb25MZWZ0ID0gaS5yYWlsWFJhdGlvICogKGUucGFnZVggLSB3aW5kb3cucGFnZVhPZmZzZXQgLSBwYWdlT2Zmc2V0KGkuc2Nyb2xsYmFyWFJhaWwpLmxlZnQgLSBoYWxmT2ZTY3JvbGxiYXJMZW5ndGgpO1xuICAgIHZhciBtYXhQb3NpdGlvbkxlZnQgPSBpLnJhaWxYUmF0aW8gKiAoaS5yYWlsWFdpZHRoIC0gaS5zY3JvbGxiYXJYV2lkdGgpO1xuICAgIHZhciBwb3NpdGlvblJhdGlvID0gcG9zaXRpb25MZWZ0IC8gbWF4UG9zaXRpb25MZWZ0O1xuXG4gICAgaWYgKHBvc2l0aW9uUmF0aW8gPCAwKSB7XG4gICAgICBwb3NpdGlvblJhdGlvID0gMDtcbiAgICB9IGVsc2UgaWYgKHBvc2l0aW9uUmF0aW8gPiAxKSB7XG4gICAgICBwb3NpdGlvblJhdGlvID0gMTtcbiAgICB9XG5cbiAgICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ2xlZnQnLCAoKGkuY29udGVudFdpZHRoIC0gaS5jb250YWluZXJXaWR0aCkgKiBwb3NpdGlvblJhdGlvKSAtIGkubmVnYXRpdmVTY3JvbGxBZGp1c3RtZW50KTtcbiAgICB1cGRhdGVHZW9tZXRyeShlbGVtZW50KTtcblxuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gIHZhciBpID0gaW5zdGFuY2VzLmdldChlbGVtZW50KTtcbiAgYmluZENsaWNrUmFpbEhhbmRsZXIoZWxlbWVudCwgaSk7XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcGVyZmVjdC1zY3JvbGxiYXIvc3JjL2pzL3BsdWdpbi9oYW5kbGVyL2NsaWNrLXJhaWwuanNcbiAqKiBtb2R1bGUgaWQgPSAyMVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar d = __webpack_require__(11)\n  , h = __webpack_require__(12)\n  , instances = __webpack_require__(14)\n  , updateGeometry = __webpack_require__(19)\n  , updateScroll = __webpack_require__(20);\n\nfunction bindMouseScrollXHandler(element, i) {\n  var currentLeft = null;\n  var currentPageX = null;\n\n  function updateScrollLeft(deltaX) {\n    var newLeft = currentLeft + (deltaX * i.railXRatio);\n    var maxLeft = Math.max(0, i.scrollbarXRail.getBoundingClientRect().left) + (i.railXRatio * (i.railXWidth - i.scrollbarXWidth));\n\n    if (newLeft < 0) {\n      i.scrollbarXLeft = 0;\n    } else if (newLeft > maxLeft) {\n      i.scrollbarXLeft = maxLeft;\n    } else {\n      i.scrollbarXLeft = newLeft;\n    }\n\n    var scrollLeft = h.toInt(i.scrollbarXLeft * (i.contentWidth - i.containerWidth) / (i.containerWidth - (i.railXRatio * i.scrollbarXWidth))) - i.negativeScrollAdjustment;\n    updateScroll(element, 'left', scrollLeft);\n  }\n\n  var mouseMoveHandler = function (e) {\n    updateScrollLeft(e.pageX - currentPageX);\n    updateGeometry(element);\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  var mouseUpHandler = function () {\n    h.stopScrolling(element, 'x');\n    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n  };\n\n  i.event.bind(i.scrollbarX, 'mousedown', function (e) {\n    currentPageX = e.pageX;\n    currentLeft = h.toInt(d.css(i.scrollbarX, 'left')) * i.railXRatio;\n    h.startScrolling(element, 'x');\n\n    i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n    i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);\n\n    e.stopPropagation();\n    e.preventDefault();\n  });\n}\n\nfunction bindMouseScrollYHandler(element, i) {\n  var currentTop = null;\n  var currentPageY = null;\n\n  function updateScrollTop(deltaY) {\n    var newTop = currentTop + (deltaY * i.railYRatio);\n    var maxTop = Math.max(0, i.scrollbarYRail.getBoundingClientRect().top) + (i.railYRatio * (i.railYHeight - i.scrollbarYHeight));\n\n    if (newTop < 0) {\n      i.scrollbarYTop = 0;\n    } else if (newTop > maxTop) {\n      i.scrollbarYTop = maxTop;\n    } else {\n      i.scrollbarYTop = newTop;\n    }\n\n    var scrollTop = h.toInt(i.scrollbarYTop * (i.contentHeight - i.containerHeight) / (i.containerHeight - (i.railYRatio * i.scrollbarYHeight)));\n    updateScroll(element, 'top', scrollTop);\n  }\n\n  var mouseMoveHandler = function (e) {\n    updateScrollTop(e.pageY - currentPageY);\n    updateGeometry(element);\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  var mouseUpHandler = function () {\n    h.stopScrolling(element, 'y');\n    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n  };\n\n  i.event.bind(i.scrollbarY, 'mousedown', function (e) {\n    currentPageY = e.pageY;\n    currentTop = h.toInt(d.css(i.scrollbarY, 'top')) * i.railYRatio;\n    h.startScrolling(element, 'y');\n\n    i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n    i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);\n\n    e.stopPropagation();\n    e.preventDefault();\n  });\n}\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n  bindMouseScrollXHandler(element, i);\n  bindMouseScrollYHandler(element, i);\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vaGFuZGxlci9kcmFnLXNjcm9sbGJhci5qcz9lZWQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGQgPSByZXF1aXJlKCcuLi8uLi9saWIvZG9tJylcbiAgLCBoID0gcmVxdWlyZSgnLi4vLi4vbGliL2hlbHBlcicpXG4gICwgaW5zdGFuY2VzID0gcmVxdWlyZSgnLi4vaW5zdGFuY2VzJylcbiAgLCB1cGRhdGVHZW9tZXRyeSA9IHJlcXVpcmUoJy4uL3VwZGF0ZS1nZW9tZXRyeScpXG4gICwgdXBkYXRlU2Nyb2xsID0gcmVxdWlyZSgnLi4vdXBkYXRlLXNjcm9sbCcpO1xuXG5mdW5jdGlvbiBiaW5kTW91c2VTY3JvbGxYSGFuZGxlcihlbGVtZW50LCBpKSB7XG4gIHZhciBjdXJyZW50TGVmdCA9IG51bGw7XG4gIHZhciBjdXJyZW50UGFnZVggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIHVwZGF0ZVNjcm9sbExlZnQoZGVsdGFYKSB7XG4gICAgdmFyIG5ld0xlZnQgPSBjdXJyZW50TGVmdCArIChkZWx0YVggKiBpLnJhaWxYUmF0aW8pO1xuICAgIHZhciBtYXhMZWZ0ID0gTWF0aC5tYXgoMCwgaS5zY3JvbGxiYXJYUmFpbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0KSArIChpLnJhaWxYUmF0aW8gKiAoaS5yYWlsWFdpZHRoIC0gaS5zY3JvbGxiYXJYV2lkdGgpKTtcblxuICAgIGlmIChuZXdMZWZ0IDwgMCkge1xuICAgICAgaS5zY3JvbGxiYXJYTGVmdCA9IDA7XG4gICAgfSBlbHNlIGlmIChuZXdMZWZ0ID4gbWF4TGVmdCkge1xuICAgICAgaS5zY3JvbGxiYXJYTGVmdCA9IG1heExlZnQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGkuc2Nyb2xsYmFyWExlZnQgPSBuZXdMZWZ0O1xuICAgIH1cblxuICAgIHZhciBzY3JvbGxMZWZ0ID0gaC50b0ludChpLnNjcm9sbGJhclhMZWZ0ICogKGkuY29udGVudFdpZHRoIC0gaS5jb250YWluZXJXaWR0aCkgLyAoaS5jb250YWluZXJXaWR0aCAtIChpLnJhaWxYUmF0aW8gKiBpLnNjcm9sbGJhclhXaWR0aCkpKSAtIGkubmVnYXRpdmVTY3JvbGxBZGp1c3RtZW50O1xuICAgIHVwZGF0ZVNjcm9sbChlbGVtZW50LCAnbGVmdCcsIHNjcm9sbExlZnQpO1xuICB9XG5cbiAgdmFyIG1vdXNlTW92ZUhhbmRsZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgIHVwZGF0ZVNjcm9sbExlZnQoZS5wYWdlWCAtIGN1cnJlbnRQYWdlWCk7XG4gICAgdXBkYXRlR2VvbWV0cnkoZWxlbWVudCk7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIH07XG5cbiAgdmFyIG1vdXNlVXBIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgIGguc3RvcFNjcm9sbGluZyhlbGVtZW50LCAneCcpO1xuICAgIGkuZXZlbnQudW5iaW5kKGkub3duZXJEb2N1bWVudCwgJ21vdXNlbW92ZScsIG1vdXNlTW92ZUhhbmRsZXIpO1xuICB9O1xuXG4gIGkuZXZlbnQuYmluZChpLnNjcm9sbGJhclgsICdtb3VzZWRvd24nLCBmdW5jdGlvbiAoZSkge1xuICAgIGN1cnJlbnRQYWdlWCA9IGUucGFnZVg7XG4gICAgY3VycmVudExlZnQgPSBoLnRvSW50KGQuY3NzKGkuc2Nyb2xsYmFyWCwgJ2xlZnQnKSkgKiBpLnJhaWxYUmF0aW87XG4gICAgaC5zdGFydFNjcm9sbGluZyhlbGVtZW50LCAneCcpO1xuXG4gICAgaS5ldmVudC5iaW5kKGkub3duZXJEb2N1bWVudCwgJ21vdXNlbW92ZScsIG1vdXNlTW92ZUhhbmRsZXIpO1xuICAgIGkuZXZlbnQub25jZShpLm93bmVyRG9jdW1lbnQsICdtb3VzZXVwJywgbW91c2VVcEhhbmRsZXIpO1xuXG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBiaW5kTW91c2VTY3JvbGxZSGFuZGxlcihlbGVtZW50LCBpKSB7XG4gIHZhciBjdXJyZW50VG9wID0gbnVsbDtcbiAgdmFyIGN1cnJlbnRQYWdlWSA9IG51bGw7XG5cbiAgZnVuY3Rpb24gdXBkYXRlU2Nyb2xsVG9wKGRlbHRhWSkge1xuICAgIHZhciBuZXdUb3AgPSBjdXJyZW50VG9wICsgKGRlbHRhWSAqIGkucmFpbFlSYXRpbyk7XG4gICAgdmFyIG1heFRvcCA9IE1hdGgubWF4KDAsIGkuc2Nyb2xsYmFyWVJhaWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wKSArIChpLnJhaWxZUmF0aW8gKiAoaS5yYWlsWUhlaWdodCAtIGkuc2Nyb2xsYmFyWUhlaWdodCkpO1xuXG4gICAgaWYgKG5ld1RvcCA8IDApIHtcbiAgICAgIGkuc2Nyb2xsYmFyWVRvcCA9IDA7XG4gICAgfSBlbHNlIGlmIChuZXdUb3AgPiBtYXhUb3ApIHtcbiAgICAgIGkuc2Nyb2xsYmFyWVRvcCA9IG1heFRvcDtcbiAgICB9IGVsc2Uge1xuICAgICAgaS5zY3JvbGxiYXJZVG9wID0gbmV3VG9wO1xuICAgIH1cblxuICAgIHZhciBzY3JvbGxUb3AgPSBoLnRvSW50KGkuc2Nyb2xsYmFyWVRvcCAqIChpLmNvbnRlbnRIZWlnaHQgLSBpLmNvbnRhaW5lckhlaWdodCkgLyAoaS5jb250YWluZXJIZWlnaHQgLSAoaS5yYWlsWVJhdGlvICogaS5zY3JvbGxiYXJZSGVpZ2h0KSkpO1xuICAgIHVwZGF0ZVNjcm9sbChlbGVtZW50LCAndG9wJywgc2Nyb2xsVG9wKTtcbiAgfVxuXG4gIHZhciBtb3VzZU1vdmVIYW5kbGVyID0gZnVuY3Rpb24gKGUpIHtcbiAgICB1cGRhdGVTY3JvbGxUb3AoZS5wYWdlWSAtIGN1cnJlbnRQYWdlWSk7XG4gICAgdXBkYXRlR2VvbWV0cnkoZWxlbWVudCk7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIH07XG5cbiAgdmFyIG1vdXNlVXBIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgIGguc3RvcFNjcm9sbGluZyhlbGVtZW50LCAneScpO1xuICAgIGkuZXZlbnQudW5iaW5kKGkub3duZXJEb2N1bWVudCwgJ21vdXNlbW92ZScsIG1vdXNlTW92ZUhhbmRsZXIpO1xuICB9O1xuXG4gIGkuZXZlbnQuYmluZChpLnNjcm9sbGJhclksICdtb3VzZWRvd24nLCBmdW5jdGlvbiAoZSkge1xuICAgIGN1cnJlbnRQYWdlWSA9IGUucGFnZVk7XG4gICAgY3VycmVudFRvcCA9IGgudG9JbnQoZC5jc3MoaS5zY3JvbGxiYXJZLCAndG9wJykpICogaS5yYWlsWVJhdGlvO1xuICAgIGguc3RhcnRTY3JvbGxpbmcoZWxlbWVudCwgJ3knKTtcblxuICAgIGkuZXZlbnQuYmluZChpLm93bmVyRG9jdW1lbnQsICdtb3VzZW1vdmUnLCBtb3VzZU1vdmVIYW5kbGVyKTtcbiAgICBpLmV2ZW50Lm9uY2UoaS5vd25lckRvY3VtZW50LCAnbW91c2V1cCcsIG1vdXNlVXBIYW5kbGVyKTtcblxuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICB2YXIgaSA9IGluc3RhbmNlcy5nZXQoZWxlbWVudCk7XG4gIGJpbmRNb3VzZVNjcm9sbFhIYW5kbGVyKGVsZW1lbnQsIGkpO1xuICBiaW5kTW91c2VTY3JvbGxZSGFuZGxlcihlbGVtZW50LCBpKTtcbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9wZXJmZWN0LXNjcm9sbGJhci9zcmMvanMvcGx1Z2luL2hhbmRsZXIvZHJhZy1zY3JvbGxiYXIuanNcbiAqKiBtb2R1bGUgaWQgPSAyMlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar h = __webpack_require__(12)\n  , d = __webpack_require__(11)\n  , instances = __webpack_require__(14)\n  , updateGeometry = __webpack_require__(19)\n  , updateScroll = __webpack_require__(20);\n\nfunction bindKeyboardHandler(element, i) {\n  var hovered = false;\n  i.event.bind(element, 'mouseenter', function () {\n    hovered = true;\n  });\n  i.event.bind(element, 'mouseleave', function () {\n    hovered = false;\n  });\n\n  var shouldPrevent = false;\n  function shouldPreventDefault(deltaX, deltaY) {\n    var scrollTop = element.scrollTop;\n    if (deltaX === 0) {\n      if (!i.scrollbarYActive) {\n        return false;\n      }\n      if ((scrollTop === 0 && deltaY > 0) || (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n\n    var scrollLeft = element.scrollLeft;\n    if (deltaY === 0) {\n      if (!i.scrollbarXActive) {\n        return false;\n      }\n      if ((scrollLeft === 0 && deltaX < 0) || (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n    return true;\n  }\n\n  i.event.bind(i.ownerDocument, 'keydown', function (e) {\n    if (e.isDefaultPrevented && e.isDefaultPrevented()) {\n      return;\n    }\n\n    var focused = d.matches(i.scrollbarX, ':focus') ||\n                  d.matches(i.scrollbarY, ':focus');\n\n    if (!hovered && !focused) {\n      return;\n    }\n\n    var activeElement = document.activeElement ? document.activeElement : i.ownerDocument.activeElement;\n    if (activeElement) {\n      // go deeper if element is a webcomponent\n      while (activeElement.shadowRoot) {\n        activeElement = activeElement.shadowRoot.activeElement;\n      }\n      if (h.isEditable(activeElement)) {\n        return;\n      }\n    }\n\n    var deltaX = 0;\n    var deltaY = 0;\n\n    switch (e.which) {\n    case 37: // left\n      deltaX = -30;\n      break;\n    case 38: // up\n      deltaY = 30;\n      break;\n    case 39: // right\n      deltaX = 30;\n      break;\n    case 40: // down\n      deltaY = -30;\n      break;\n    case 33: // page up\n      deltaY = 90;\n      break;\n    case 32: // space bar\n      if (e.shiftKey) {\n        deltaY = 90;\n      } else {\n        deltaY = -90;\n      }\n      break;\n    case 34: // page down\n      deltaY = -90;\n      break;\n    case 35: // end\n      if (e.ctrlKey) {\n        deltaY = -i.contentHeight;\n      } else {\n        deltaY = -i.containerHeight;\n      }\n      break;\n    case 36: // home\n      if (e.ctrlKey) {\n        deltaY = element.scrollTop;\n      } else {\n        deltaY = i.containerHeight;\n      }\n      break;\n    default:\n      return;\n    }\n\n    updateScroll(element, 'top', element.scrollTop - deltaY);\n    updateScroll(element, 'left', element.scrollLeft + deltaX);\n    updateGeometry(element);\n\n    shouldPrevent = shouldPreventDefault(deltaX, deltaY);\n    if (shouldPrevent) {\n      e.preventDefault();\n    }\n  });\n}\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n  bindKeyboardHandler(element, i);\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vaGFuZGxlci9rZXlib2FyZC5qcz81MDEyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaCA9IHJlcXVpcmUoJy4uLy4uL2xpYi9oZWxwZXInKVxuICAsIGQgPSByZXF1aXJlKCcuLi8uLi9saWIvZG9tJylcbiAgLCBpbnN0YW5jZXMgPSByZXF1aXJlKCcuLi9pbnN0YW5jZXMnKVxuICAsIHVwZGF0ZUdlb21ldHJ5ID0gcmVxdWlyZSgnLi4vdXBkYXRlLWdlb21ldHJ5JylcbiAgLCB1cGRhdGVTY3JvbGwgPSByZXF1aXJlKCcuLi91cGRhdGUtc2Nyb2xsJyk7XG5cbmZ1bmN0aW9uIGJpbmRLZXlib2FyZEhhbmRsZXIoZWxlbWVudCwgaSkge1xuICB2YXIgaG92ZXJlZCA9IGZhbHNlO1xuICBpLmV2ZW50LmJpbmQoZWxlbWVudCwgJ21vdXNlZW50ZXInLCBmdW5jdGlvbiAoKSB7XG4gICAgaG92ZXJlZCA9IHRydWU7XG4gIH0pO1xuICBpLmV2ZW50LmJpbmQoZWxlbWVudCwgJ21vdXNlbGVhdmUnLCBmdW5jdGlvbiAoKSB7XG4gICAgaG92ZXJlZCA9IGZhbHNlO1xuICB9KTtcblxuICB2YXIgc2hvdWxkUHJldmVudCA9IGZhbHNlO1xuICBmdW5jdGlvbiBzaG91bGRQcmV2ZW50RGVmYXVsdChkZWx0YVgsIGRlbHRhWSkge1xuICAgIHZhciBzY3JvbGxUb3AgPSBlbGVtZW50LnNjcm9sbFRvcDtcbiAgICBpZiAoZGVsdGFYID09PSAwKSB7XG4gICAgICBpZiAoIWkuc2Nyb2xsYmFyWUFjdGl2ZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICBpZiAoKHNjcm9sbFRvcCA9PT0gMCAmJiBkZWx0YVkgPiAwKSB8fCAoc2Nyb2xsVG9wID49IGkuY29udGVudEhlaWdodCAtIGkuY29udGFpbmVySGVpZ2h0ICYmIGRlbHRhWSA8IDApKSB7XG4gICAgICAgIHJldHVybiAhaS5zZXR0aW5ncy53aGVlbFByb3BhZ2F0aW9uO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBzY3JvbGxMZWZ0ID0gZWxlbWVudC5zY3JvbGxMZWZ0O1xuICAgIGlmIChkZWx0YVkgPT09IDApIHtcbiAgICAgIGlmICghaS5zY3JvbGxiYXJYQWN0aXZlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIGlmICgoc2Nyb2xsTGVmdCA9PT0gMCAmJiBkZWx0YVggPCAwKSB8fCAoc2Nyb2xsTGVmdCA+PSBpLmNvbnRlbnRXaWR0aCAtIGkuY29udGFpbmVyV2lkdGggJiYgZGVsdGFYID4gMCkpIHtcbiAgICAgICAgcmV0dXJuICFpLnNldHRpbmdzLndoZWVsUHJvcGFnYXRpb247XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaS5ldmVudC5iaW5kKGkub3duZXJEb2N1bWVudCwgJ2tleWRvd24nLCBmdW5jdGlvbiAoZSkge1xuICAgIGlmIChlLmlzRGVmYXVsdFByZXZlbnRlZCAmJiBlLmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIGZvY3VzZWQgPSBkLm1hdGNoZXMoaS5zY3JvbGxiYXJYLCAnOmZvY3VzJykgfHxcbiAgICAgICAgICAgICAgICAgIGQubWF0Y2hlcyhpLnNjcm9sbGJhclksICc6Zm9jdXMnKTtcblxuICAgIGlmICghaG92ZXJlZCAmJiAhZm9jdXNlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBhY3RpdmVFbGVtZW50ID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCA/IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgOiBpLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcbiAgICBpZiAoYWN0aXZlRWxlbWVudCkge1xuICAgICAgLy8gZ28gZGVlcGVyIGlmIGVsZW1lbnQgaXMgYSB3ZWJjb21wb25lbnRcbiAgICAgIHdoaWxlIChhY3RpdmVFbGVtZW50LnNoYWRvd1Jvb3QpIHtcbiAgICAgICAgYWN0aXZlRWxlbWVudCA9IGFjdGl2ZUVsZW1lbnQuc2hhZG93Um9vdC5hY3RpdmVFbGVtZW50O1xuICAgICAgfVxuICAgICAgaWYgKGguaXNFZGl0YWJsZShhY3RpdmVFbGVtZW50KSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGRlbHRhWCA9IDA7XG4gICAgdmFyIGRlbHRhWSA9IDA7XG5cbiAgICBzd2l0Y2ggKGUud2hpY2gpIHtcbiAgICBjYXNlIDM3OiAvLyBsZWZ0XG4gICAgICBkZWx0YVggPSAtMzA7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDM4OiAvLyB1cFxuICAgICAgZGVsdGFZID0gMzA7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDM5OiAvLyByaWdodFxuICAgICAgZGVsdGFYID0gMzA7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDQwOiAvLyBkb3duXG4gICAgICBkZWx0YVkgPSAtMzA7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDMzOiAvLyBwYWdlIHVwXG4gICAgICBkZWx0YVkgPSA5MDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMzI6IC8vIHNwYWNlIGJhclxuICAgICAgaWYgKGUuc2hpZnRLZXkpIHtcbiAgICAgICAgZGVsdGFZID0gOTA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkZWx0YVkgPSAtOTA7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBjYXNlIDM0OiAvLyBwYWdlIGRvd25cbiAgICAgIGRlbHRhWSA9IC05MDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMzU6IC8vIGVuZFxuICAgICAgaWYgKGUuY3RybEtleSkge1xuICAgICAgICBkZWx0YVkgPSAtaS5jb250ZW50SGVpZ2h0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGVsdGFZID0gLWkuY29udGFpbmVySGVpZ2h0O1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgY2FzZSAzNjogLy8gaG9tZVxuICAgICAgaWYgKGUuY3RybEtleSkge1xuICAgICAgICBkZWx0YVkgPSBlbGVtZW50LnNjcm9sbFRvcDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRlbHRhWSA9IGkuY29udGFpbmVySGVpZ2h0O1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ3RvcCcsIGVsZW1lbnQuc2Nyb2xsVG9wIC0gZGVsdGFZKTtcbiAgICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ2xlZnQnLCBlbGVtZW50LnNjcm9sbExlZnQgKyBkZWx0YVgpO1xuICAgIHVwZGF0ZUdlb21ldHJ5KGVsZW1lbnQpO1xuXG4gICAgc2hvdWxkUHJldmVudCA9IHNob3VsZFByZXZlbnREZWZhdWx0KGRlbHRhWCwgZGVsdGFZKTtcbiAgICBpZiAoc2hvdWxkUHJldmVudCkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgdmFyIGkgPSBpbnN0YW5jZXMuZ2V0KGVsZW1lbnQpO1xuICBiaW5kS2V5Ym9hcmRIYW5kbGVyKGVsZW1lbnQsIGkpO1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vaGFuZGxlci9rZXlib2FyZC5qc1xuICoqIG1vZHVsZSBpZCA9IDIzXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar instances = __webpack_require__(14)\n  , updateGeometry = __webpack_require__(19)\n  , updateScroll = __webpack_require__(20);\n\nfunction bindMouseWheelHandler(element, i) {\n  var shouldPrevent = false;\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    var scrollTop = element.scrollTop;\n    if (deltaX === 0) {\n      if (!i.scrollbarYActive) {\n        return false;\n      }\n      if ((scrollTop === 0 && deltaY > 0) || (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n\n    var scrollLeft = element.scrollLeft;\n    if (deltaY === 0) {\n      if (!i.scrollbarXActive) {\n        return false;\n      }\n      if ((scrollLeft === 0 && deltaX < 0) || (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n    return true;\n  }\n\n  function getDeltaFromEvent(e) {\n    var deltaX = e.deltaX;\n    var deltaY = -1 * e.deltaY;\n\n    if (typeof deltaX === \"undefined\" || typeof deltaY === \"undefined\") {\n      // OS X Safari\n      deltaX = -1 * e.wheelDeltaX / 6;\n      deltaY = e.wheelDeltaY / 6;\n    }\n\n    if (e.deltaMode && e.deltaMode === 1) {\n      // Firefox in deltaMode 1: Line scrolling\n      deltaX *= 10;\n      deltaY *= 10;\n    }\n\n    if (deltaX !== deltaX && deltaY !== deltaY/* NaN checks */) {\n      // IE in some mouse drivers\n      deltaX = 0;\n      deltaY = e.wheelDelta;\n    }\n\n    return [deltaX, deltaY];\n  }\n\n  function shouldBeConsumedByTextarea(deltaX, deltaY) {\n    var hoveredTextarea = element.querySelector('textarea:hover');\n    if (hoveredTextarea) {\n      var maxScrollTop = hoveredTextarea.scrollHeight - hoveredTextarea.clientHeight;\n      if (maxScrollTop > 0) {\n        if (!(hoveredTextarea.scrollTop === 0 && deltaY > 0) &&\n            !(hoveredTextarea.scrollTop === maxScrollTop && deltaY < 0)) {\n          return true;\n        }\n      }\n      var maxScrollLeft = hoveredTextarea.scrollLeft - hoveredTextarea.clientWidth;\n      if (maxScrollLeft > 0) {\n        if (!(hoveredTextarea.scrollLeft === 0 && deltaX < 0) &&\n            !(hoveredTextarea.scrollLeft === maxScrollLeft && deltaX > 0)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  function mousewheelHandler(e) {\n    var delta = getDeltaFromEvent(e);\n\n    var deltaX = delta[0];\n    var deltaY = delta[1];\n\n    if (shouldBeConsumedByTextarea(deltaX, deltaY)) {\n      return;\n    }\n\n    shouldPrevent = false;\n    if (!i.settings.useBothWheelAxes) {\n      // deltaX will only be used for horizontal scrolling and deltaY will\n      // only be used for vertical scrolling - this is the default\n      updateScroll(element, 'top', element.scrollTop - (deltaY * i.settings.wheelSpeed));\n      updateScroll(element, 'left', element.scrollLeft + (deltaX * i.settings.wheelSpeed));\n    } else if (i.scrollbarYActive && !i.scrollbarXActive) {\n      // only vertical scrollbar is active and useBothWheelAxes option is\n      // active, so let's scroll vertical bar using both mouse wheel axes\n      if (deltaY) {\n        updateScroll(element, 'top', element.scrollTop - (deltaY * i.settings.wheelSpeed));\n      } else {\n        updateScroll(element, 'top', element.scrollTop + (deltaX * i.settings.wheelSpeed));\n      }\n      shouldPrevent = true;\n    } else if (i.scrollbarXActive && !i.scrollbarYActive) {\n      // useBothWheelAxes and only horizontal bar is active, so use both\n      // wheel axes for horizontal bar\n      if (deltaX) {\n        updateScroll(element, 'left', element.scrollLeft + (deltaX * i.settings.wheelSpeed));\n      } else {\n        updateScroll(element, 'left', element.scrollLeft - (deltaY * i.settings.wheelSpeed));\n      }\n      shouldPrevent = true;\n    }\n\n    updateGeometry(element);\n\n    shouldPrevent = (shouldPrevent || shouldPreventDefault(deltaX, deltaY));\n    if (shouldPrevent) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  if (typeof window.onwheel !== \"undefined\") {\n    i.event.bind(element, 'wheel', mousewheelHandler);\n  } else if (typeof window.onmousewheel !== \"undefined\") {\n    i.event.bind(element, 'mousewheel', mousewheelHandler);\n  }\n}\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n  bindMouseWheelHandler(element, i);\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vaGFuZGxlci9tb3VzZS13aGVlbC5qcz9kNmYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5zdGFuY2VzID0gcmVxdWlyZSgnLi4vaW5zdGFuY2VzJylcbiAgLCB1cGRhdGVHZW9tZXRyeSA9IHJlcXVpcmUoJy4uL3VwZGF0ZS1nZW9tZXRyeScpXG4gICwgdXBkYXRlU2Nyb2xsID0gcmVxdWlyZSgnLi4vdXBkYXRlLXNjcm9sbCcpO1xuXG5mdW5jdGlvbiBiaW5kTW91c2VXaGVlbEhhbmRsZXIoZWxlbWVudCwgaSkge1xuICB2YXIgc2hvdWxkUHJldmVudCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIHNob3VsZFByZXZlbnREZWZhdWx0KGRlbHRhWCwgZGVsdGFZKSB7XG4gICAgdmFyIHNjcm9sbFRvcCA9IGVsZW1lbnQuc2Nyb2xsVG9wO1xuICAgIGlmIChkZWx0YVggPT09IDApIHtcbiAgICAgIGlmICghaS5zY3JvbGxiYXJZQWN0aXZlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIGlmICgoc2Nyb2xsVG9wID09PSAwICYmIGRlbHRhWSA+IDApIHx8IChzY3JvbGxUb3AgPj0gaS5jb250ZW50SGVpZ2h0IC0gaS5jb250YWluZXJIZWlnaHQgJiYgZGVsdGFZIDwgMCkpIHtcbiAgICAgICAgcmV0dXJuICFpLnNldHRpbmdzLndoZWVsUHJvcGFnYXRpb247XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIHNjcm9sbExlZnQgPSBlbGVtZW50LnNjcm9sbExlZnQ7XG4gICAgaWYgKGRlbHRhWSA9PT0gMCkge1xuICAgICAgaWYgKCFpLnNjcm9sbGJhclhBY3RpdmUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgaWYgKChzY3JvbGxMZWZ0ID09PSAwICYmIGRlbHRhWCA8IDApIHx8IChzY3JvbGxMZWZ0ID49IGkuY29udGVudFdpZHRoIC0gaS5jb250YWluZXJXaWR0aCAmJiBkZWx0YVggPiAwKSkge1xuICAgICAgICByZXR1cm4gIWkuc2V0dGluZ3Mud2hlZWxQcm9wYWdhdGlvbjtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBmdW5jdGlvbiBnZXREZWx0YUZyb21FdmVudChlKSB7XG4gICAgdmFyIGRlbHRhWCA9IGUuZGVsdGFYO1xuICAgIHZhciBkZWx0YVkgPSAtMSAqIGUuZGVsdGFZO1xuXG4gICAgaWYgKHR5cGVvZiBkZWx0YVggPT09IFwidW5kZWZpbmVkXCIgfHwgdHlwZW9mIGRlbHRhWSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgLy8gT1MgWCBTYWZhcmlcbiAgICAgIGRlbHRhWCA9IC0xICogZS53aGVlbERlbHRhWCAvIDY7XG4gICAgICBkZWx0YVkgPSBlLndoZWVsRGVsdGFZIC8gNjtcbiAgICB9XG5cbiAgICBpZiAoZS5kZWx0YU1vZGUgJiYgZS5kZWx0YU1vZGUgPT09IDEpIHtcbiAgICAgIC8vIEZpcmVmb3ggaW4gZGVsdGFNb2RlIDE6IExpbmUgc2Nyb2xsaW5nXG4gICAgICBkZWx0YVggKj0gMTA7XG4gICAgICBkZWx0YVkgKj0gMTA7XG4gICAgfVxuXG4gICAgaWYgKGRlbHRhWCAhPT0gZGVsdGFYICYmIGRlbHRhWSAhPT0gZGVsdGFZLyogTmFOIGNoZWNrcyAqLykge1xuICAgICAgLy8gSUUgaW4gc29tZSBtb3VzZSBkcml2ZXJzXG4gICAgICBkZWx0YVggPSAwO1xuICAgICAgZGVsdGFZID0gZS53aGVlbERlbHRhO1xuICAgIH1cblxuICAgIHJldHVybiBbZGVsdGFYLCBkZWx0YVldO1xuICB9XG5cbiAgZnVuY3Rpb24gc2hvdWxkQmVDb25zdW1lZEJ5VGV4dGFyZWEoZGVsdGFYLCBkZWx0YVkpIHtcbiAgICB2YXIgaG92ZXJlZFRleHRhcmVhID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKCd0ZXh0YXJlYTpob3ZlcicpO1xuICAgIGlmIChob3ZlcmVkVGV4dGFyZWEpIHtcbiAgICAgIHZhciBtYXhTY3JvbGxUb3AgPSBob3ZlcmVkVGV4dGFyZWEuc2Nyb2xsSGVpZ2h0IC0gaG92ZXJlZFRleHRhcmVhLmNsaWVudEhlaWdodDtcbiAgICAgIGlmIChtYXhTY3JvbGxUb3AgPiAwKSB7XG4gICAgICAgIGlmICghKGhvdmVyZWRUZXh0YXJlYS5zY3JvbGxUb3AgPT09IDAgJiYgZGVsdGFZID4gMCkgJiZcbiAgICAgICAgICAgICEoaG92ZXJlZFRleHRhcmVhLnNjcm9sbFRvcCA9PT0gbWF4U2Nyb2xsVG9wICYmIGRlbHRhWSA8IDApKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHZhciBtYXhTY3JvbGxMZWZ0ID0gaG92ZXJlZFRleHRhcmVhLnNjcm9sbExlZnQgLSBob3ZlcmVkVGV4dGFyZWEuY2xpZW50V2lkdGg7XG4gICAgICBpZiAobWF4U2Nyb2xsTGVmdCA+IDApIHtcbiAgICAgICAgaWYgKCEoaG92ZXJlZFRleHRhcmVhLnNjcm9sbExlZnQgPT09IDAgJiYgZGVsdGFYIDwgMCkgJiZcbiAgICAgICAgICAgICEoaG92ZXJlZFRleHRhcmVhLnNjcm9sbExlZnQgPT09IG1heFNjcm9sbExlZnQgJiYgZGVsdGFYID4gMCkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmdW5jdGlvbiBtb3VzZXdoZWVsSGFuZGxlcihlKSB7XG4gICAgdmFyIGRlbHRhID0gZ2V0RGVsdGFGcm9tRXZlbnQoZSk7XG5cbiAgICB2YXIgZGVsdGFYID0gZGVsdGFbMF07XG4gICAgdmFyIGRlbHRhWSA9IGRlbHRhWzFdO1xuXG4gICAgaWYgKHNob3VsZEJlQ29uc3VtZWRCeVRleHRhcmVhKGRlbHRhWCwgZGVsdGFZKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHNob3VsZFByZXZlbnQgPSBmYWxzZTtcbiAgICBpZiAoIWkuc2V0dGluZ3MudXNlQm90aFdoZWVsQXhlcykge1xuICAgICAgLy8gZGVsdGFYIHdpbGwgb25seSBiZSB1c2VkIGZvciBob3Jpem9udGFsIHNjcm9sbGluZyBhbmQgZGVsdGFZIHdpbGxcbiAgICAgIC8vIG9ubHkgYmUgdXNlZCBmb3IgdmVydGljYWwgc2Nyb2xsaW5nIC0gdGhpcyBpcyB0aGUgZGVmYXVsdFxuICAgICAgdXBkYXRlU2Nyb2xsKGVsZW1lbnQsICd0b3AnLCBlbGVtZW50LnNjcm9sbFRvcCAtIChkZWx0YVkgKiBpLnNldHRpbmdzLndoZWVsU3BlZWQpKTtcbiAgICAgIHVwZGF0ZVNjcm9sbChlbGVtZW50LCAnbGVmdCcsIGVsZW1lbnQuc2Nyb2xsTGVmdCArIChkZWx0YVggKiBpLnNldHRpbmdzLndoZWVsU3BlZWQpKTtcbiAgICB9IGVsc2UgaWYgKGkuc2Nyb2xsYmFyWUFjdGl2ZSAmJiAhaS5zY3JvbGxiYXJYQWN0aXZlKSB7XG4gICAgICAvLyBvbmx5IHZlcnRpY2FsIHNjcm9sbGJhciBpcyBhY3RpdmUgYW5kIHVzZUJvdGhXaGVlbEF4ZXMgb3B0aW9uIGlzXG4gICAgICAvLyBhY3RpdmUsIHNvIGxldCdzIHNjcm9sbCB2ZXJ0aWNhbCBiYXIgdXNpbmcgYm90aCBtb3VzZSB3aGVlbCBheGVzXG4gICAgICBpZiAoZGVsdGFZKSB7XG4gICAgICAgIHVwZGF0ZVNjcm9sbChlbGVtZW50LCAndG9wJywgZWxlbWVudC5zY3JvbGxUb3AgLSAoZGVsdGFZICogaS5zZXR0aW5ncy53aGVlbFNwZWVkKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ3RvcCcsIGVsZW1lbnQuc2Nyb2xsVG9wICsgKGRlbHRhWCAqIGkuc2V0dGluZ3Mud2hlZWxTcGVlZCkpO1xuICAgICAgfVxuICAgICAgc2hvdWxkUHJldmVudCA9IHRydWU7XG4gICAgfSBlbHNlIGlmIChpLnNjcm9sbGJhclhBY3RpdmUgJiYgIWkuc2Nyb2xsYmFyWUFjdGl2ZSkge1xuICAgICAgLy8gdXNlQm90aFdoZWVsQXhlcyBhbmQgb25seSBob3Jpem9udGFsIGJhciBpcyBhY3RpdmUsIHNvIHVzZSBib3RoXG4gICAgICAvLyB3aGVlbCBheGVzIGZvciBob3Jpem9udGFsIGJhclxuICAgICAgaWYgKGRlbHRhWCkge1xuICAgICAgICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ2xlZnQnLCBlbGVtZW50LnNjcm9sbExlZnQgKyAoZGVsdGFYICogaS5zZXR0aW5ncy53aGVlbFNwZWVkKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ2xlZnQnLCBlbGVtZW50LnNjcm9sbExlZnQgLSAoZGVsdGFZICogaS5zZXR0aW5ncy53aGVlbFNwZWVkKSk7XG4gICAgICB9XG4gICAgICBzaG91bGRQcmV2ZW50ID0gdHJ1ZTtcbiAgICB9XG5cbiAgICB1cGRhdGVHZW9tZXRyeShlbGVtZW50KTtcblxuICAgIHNob3VsZFByZXZlbnQgPSAoc2hvdWxkUHJldmVudCB8fCBzaG91bGRQcmV2ZW50RGVmYXVsdChkZWx0YVgsIGRlbHRhWSkpO1xuICAgIGlmIChzaG91bGRQcmV2ZW50KSB7XG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cbiAgfVxuXG4gIGlmICh0eXBlb2Ygd2luZG93Lm9ud2hlZWwgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBpLmV2ZW50LmJpbmQoZWxlbWVudCwgJ3doZWVsJywgbW91c2V3aGVlbEhhbmRsZXIpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cub25tb3VzZXdoZWVsICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgaS5ldmVudC5iaW5kKGVsZW1lbnQsICdtb3VzZXdoZWVsJywgbW91c2V3aGVlbEhhbmRsZXIpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgdmFyIGkgPSBpbnN0YW5jZXMuZ2V0KGVsZW1lbnQpO1xuICBiaW5kTW91c2VXaGVlbEhhbmRsZXIoZWxlbWVudCwgaSk7XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcGVyZmVjdC1zY3JvbGxiYXIvc3JjL2pzL3BsdWdpbi9oYW5kbGVyL21vdXNlLXdoZWVsLmpzXG4gKiogbW9kdWxlIGlkID0gMjRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar instances = __webpack_require__(14)\n  , updateGeometry = __webpack_require__(19);\n\nfunction bindNativeScrollHandler(element, i) {\n  i.event.bind(element, 'scroll', function () {\n    updateGeometry(element);\n  });\n}\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n  bindNativeScrollHandler(element, i);\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vaGFuZGxlci9uYXRpdmUtc2Nyb2xsLmpzPzI2MGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbnN0YW5jZXMgPSByZXF1aXJlKCcuLi9pbnN0YW5jZXMnKVxuICAsIHVwZGF0ZUdlb21ldHJ5ID0gcmVxdWlyZSgnLi4vdXBkYXRlLWdlb21ldHJ5Jyk7XG5cbmZ1bmN0aW9uIGJpbmROYXRpdmVTY3JvbGxIYW5kbGVyKGVsZW1lbnQsIGkpIHtcbiAgaS5ldmVudC5iaW5kKGVsZW1lbnQsICdzY3JvbGwnLCBmdW5jdGlvbiAoKSB7XG4gICAgdXBkYXRlR2VvbWV0cnkoZWxlbWVudCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gIHZhciBpID0gaW5zdGFuY2VzLmdldChlbGVtZW50KTtcbiAgYmluZE5hdGl2ZVNjcm9sbEhhbmRsZXIoZWxlbWVudCwgaSk7XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcGVyZmVjdC1zY3JvbGxiYXIvc3JjL2pzL3BsdWdpbi9oYW5kbGVyL25hdGl2ZS1zY3JvbGwuanNcbiAqKiBtb2R1bGUgaWQgPSAyNVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar h = __webpack_require__(12)\n  , instances = __webpack_require__(14)\n  , updateGeometry = __webpack_require__(19)\n  , updateScroll = __webpack_require__(20);\n\nfunction bindSelectionHandler(element, i) {\n  function getRangeNode() {\n    var selection = window.getSelection ? window.getSelection() :\n                    document.getSelection ? document.getSelection() : '';\n    if (selection.toString().length === 0) {\n      return null;\n    } else {\n      return selection.getRangeAt(0).commonAncestorContainer;\n    }\n  }\n\n  var scrollingLoop = null;\n  var scrollDiff = {top: 0, left: 0};\n  function startScrolling() {\n    if (!scrollingLoop) {\n      scrollingLoop = setInterval(function () {\n        if (!instances.get(element)) {\n          clearInterval(scrollingLoop);\n          return;\n        }\n\n        updateScroll(element, 'top', element.scrollTop + scrollDiff.top);\n        updateScroll(element, 'left', element.scrollLeft + scrollDiff.left);\n        updateGeometry(element);\n      }, 50); // every .1 sec\n    }\n  }\n  function stopScrolling() {\n    if (scrollingLoop) {\n      clearInterval(scrollingLoop);\n      scrollingLoop = null;\n    }\n    h.stopScrolling(element);\n  }\n\n  var isSelected = false;\n  i.event.bind(i.ownerDocument, 'selectionchange', function () {\n    if (element.contains(getRangeNode())) {\n      isSelected = true;\n    } else {\n      isSelected = false;\n      stopScrolling();\n    }\n  });\n  i.event.bind(window, 'mouseup', function () {\n    if (isSelected) {\n      isSelected = false;\n      stopScrolling();\n    }\n  });\n\n  i.event.bind(window, 'mousemove', function (e) {\n    if (isSelected) {\n      var mousePosition = {x: e.pageX, y: e.pageY};\n      var containerGeometry = {\n        left: element.offsetLeft,\n        right: element.offsetLeft + element.offsetWidth,\n        top: element.offsetTop,\n        bottom: element.offsetTop + element.offsetHeight\n      };\n\n      if (mousePosition.x < containerGeometry.left + 3) {\n        scrollDiff.left = -5;\n        h.startScrolling(element, 'x');\n      } else if (mousePosition.x > containerGeometry.right - 3) {\n        scrollDiff.left = 5;\n        h.startScrolling(element, 'x');\n      } else {\n        scrollDiff.left = 0;\n      }\n\n      if (mousePosition.y < containerGeometry.top + 3) {\n        if (containerGeometry.top + 3 - mousePosition.y < 5) {\n          scrollDiff.top = -5;\n        } else {\n          scrollDiff.top = -20;\n        }\n        h.startScrolling(element, 'y');\n      } else if (mousePosition.y > containerGeometry.bottom - 3) {\n        if (mousePosition.y - containerGeometry.bottom + 3 < 5) {\n          scrollDiff.top = 5;\n        } else {\n          scrollDiff.top = 20;\n        }\n        h.startScrolling(element, 'y');\n      } else {\n        scrollDiff.top = 0;\n      }\n\n      if (scrollDiff.top === 0 && scrollDiff.left === 0) {\n        stopScrolling();\n      } else {\n        startScrolling();\n      }\n    }\n  });\n}\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n  bindSelectionHandler(element, i);\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vaGFuZGxlci9zZWxlY3Rpb24uanM/OWM4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sTUFBTTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBoID0gcmVxdWlyZSgnLi4vLi4vbGliL2hlbHBlcicpXG4gICwgaW5zdGFuY2VzID0gcmVxdWlyZSgnLi4vaW5zdGFuY2VzJylcbiAgLCB1cGRhdGVHZW9tZXRyeSA9IHJlcXVpcmUoJy4uL3VwZGF0ZS1nZW9tZXRyeScpXG4gICwgdXBkYXRlU2Nyb2xsID0gcmVxdWlyZSgnLi4vdXBkYXRlLXNjcm9sbCcpO1xuXG5mdW5jdGlvbiBiaW5kU2VsZWN0aW9uSGFuZGxlcihlbGVtZW50LCBpKSB7XG4gIGZ1bmN0aW9uIGdldFJhbmdlTm9kZSgpIHtcbiAgICB2YXIgc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbiA/IHdpbmRvdy5nZXRTZWxlY3Rpb24oKSA6XG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldFNlbGVjdGlvbiA/IGRvY3VtZW50LmdldFNlbGVjdGlvbigpIDogJyc7XG4gICAgaWYgKHNlbGVjdGlvbi50b1N0cmluZygpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBzZWxlY3Rpb24uZ2V0UmFuZ2VBdCgwKS5jb21tb25BbmNlc3RvckNvbnRhaW5lcjtcbiAgICB9XG4gIH1cblxuICB2YXIgc2Nyb2xsaW5nTG9vcCA9IG51bGw7XG4gIHZhciBzY3JvbGxEaWZmID0ge3RvcDogMCwgbGVmdDogMH07XG4gIGZ1bmN0aW9uIHN0YXJ0U2Nyb2xsaW5nKCkge1xuICAgIGlmICghc2Nyb2xsaW5nTG9vcCkge1xuICAgICAgc2Nyb2xsaW5nTG9vcCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCFpbnN0YW5jZXMuZ2V0KGVsZW1lbnQpKSB7XG4gICAgICAgICAgY2xlYXJJbnRlcnZhbChzY3JvbGxpbmdMb29wKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ3RvcCcsIGVsZW1lbnQuc2Nyb2xsVG9wICsgc2Nyb2xsRGlmZi50b3ApO1xuICAgICAgICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ2xlZnQnLCBlbGVtZW50LnNjcm9sbExlZnQgKyBzY3JvbGxEaWZmLmxlZnQpO1xuICAgICAgICB1cGRhdGVHZW9tZXRyeShlbGVtZW50KTtcbiAgICAgIH0sIDUwKTsgLy8gZXZlcnkgLjEgc2VjXG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIHN0b3BTY3JvbGxpbmcoKSB7XG4gICAgaWYgKHNjcm9sbGluZ0xvb3ApIHtcbiAgICAgIGNsZWFySW50ZXJ2YWwoc2Nyb2xsaW5nTG9vcCk7XG4gICAgICBzY3JvbGxpbmdMb29wID0gbnVsbDtcbiAgICB9XG4gICAgaC5zdG9wU2Nyb2xsaW5nKGVsZW1lbnQpO1xuICB9XG5cbiAgdmFyIGlzU2VsZWN0ZWQgPSBmYWxzZTtcbiAgaS5ldmVudC5iaW5kKGkub3duZXJEb2N1bWVudCwgJ3NlbGVjdGlvbmNoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoZWxlbWVudC5jb250YWlucyhnZXRSYW5nZU5vZGUoKSkpIHtcbiAgICAgIGlzU2VsZWN0ZWQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpc1NlbGVjdGVkID0gZmFsc2U7XG4gICAgICBzdG9wU2Nyb2xsaW5nKCk7XG4gICAgfVxuICB9KTtcbiAgaS5ldmVudC5iaW5kKHdpbmRvdywgJ21vdXNldXAnLCBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGlzU2VsZWN0ZWQpIHtcbiAgICAgIGlzU2VsZWN0ZWQgPSBmYWxzZTtcbiAgICAgIHN0b3BTY3JvbGxpbmcoKTtcbiAgICB9XG4gIH0pO1xuXG4gIGkuZXZlbnQuYmluZCh3aW5kb3csICdtb3VzZW1vdmUnLCBmdW5jdGlvbiAoZSkge1xuICAgIGlmIChpc1NlbGVjdGVkKSB7XG4gICAgICB2YXIgbW91c2VQb3NpdGlvbiA9IHt4OiBlLnBhZ2VYLCB5OiBlLnBhZ2VZfTtcbiAgICAgIHZhciBjb250YWluZXJHZW9tZXRyeSA9IHtcbiAgICAgICAgbGVmdDogZWxlbWVudC5vZmZzZXRMZWZ0LFxuICAgICAgICByaWdodDogZWxlbWVudC5vZmZzZXRMZWZ0ICsgZWxlbWVudC5vZmZzZXRXaWR0aCxcbiAgICAgICAgdG9wOiBlbGVtZW50Lm9mZnNldFRvcCxcbiAgICAgICAgYm90dG9tOiBlbGVtZW50Lm9mZnNldFRvcCArIGVsZW1lbnQub2Zmc2V0SGVpZ2h0XG4gICAgICB9O1xuXG4gICAgICBpZiAobW91c2VQb3NpdGlvbi54IDwgY29udGFpbmVyR2VvbWV0cnkubGVmdCArIDMpIHtcbiAgICAgICAgc2Nyb2xsRGlmZi5sZWZ0ID0gLTU7XG4gICAgICAgIGguc3RhcnRTY3JvbGxpbmcoZWxlbWVudCwgJ3gnKTtcbiAgICAgIH0gZWxzZSBpZiAobW91c2VQb3NpdGlvbi54ID4gY29udGFpbmVyR2VvbWV0cnkucmlnaHQgLSAzKSB7XG4gICAgICAgIHNjcm9sbERpZmYubGVmdCA9IDU7XG4gICAgICAgIGguc3RhcnRTY3JvbGxpbmcoZWxlbWVudCwgJ3gnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNjcm9sbERpZmYubGVmdCA9IDA7XG4gICAgICB9XG5cbiAgICAgIGlmIChtb3VzZVBvc2l0aW9uLnkgPCBjb250YWluZXJHZW9tZXRyeS50b3AgKyAzKSB7XG4gICAgICAgIGlmIChjb250YWluZXJHZW9tZXRyeS50b3AgKyAzIC0gbW91c2VQb3NpdGlvbi55IDwgNSkge1xuICAgICAgICAgIHNjcm9sbERpZmYudG9wID0gLTU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2Nyb2xsRGlmZi50b3AgPSAtMjA7XG4gICAgICAgIH1cbiAgICAgICAgaC5zdGFydFNjcm9sbGluZyhlbGVtZW50LCAneScpO1xuICAgICAgfSBlbHNlIGlmIChtb3VzZVBvc2l0aW9uLnkgPiBjb250YWluZXJHZW9tZXRyeS5ib3R0b20gLSAzKSB7XG4gICAgICAgIGlmIChtb3VzZVBvc2l0aW9uLnkgLSBjb250YWluZXJHZW9tZXRyeS5ib3R0b20gKyAzIDwgNSkge1xuICAgICAgICAgIHNjcm9sbERpZmYudG9wID0gNTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzY3JvbGxEaWZmLnRvcCA9IDIwO1xuICAgICAgICB9XG4gICAgICAgIGguc3RhcnRTY3JvbGxpbmcoZWxlbWVudCwgJ3knKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNjcm9sbERpZmYudG9wID0gMDtcbiAgICAgIH1cblxuICAgICAgaWYgKHNjcm9sbERpZmYudG9wID09PSAwICYmIHNjcm9sbERpZmYubGVmdCA9PT0gMCkge1xuICAgICAgICBzdG9wU2Nyb2xsaW5nKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdGFydFNjcm9sbGluZygpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgdmFyIGkgPSBpbnN0YW5jZXMuZ2V0KGVsZW1lbnQpO1xuICBiaW5kU2VsZWN0aW9uSGFuZGxlcihlbGVtZW50LCBpKTtcbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9wZXJmZWN0LXNjcm9sbGJhci9zcmMvanMvcGx1Z2luL2hhbmRsZXIvc2VsZWN0aW9uLmpzXG4gKiogbW9kdWxlIGlkID0gMjZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar instances = __webpack_require__(14)\n  , updateGeometry = __webpack_require__(19)\n  , updateScroll = __webpack_require__(20);\n\nfunction bindTouchHandler(element, i, supportsTouch, supportsIePointer) {\n  function shouldPreventDefault(deltaX, deltaY) {\n    var scrollTop = element.scrollTop;\n    var scrollLeft = element.scrollLeft;\n    var magnitudeX = Math.abs(deltaX);\n    var magnitudeY = Math.abs(deltaY);\n\n    if (magnitudeY > magnitudeX) {\n      // user is perhaps trying to swipe up/down the page\n\n      if (((deltaY < 0) && (scrollTop === i.contentHeight - i.containerHeight)) ||\n          ((deltaY > 0) && (scrollTop === 0))) {\n        return !i.settings.swipePropagation;\n      }\n    } else if (magnitudeX > magnitudeY) {\n      // user is perhaps trying to swipe left/right across the page\n\n      if (((deltaX < 0) && (scrollLeft === i.contentWidth - i.containerWidth)) ||\n          ((deltaX > 0) && (scrollLeft === 0))) {\n        return !i.settings.swipePropagation;\n      }\n    }\n\n    return true;\n  }\n\n  function applyTouchMove(differenceX, differenceY) {\n    updateScroll(element, 'top', element.scrollTop - differenceY);\n    updateScroll(element, 'left', element.scrollLeft - differenceX);\n\n    updateGeometry(element);\n  }\n\n  var startOffset = {};\n  var startTime = 0;\n  var speed = {};\n  var easingLoop = null;\n  var inGlobalTouch = false;\n  var inLocalTouch = false;\n\n  function globalTouchStart() {\n    inGlobalTouch = true;\n  }\n  function globalTouchEnd() {\n    inGlobalTouch = false;\n  }\n\n  function getTouch(e) {\n    if (e.targetTouches) {\n      return e.targetTouches[0];\n    } else {\n      // Maybe IE pointer\n      return e;\n    }\n  }\n  function shouldHandle(e) {\n    if (e.targetTouches && e.targetTouches.length === 1) {\n      return true;\n    }\n    if (e.pointerType && e.pointerType !== 'mouse' && e.pointerType !== e.MSPOINTER_TYPE_MOUSE) {\n      return true;\n    }\n    return false;\n  }\n  function touchStart(e) {\n    if (shouldHandle(e)) {\n      inLocalTouch = true;\n\n      var touch = getTouch(e);\n\n      startOffset.pageX = touch.pageX;\n      startOffset.pageY = touch.pageY;\n\n      startTime = (new Date()).getTime();\n\n      if (easingLoop !== null) {\n        clearInterval(easingLoop);\n      }\n\n      e.stopPropagation();\n    }\n  }\n  function touchMove(e) {\n    if (!inGlobalTouch && inLocalTouch && shouldHandle(e)) {\n      var touch = getTouch(e);\n\n      var currentOffset = {pageX: touch.pageX, pageY: touch.pageY};\n\n      var differenceX = currentOffset.pageX - startOffset.pageX;\n      var differenceY = currentOffset.pageY - startOffset.pageY;\n\n      applyTouchMove(differenceX, differenceY);\n      startOffset = currentOffset;\n\n      var currentTime = (new Date()).getTime();\n\n      var timeGap = currentTime - startTime;\n      if (timeGap > 0) {\n        speed.x = differenceX / timeGap;\n        speed.y = differenceY / timeGap;\n        startTime = currentTime;\n      }\n\n      if (shouldPreventDefault(differenceX, differenceY)) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n  }\n  function touchEnd() {\n    if (!inGlobalTouch && inLocalTouch) {\n      inLocalTouch = false;\n\n      clearInterval(easingLoop);\n      easingLoop = setInterval(function () {\n        if (!instances.get(element)) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (Math.abs(speed.x) < 0.01 && Math.abs(speed.y) < 0.01) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        applyTouchMove(speed.x * 30, speed.y * 30);\n\n        speed.x *= 0.8;\n        speed.y *= 0.8;\n      }, 10);\n    }\n  }\n\n  if (supportsTouch) {\n    i.event.bind(window, 'touchstart', globalTouchStart);\n    i.event.bind(window, 'touchend', globalTouchEnd);\n    i.event.bind(element, 'touchstart', touchStart);\n    i.event.bind(element, 'touchmove', touchMove);\n    i.event.bind(element, 'touchend', touchEnd);\n  }\n\n  if (supportsIePointer) {\n    if (window.PointerEvent) {\n      i.event.bind(window, 'pointerdown', globalTouchStart);\n      i.event.bind(window, 'pointerup', globalTouchEnd);\n      i.event.bind(element, 'pointerdown', touchStart);\n      i.event.bind(element, 'pointermove', touchMove);\n      i.event.bind(element, 'pointerup', touchEnd);\n    } else if (window.MSPointerEvent) {\n      i.event.bind(window, 'MSPointerDown', globalTouchStart);\n      i.event.bind(window, 'MSPointerUp', globalTouchEnd);\n      i.event.bind(element, 'MSPointerDown', touchStart);\n      i.event.bind(element, 'MSPointerMove', touchMove);\n      i.event.bind(element, 'MSPointerUp', touchEnd);\n    }\n  }\n}\n\nmodule.exports = function (element, supportsTouch, supportsIePointer) {\n  var i = instances.get(element);\n  bindTouchHandler(element, i, supportsTouch, supportsIePointer);\n};\n//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar d = __webpack_require__(11)\n  , h = __webpack_require__(12)\n  , instances = __webpack_require__(14)\n  , updateGeometry = __webpack_require__(19)\n  , updateScroll = __webpack_require__(20);\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n\n  if (!i) {\n    return;\n  }\n\n  // Recalcuate negative scrollLeft adjustment\n  i.negativeScrollAdjustment = i.isNegativeScroll ? element.scrollWidth - element.clientWidth : 0;\n\n  // Recalculate rail margins\n  d.css(i.scrollbarXRail, 'display', 'block');\n  d.css(i.scrollbarYRail, 'display', 'block');\n  i.railXMarginWidth = h.toInt(d.css(i.scrollbarXRail, 'marginLeft')) + h.toInt(d.css(i.scrollbarXRail, 'marginRight'));\n  i.railYMarginHeight = h.toInt(d.css(i.scrollbarYRail, 'marginTop')) + h.toInt(d.css(i.scrollbarYRail, 'marginBottom'));\n\n  // Hide scrollbars not to affect scrollWidth and scrollHeight\n  d.css(i.scrollbarXRail, 'display', 'none');\n  d.css(i.scrollbarYRail, 'display', 'none');\n\n  updateGeometry(element);\n\n  // Update top/left scroll to trigger events\n  updateScroll(element, 'top', element.scrollTop);\n  updateScroll(element, 'left', element.scrollLeft);\n\n  d.css(i.scrollbarXRail, 'display', '');\n  d.css(i.scrollbarYRail, 'display', '');\n};\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vdXBkYXRlLmpzP2MzNjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBkID0gcmVxdWlyZSgnLi4vbGliL2RvbScpXG4gICwgaCA9IHJlcXVpcmUoJy4uL2xpYi9oZWxwZXInKVxuICAsIGluc3RhbmNlcyA9IHJlcXVpcmUoJy4vaW5zdGFuY2VzJylcbiAgLCB1cGRhdGVHZW9tZXRyeSA9IHJlcXVpcmUoJy4vdXBkYXRlLWdlb21ldHJ5JylcbiAgLCB1cGRhdGVTY3JvbGwgPSByZXF1aXJlKCcuL3VwZGF0ZS1zY3JvbGwnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICB2YXIgaSA9IGluc3RhbmNlcy5nZXQoZWxlbWVudCk7XG5cbiAgaWYgKCFpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gUmVjYWxjdWF0ZSBuZWdhdGl2ZSBzY3JvbGxMZWZ0IGFkanVzdG1lbnRcbiAgaS5uZWdhdGl2ZVNjcm9sbEFkanVzdG1lbnQgPSBpLmlzTmVnYXRpdmVTY3JvbGwgPyBlbGVtZW50LnNjcm9sbFdpZHRoIC0gZWxlbWVudC5jbGllbnRXaWR0aCA6IDA7XG5cbiAgLy8gUmVjYWxjdWxhdGUgcmFpbCBtYXJnaW5zXG4gIGQuY3NzKGkuc2Nyb2xsYmFyWFJhaWwsICdkaXNwbGF5JywgJ2Jsb2NrJyk7XG4gIGQuY3NzKGkuc2Nyb2xsYmFyWVJhaWwsICdkaXNwbGF5JywgJ2Jsb2NrJyk7XG4gIGkucmFpbFhNYXJnaW5XaWR0aCA9IGgudG9JbnQoZC5jc3MoaS5zY3JvbGxiYXJYUmFpbCwgJ21hcmdpbkxlZnQnKSkgKyBoLnRvSW50KGQuY3NzKGkuc2Nyb2xsYmFyWFJhaWwsICdtYXJnaW5SaWdodCcpKTtcbiAgaS5yYWlsWU1hcmdpbkhlaWdodCA9IGgudG9JbnQoZC5jc3MoaS5zY3JvbGxiYXJZUmFpbCwgJ21hcmdpblRvcCcpKSArIGgudG9JbnQoZC5jc3MoaS5zY3JvbGxiYXJZUmFpbCwgJ21hcmdpbkJvdHRvbScpKTtcblxuICAvLyBIaWRlIHNjcm9sbGJhcnMgbm90IHRvIGFmZmVjdCBzY3JvbGxXaWR0aCBhbmQgc2Nyb2xsSGVpZ2h0XG4gIGQuY3NzKGkuc2Nyb2xsYmFyWFJhaWwsICdkaXNwbGF5JywgJ25vbmUnKTtcbiAgZC5jc3MoaS5zY3JvbGxiYXJZUmFpbCwgJ2Rpc3BsYXknLCAnbm9uZScpO1xuXG4gIHVwZGF0ZUdlb21ldHJ5KGVsZW1lbnQpO1xuXG4gIC8vIFVwZGF0ZSB0b3AvbGVmdCBzY3JvbGwgdG8gdHJpZ2dlciBldmVudHNcbiAgdXBkYXRlU2Nyb2xsKGVsZW1lbnQsICd0b3AnLCBlbGVtZW50LnNjcm9sbFRvcCk7XG4gIHVwZGF0ZVNjcm9sbChlbGVtZW50LCAnbGVmdCcsIGVsZW1lbnQuc2Nyb2xsTGVmdCk7XG5cbiAgZC5jc3MoaS5zY3JvbGxiYXJYUmFpbCwgJ2Rpc3BsYXknLCAnJyk7XG4gIGQuY3NzKGkuc2Nyb2xsYmFyWVJhaWwsICdkaXNwbGF5JywgJycpO1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3BlcmZlY3Qtc2Nyb2xsYmFyL3NyYy9qcy9wbHVnaW4vdXBkYXRlLmpzXG4gKiogbW9kdWxlIGlkID0gMjhcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ggObfuscatorToggle = undefined;\n\nvar _jquery = __webpack_require__(2);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $body = (0, _jquery2.default)('body');\nvar $ggObfuscator = (0, _jquery2.default)('.gg-obfuscator');\n\nfunction ggObfuscatorToggle(action) {\n  if (action === 'hide') {\n    $ggObfuscator.ggToggle('hide');\n    $body.removeClass('is-obfuscated');\n  } else {\n    $ggObfuscator.ggToggle();\n    $body.toggleClass('is-obfuscated');\n  }\n}\n\nexports.ggObfuscatorToggle = ggObfuscatorToggle;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXYvanMvcGx1Z2lucy9nZy1vYmZ1c2NhdG9yLmpzP2U3OTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUVBLElBQU0sUUFBUSxzQkFBRSxNQUFGLENBQVI7QUFDTixJQUFNLGdCQUFnQixzQkFBRSxnQkFBRixDQUFoQjs7QUFFTixTQUFTLGtCQUFULENBQTZCLE1BQTdCLEVBQXFDO0FBQ25DLE1BQUksV0FBVyxNQUFYLEVBQW1CO0FBQ3JCLGtCQUFjLFFBQWQsQ0FBdUIsTUFBdkIsRUFEcUI7QUFFckIsVUFBTSxXQUFOLENBQWtCLGVBQWxCLEVBRnFCO0dBQXZCLE1BSUs7QUFDSCxrQkFBYyxRQUFkLEdBREc7QUFFSCxVQUFNLFdBQU4sQ0FBa0IsZUFBbEIsRUFGRztHQUpMO0NBREY7O1FBV1MiLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xyXG5cclxuY29uc3QgJGJvZHkgPSAkKCdib2R5Jyk7XHJcbmNvbnN0ICRnZ09iZnVzY2F0b3IgPSAkKCcuZ2ctb2JmdXNjYXRvcicpO1xyXG5cclxuZnVuY3Rpb24gZ2dPYmZ1c2NhdG9yVG9nZ2xlIChhY3Rpb24pIHtcclxuICBpZiAoYWN0aW9uID09PSAnaGlkZScpIHtcclxuICAgICRnZ09iZnVzY2F0b3IuZ2dUb2dnbGUoJ2hpZGUnKTtcclxuICAgICRib2R5LnJlbW92ZUNsYXNzKCdpcy1vYmZ1c2NhdGVkJyk7XHJcbiAgfVxyXG4gIGVsc2Uge1xyXG4gICAgJGdnT2JmdXNjYXRvci5nZ1RvZ2dsZSgpO1xyXG4gICAgJGJvZHkudG9nZ2xlQ2xhc3MoJ2lzLW9iZnVzY2F0ZWQnKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IGdnT2JmdXNjYXRvclRvZ2dsZSB9O1xyXG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL2Rldi9qcy9wbHVnaW5zL2dnLW9iZnVzY2F0b3IuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n\n  // Slide toggle the header on scroll\n\n  (0, _jquery2.default)(window).on('scroll', function () {\n    windowDidScroll = true;\n  });\n  setInterval(function () {\n    if (windowDidScroll) {\n      ggHeaderSlideToggle();\n      windowDidScroll = false;\n    }\n  }, 250);\n\n  function ggHeaderSlideToggle() {\n    var currScrollTop = (0, _jquery2.default)(window).scrollTop();\n    if (Math.abs(prevScrollTop - currScrollTop) <= scrollDelta) {\n      return;\n    }\n    if (currScrollTop > prevScrollTop && currScrollTop > ggHeaderHeight) {\n      $ggHeader.ggToggle('hide');\n      $ggSearchBar.ggToggle('hide');\n    } else if (currScrollTop + (0, _jquery2.default)(window).height() < (0, _jquery2.default)(document).height()) {\n      $ggHeader.ggToggle('show');\n    }\n    prevScrollTop = currScrollTop;\n  }\n\n  // Fix header disappearing forever if the header is tucked back\n  // and the window is resized tall enough to prevent vertical scrolling\n\n  (0, _jquery2.default)(window).on('resize', function () {\n    if (!$ggHeader.hasClass('is-visible')) {\n      $ggHeader.ggToggle('show');\n    }\n  });\n};\n\nvar _jquery = __webpack_require__(2);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $ggHeader = (0, _jquery2.default)('.gg-header');\nvar $ggSearchBar = (0, _jquery2.default)('.gg-searchbar');\n\nvar windowDidScroll = undefined;\nvar ggHeaderHeight = $ggHeader.outerHeight();\nvar prevScrollTop = (0, _jquery2.default)(window).scrollTop();\nvar scrollDelta = 25;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXYvanMvY29tcG9uZW50cy9nZy1oZWFkZXIuanM/MWIwMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBVWUsWUFBWTs7OztBQUl6Qix3QkFBRSxNQUFGLEVBQVUsRUFBVixDQUFhLFFBQWIsRUFBdUIsWUFBTTtBQUMzQixzQkFBa0IsSUFBbEIsQ0FEMkI7R0FBTixDQUF2QixDQUp5QjtBQU96QixjQUFZLFlBQU07QUFDaEIsUUFBSSxlQUFKLEVBQXFCO0FBQ25CLDRCQURtQjtBQUVuQix3QkFBa0IsS0FBbEIsQ0FGbUI7S0FBckI7R0FEVSxFQUtULEdBTEgsRUFQeUI7O0FBY3pCLFdBQVMsbUJBQVQsR0FBZ0M7QUFDOUIsUUFBSSxnQkFBZ0Isc0JBQUUsTUFBRixFQUFVLFNBQVYsRUFBaEIsQ0FEMEI7QUFFOUIsUUFBSSxLQUFLLEdBQUwsQ0FBUyxnQkFBZ0IsYUFBaEIsQ0FBVCxJQUEyQyxXQUEzQyxFQUF3RDtBQUMxRCxhQUQwRDtLQUE1RDtBQUdBLFFBQUksZ0JBQWdCLGFBQWhCLElBQWlDLGdCQUFnQixjQUFoQixFQUFnQztBQUNuRSxnQkFBVSxRQUFWLENBQW1CLE1BQW5CLEVBRG1FO0FBRW5FLG1CQUFhLFFBQWIsQ0FBc0IsTUFBdEIsRUFGbUU7S0FBckUsTUFJSyxJQUFJLGdCQUFnQixzQkFBRSxNQUFGLEVBQVUsTUFBVixFQUFoQixHQUFxQyxzQkFBRSxRQUFGLEVBQVksTUFBWixFQUFyQyxFQUEyRDtBQUNsRSxnQkFBVSxRQUFWLENBQW1CLE1BQW5CLEVBRGtFO0tBQS9EO0FBR0wsb0JBQWdCLGFBQWhCLENBWjhCO0dBQWhDOzs7OztBQWR5Qix1QkFnQ3pCLENBQUUsTUFBRixFQUFVLEVBQVYsQ0FBYSxRQUFiLEVBQXVCLFlBQU07QUFDM0IsUUFBSSxDQUFDLFVBQVUsUUFBVixDQUFtQixZQUFuQixDQUFELEVBQW1DO0FBQ3JDLGdCQUFVLFFBQVYsQ0FBbUIsTUFBbkIsRUFEcUM7S0FBdkM7R0FEcUIsQ0FBdkIsQ0FoQ3lCO0NBQVo7Ozs7Ozs7O0FBUmYsSUFBTSxZQUFZLHNCQUFFLFlBQUYsQ0FBWjtBQUNOLElBQU0sZUFBZSxzQkFBRSxlQUFGLENBQWY7O0FBRU4sSUFBSSwyQkFBSjtBQUNBLElBQUksaUJBQWlCLFVBQVUsV0FBVixFQUFqQjtBQUNKLElBQUksZ0JBQWdCLHNCQUFFLE1BQUYsRUFBVSxTQUFWLEVBQWhCO0FBQ0osSUFBSSxjQUFjLEVBQWQiLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xyXG5cclxuY29uc3QgJGdnSGVhZGVyID0gJCgnLmdnLWhlYWRlcicpO1xyXG5jb25zdCAkZ2dTZWFyY2hCYXIgPSAkKCcuZ2ctc2VhcmNoYmFyJyk7XHJcblxyXG5sZXQgd2luZG93RGlkU2Nyb2xsO1xyXG5sZXQgZ2dIZWFkZXJIZWlnaHQgPSAkZ2dIZWFkZXIub3V0ZXJIZWlnaHQoKTtcclxubGV0IHByZXZTY3JvbGxUb3AgPSAkKHdpbmRvdykuc2Nyb2xsVG9wKCk7XHJcbmxldCBzY3JvbGxEZWx0YSA9IDI1O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKCkge1xyXG5cclxuICAvLyBTbGlkZSB0b2dnbGUgdGhlIGhlYWRlciBvbiBzY3JvbGxcclxuXHJcbiAgJCh3aW5kb3cpLm9uKCdzY3JvbGwnLCAoKSA9PiB7XHJcbiAgICB3aW5kb3dEaWRTY3JvbGwgPSB0cnVlO1xyXG4gIH0pO1xyXG4gIHNldEludGVydmFsKCgpID0+IHtcclxuICAgIGlmICh3aW5kb3dEaWRTY3JvbGwpIHtcclxuICAgICAgZ2dIZWFkZXJTbGlkZVRvZ2dsZSgpO1xyXG4gICAgICB3aW5kb3dEaWRTY3JvbGwgPSBmYWxzZTtcclxuICAgIH1cclxuICB9LCAyNTApO1xyXG5cclxuICBmdW5jdGlvbiBnZ0hlYWRlclNsaWRlVG9nZ2xlICgpIHtcclxuICAgIGxldCBjdXJyU2Nyb2xsVG9wID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xyXG4gICAgaWYgKE1hdGguYWJzKHByZXZTY3JvbGxUb3AgLSBjdXJyU2Nyb2xsVG9wKSA8PSBzY3JvbGxEZWx0YSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoY3VyclNjcm9sbFRvcCA+IHByZXZTY3JvbGxUb3AgJiYgY3VyclNjcm9sbFRvcCA+IGdnSGVhZGVySGVpZ2h0KSB7XHJcbiAgICAgICRnZ0hlYWRlci5nZ1RvZ2dsZSgnaGlkZScpO1xyXG4gICAgICAkZ2dTZWFyY2hCYXIuZ2dUb2dnbGUoJ2hpZGUnKTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKGN1cnJTY3JvbGxUb3AgKyAkKHdpbmRvdykuaGVpZ2h0KCkgPCAkKGRvY3VtZW50KS5oZWlnaHQoKSkge1xyXG4gICAgICAkZ2dIZWFkZXIuZ2dUb2dnbGUoJ3Nob3cnKTtcclxuICAgIH1cclxuICAgIHByZXZTY3JvbGxUb3AgPSBjdXJyU2Nyb2xsVG9wO1xyXG4gIH1cclxuXHJcbiAgLy8gRml4IGhlYWRlciBkaXNhcHBlYXJpbmcgZm9yZXZlciBpZiB0aGUgaGVhZGVyIGlzIHR1Y2tlZCBiYWNrXHJcbiAgLy8gYW5kIHRoZSB3aW5kb3cgaXMgcmVzaXplZCB0YWxsIGVub3VnaCB0byBwcmV2ZW50IHZlcnRpY2FsIHNjcm9sbGluZ1xyXG5cclxuICAkKHdpbmRvdykub24oJ3Jlc2l6ZScsICgpID0+IHtcclxuICAgIGlmICghJGdnSGVhZGVyLmhhc0NsYXNzKCdpcy12aXNpYmxlJykpIHtcclxuICAgICAgJGdnSGVhZGVyLmdnVG9nZ2xlKCdzaG93Jyk7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG59XHJcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vZGV2L2pzL2NvbXBvbmVudHMvZ2ctaGVhZGVyLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n\n  // Toggle between appbar and searchbar\n\n  $ggSearchBarToggle.on('click', function (event) {\n    event.preventDefault();\n    $ggSearchBar.ggToggle();\n    setTimeout(function () {\n      $ggSearchBarSearch.focus();\n    }, 150);\n  });\n\n  // Toggle the searchbar cancel button\n\n  $ggSearchBarSearch.on('keyup', function () {\n    if ($ggSearchBarSearch.val()) {\n      $ggSearchBarCancel.ggToggle('show');\n    } else {\n      $ggSearchBarCancel.ggToggle('hide');\n    }\n  });\n\n  $ggSearchBarCancel.on('click', function (event) {\n    event.preventDefault();\n    $ggSearchBarSearch.val('');\n    $ggSearchBarCancel.ggToggle('hide');\n    $ggSearchBarSearch.focus();\n  });\n\n  // Close the appbar menu on click-outside\n  (0, _jquery2.default)(document).on('click', function (event) {\n    $ggSearchBar.ggCloseOutside([$ggSearchBarToggle], event);\n  });\n};\n\nvar _jquery = __webpack_require__(2);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $ggSearchBar = (0, _jquery2.default)('.gg-searchbar');\nvar $ggSearchBarToggle = (0, _jquery2.default)('.gg-searchbar-toggle');\nvar $ggSearchBarSearch = (0, _jquery2.default)('.gg-searchbar input');\nvar $ggSearchBarCancel = (0, _jquery2.default)('.gg-searchbar-cancel');//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXYvanMvY29tcG9uZW50cy9nZy1zZWFyY2hiYXIuanM/N2VlMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBT2UsWUFBWTs7OztBQUl6QixxQkFBbUIsRUFBbkIsQ0FBc0IsT0FBdEIsRUFBK0IsVUFBQyxLQUFELEVBQVc7QUFDeEMsVUFBTSxjQUFOLEdBRHdDO0FBRXhDLGlCQUFhLFFBQWIsR0FGd0M7QUFHeEMsZUFBVyxZQUFZO0FBQ3JCLHlCQUFtQixLQUFuQixHQURxQjtLQUFaLEVBRVIsR0FGSCxFQUh3QztHQUFYLENBQS9COzs7O0FBSnlCLG9CQWlCekIsQ0FBbUIsRUFBbkIsQ0FBc0IsT0FBdEIsRUFBK0IsWUFBTTtBQUNuQyxRQUFJLG1CQUFtQixHQUFuQixFQUFKLEVBQThCO0FBQzVCLHlCQUFtQixRQUFuQixDQUE0QixNQUE1QixFQUQ0QjtLQUE5QixNQUdLO0FBQ0gseUJBQW1CLFFBQW5CLENBQTRCLE1BQTVCLEVBREc7S0FITDtHQUQ2QixDQUEvQixDQWpCeUI7O0FBMEJ6QixxQkFBbUIsRUFBbkIsQ0FBc0IsT0FBdEIsRUFBK0IsVUFBQyxLQUFELEVBQVc7QUFDeEMsVUFBTSxjQUFOLEdBRHdDO0FBRXhDLHVCQUFtQixHQUFuQixDQUF1QixFQUF2QixFQUZ3QztBQUd4Qyx1QkFBbUIsUUFBbkIsQ0FBNEIsTUFBNUIsRUFId0M7QUFJeEMsdUJBQW1CLEtBQW5CLEdBSndDO0dBQVgsQ0FBL0I7OztBQTFCeUIsdUJBbUN6QixDQUFFLFFBQUYsRUFBWSxFQUFaLENBQWUsT0FBZixFQUF3QixVQUFDLEtBQUQsRUFBVztBQUNqQyxpQkFBYSxjQUFiLENBQTRCLENBQUMsa0JBQUQsQ0FBNUIsRUFBa0QsS0FBbEQsRUFEaUM7R0FBWCxDQUF4QixDQW5DeUI7Q0FBWjs7Ozs7Ozs7QUFMZixJQUFNLGVBQWUsc0JBQUUsZUFBRixDQUFmO0FBQ04sSUFBTSxxQkFBcUIsc0JBQUUsc0JBQUYsQ0FBckI7QUFDTixJQUFNLHFCQUFxQixzQkFBRSxxQkFBRixDQUFyQjtBQUNOLElBQU0scUJBQXFCLHNCQUFFLHNCQUFGLENBQXJCIiwiZmlsZSI6IjMxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcclxuXHJcbmNvbnN0ICRnZ1NlYXJjaEJhciA9ICQoJy5nZy1zZWFyY2hiYXInKTtcclxuY29uc3QgJGdnU2VhcmNoQmFyVG9nZ2xlID0gJCgnLmdnLXNlYXJjaGJhci10b2dnbGUnKTtcclxuY29uc3QgJGdnU2VhcmNoQmFyU2VhcmNoID0gJCgnLmdnLXNlYXJjaGJhciBpbnB1dCcpO1xyXG5jb25zdCAkZ2dTZWFyY2hCYXJDYW5jZWwgPSAkKCcuZ2ctc2VhcmNoYmFyLWNhbmNlbCcpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKCkge1xyXG5cclxuICAvLyBUb2dnbGUgYmV0d2VlbiBhcHBiYXIgYW5kIHNlYXJjaGJhclxyXG5cclxuICAkZ2dTZWFyY2hCYXJUb2dnbGUub24oJ2NsaWNrJywgKGV2ZW50KSA9PiB7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgJGdnU2VhcmNoQmFyLmdnVG9nZ2xlKCk7XHJcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgJGdnU2VhcmNoQmFyU2VhcmNoLmZvY3VzKCk7XHJcbiAgICB9LCAxNTApO1xyXG4gIH0pO1xyXG5cclxuXHJcblxyXG5cclxuICAvLyBUb2dnbGUgdGhlIHNlYXJjaGJhciBjYW5jZWwgYnV0dG9uXHJcblxyXG4gICRnZ1NlYXJjaEJhclNlYXJjaC5vbigna2V5dXAnLCAoKSA9PiB7XHJcbiAgICBpZiAoJGdnU2VhcmNoQmFyU2VhcmNoLnZhbCgpKSB7XHJcbiAgICAgICRnZ1NlYXJjaEJhckNhbmNlbC5nZ1RvZ2dsZSgnc2hvdycpO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICRnZ1NlYXJjaEJhckNhbmNlbC5nZ1RvZ2dsZSgnaGlkZScpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICAkZ2dTZWFyY2hCYXJDYW5jZWwub24oJ2NsaWNrJywgKGV2ZW50KSA9PiB7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgJGdnU2VhcmNoQmFyU2VhcmNoLnZhbCgnJyk7XHJcbiAgICAkZ2dTZWFyY2hCYXJDYW5jZWwuZ2dUb2dnbGUoJ2hpZGUnKTtcclxuICAgICRnZ1NlYXJjaEJhclNlYXJjaC5mb2N1cygpO1xyXG4gIH0pO1xyXG5cclxuXHJcbiAgLy8gQ2xvc2UgdGhlIGFwcGJhciBtZW51IG9uIGNsaWNrLW91dHNpZGVcclxuICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAoZXZlbnQpID0+IHtcclxuICAgICRnZ1NlYXJjaEJhci5nZ0Nsb3NlT3V0c2lkZShbJGdnU2VhcmNoQmFyVG9nZ2xlXSwgZXZlbnQpO1xyXG4gIH0pO1xyXG5cclxufVxyXG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL2Rldi9qcy9jb21wb25lbnRzL2dnLXNlYXJjaGJhci5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n\n  if ($masonryContainer.length) {\n    (function () {\n      var cardsLayout = undefined;\n      setTimeout(function () {\n        cardsLayout = new _masonryLayout2.default(document.querySelector(ggCardsClass), {\n          itemSelector: masonryBlockClass,\n          gutter: 16,\n          percentPosition: true\n        });\n        cardsLayout.layout();\n        (0, _jquery2.default)(masonryBlockClass).ggToggle('show');\n      }, 200);\n\n      // WordPress Jetpack Infinite Scroll\n      var infiniteCount = 0;\n      $body.on('post-load', function () {\n        infiniteCount++;\n        var $infiniteContainer = (0, _jquery2.default)('#infinite-view-' + infiniteCount);\n        var $infiniteBlocks = $infiniteContainer.find(ggCardsClass);\n        cardsLayout.appended($infiniteBlocks);\n        (0, _jquery2.default)(masonryBlockClass).ggToggle('show');\n      });\n      // CHECK ONCE STAGED!!\n    })();\n  }\n\n  $ggCardToggleAddon.on('click', function (event) {\n    event.preventDefault();\n    var $toggle = (0, _jquery2.default)(event.currentTarget);\n    var $container = $toggle.closest(ggCardClass);\n    var $target = (0, _jquery2.default)(ggCardAddonClass + '[data-addon=\"' + $toggle.data('addon') + '\"]');\n    var innerHeight = 0;\n    $target.children().each(function (index, $item) {\n      innerHeight += (0, _jquery2.default)($item).outerHeight(true);\n    });\n\n    $toggle.ggToggle();\n    $target.ggToggle();\n\n    if ($target.hasClass('is-visible')) {\n      $container.css({ zIndex: 1 });\n      $target.css({ maxHeight: innerHeight });\n    } else {\n      setTimeout(function () {\n        $container.css({ zIndex: 'auto' });\n      }, 200);\n      $target.css({ maxHeight: 0 });\n    }\n  });\n};\n\nvar _jquery = __webpack_require__(2);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _masonryLayout = __webpack_require__(33);\n\nvar _masonryLayout2 = _interopRequireDefault(_masonryLayout);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ggCardsClass = '.gg-cards';\nvar ggCardClass = '.gg-card';\nvar $ggCardToggleAddon = (0, _jquery2.default)('.gg-card-toggle-addon');\nvar ggCardAddonClass = '.gg-card-addon';\n\nvar $body = (0, _jquery2.default)(document.body);\nvar $masonryContainer = (0, _jquery2.default)('#masonry');\nvar masonryBlockClass = '#masonry .gg-card';//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXYvanMvY29tcG9uZW50cy9nZy1jYXJkcy5qcz9mMzA5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztrQkFZZSxZQUFZOztBQUV6QixNQUFJLGtCQUFrQixNQUFsQixFQUEwQjs7QUFDNUIsVUFBSSx1QkFBSjtBQUNBLGlCQUFXLFlBQU07QUFDZixzQkFBYyw0QkFBWSxTQUFTLGFBQVQsQ0FBdUIsWUFBdkIsQ0FBWixFQUFrRDtBQUM5RCx3QkFBZSxpQkFBZjtBQUNBLGtCQUFTLEVBQVQ7QUFDQSwyQkFBa0IsSUFBbEI7U0FIWSxDQUFkLENBRGU7QUFNZixvQkFBWSxNQUFaLEdBTmU7QUFPZiw4QkFBRSxpQkFBRixFQUFxQixRQUFyQixDQUE4QixNQUE5QixFQVBlO09BQU4sRUFRUixHQVJIOzs7QUFXQSxVQUFJLGdCQUFnQixDQUFoQjtBQUNKLFlBQU0sRUFBTixDQUFTLFdBQVQsRUFBc0IsWUFBTTtBQUMxQix3QkFEMEI7QUFFMUIsWUFBSSxxQkFBcUIsc0JBQUUsb0JBQW9CLGFBQXBCLENBQXZCLENBRnNCO0FBRzFCLFlBQUksa0JBQWtCLG1CQUFtQixJQUFuQixDQUF3QixZQUF4QixDQUFsQixDQUhzQjtBQUkxQixvQkFBWSxRQUFaLENBQXFCLGVBQXJCLEVBSjBCO0FBSzFCLDhCQUFFLGlCQUFGLEVBQXFCLFFBQXJCLENBQThCLE1BQTlCLEVBTDBCO09BQU4sQ0FBdEI7O1NBZDRCO0dBQTlCOztBQXdCQSxxQkFBbUIsRUFBbkIsQ0FBc0IsT0FBdEIsRUFBK0IsVUFBQyxLQUFELEVBQVc7QUFDeEMsVUFBTSxjQUFOLEdBRHdDO0FBRXhDLFFBQUksVUFBVSxzQkFBRSxNQUFNLGFBQU4sQ0FBWixDQUZvQztBQUd4QyxRQUFJLGFBQWEsUUFBUSxPQUFSLENBQWdCLFdBQWhCLENBQWIsQ0FIb0M7QUFJeEMsUUFBSSxVQUFVLHNCQUFLLHFDQUFnQyxRQUFRLElBQVIsQ0FBYSxPQUFiLFFBQXJDLENBQVYsQ0FKb0M7QUFLeEMsUUFBSSxjQUFjLENBQWQsQ0FMb0M7QUFNeEMsWUFBUSxRQUFSLEdBQW1CLElBQW5CLENBQXdCLFVBQUMsS0FBRCxFQUFRLEtBQVIsRUFBa0I7QUFDeEMscUJBQWUsc0JBQUUsS0FBRixFQUFTLFdBQVQsQ0FBcUIsSUFBckIsQ0FBZixDQUR3QztLQUFsQixDQUF4QixDQU53Qzs7QUFVeEMsWUFBUSxRQUFSLEdBVndDO0FBV3hDLFlBQVEsUUFBUixHQVh3Qzs7QUFheEMsUUFBSSxRQUFRLFFBQVIsQ0FBaUIsWUFBakIsQ0FBSixFQUFvQztBQUNsQyxpQkFBVyxHQUFYLENBQWUsRUFBRSxRQUFTLENBQVQsRUFBakIsRUFEa0M7QUFFbEMsY0FBUSxHQUFSLENBQVksRUFBRSxXQUFZLFdBQVosRUFBZCxFQUZrQztLQUFwQyxNQUlLO0FBQ0gsaUJBQVcsWUFBTTtBQUNmLG1CQUFXLEdBQVgsQ0FBZSxFQUFFLFFBQVMsTUFBVCxFQUFqQixFQURlO09BQU4sRUFFUixHQUZILEVBREc7QUFJSCxjQUFRLEdBQVIsQ0FBWSxFQUFFLFdBQVksQ0FBWixFQUFkLEVBSkc7S0FKTDtHQWI2QixDQUEvQixDQTFCeUI7Q0FBWjs7Ozs7Ozs7Ozs7O0FBVGYsSUFBTSxlQUFlLFdBQWY7QUFDTixJQUFNLGNBQWMsVUFBZDtBQUNOLElBQU0scUJBQXFCLHNCQUFFLHVCQUFGLENBQXJCO0FBQ04sSUFBTSxtQkFBbUIsZ0JBQW5COztBQUVOLElBQU0sUUFBUSxzQkFBRSxTQUFTLElBQVQsQ0FBVjtBQUNOLElBQU0sb0JBQW9CLHNCQUFFLFVBQUYsQ0FBcEI7QUFDTixJQUFNLG9CQUFvQixtQkFBcEIiLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xyXG5pbXBvcnQgTWFzb25yeSBmcm9tICdtYXNvbnJ5LWxheW91dCc7XHJcblxyXG5jb25zdCBnZ0NhcmRzQ2xhc3MgPSAnLmdnLWNhcmRzJztcclxuY29uc3QgZ2dDYXJkQ2xhc3MgPSAnLmdnLWNhcmQnO1xyXG5jb25zdCAkZ2dDYXJkVG9nZ2xlQWRkb24gPSAkKCcuZ2ctY2FyZC10b2dnbGUtYWRkb24nKTtcclxuY29uc3QgZ2dDYXJkQWRkb25DbGFzcyA9ICcuZ2ctY2FyZC1hZGRvbic7XHJcblxyXG5jb25zdCAkYm9keSA9ICQoZG9jdW1lbnQuYm9keSk7XHJcbmNvbnN0ICRtYXNvbnJ5Q29udGFpbmVyID0gJCgnI21hc29ucnknKTtcclxuY29uc3QgbWFzb25yeUJsb2NrQ2xhc3MgPSAnI21hc29ucnkgLmdnLWNhcmQnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKCkge1xyXG5cclxuICBpZiAoJG1hc29ucnlDb250YWluZXIubGVuZ3RoKSB7XHJcbiAgICBsZXQgY2FyZHNMYXlvdXQ7XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgY2FyZHNMYXlvdXQgPSBuZXcgTWFzb25yeShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGdnQ2FyZHNDbGFzcyksIHtcclxuICAgICAgICBpdGVtU2VsZWN0b3IgOiBtYXNvbnJ5QmxvY2tDbGFzcyxcclxuICAgICAgICBndXR0ZXIgOiAxNixcclxuICAgICAgICBwZXJjZW50UG9zaXRpb24gOiB0cnVlXHJcbiAgICAgIH0pO1xyXG4gICAgICBjYXJkc0xheW91dC5sYXlvdXQoKTtcclxuICAgICAgJChtYXNvbnJ5QmxvY2tDbGFzcykuZ2dUb2dnbGUoJ3Nob3cnKTtcclxuICAgIH0sIDIwMCk7XHJcblxyXG4gICAgLy8gV29yZFByZXNzIEpldHBhY2sgSW5maW5pdGUgU2Nyb2xsXHJcbiAgICBsZXQgaW5maW5pdGVDb3VudCA9IDA7XHJcbiAgICAkYm9keS5vbigncG9zdC1sb2FkJywgKCkgPT4ge1xyXG4gICAgICBpbmZpbml0ZUNvdW50Kys7XHJcbiAgICAgIGxldCAkaW5maW5pdGVDb250YWluZXIgPSAkKCcjaW5maW5pdGUtdmlldy0nICsgaW5maW5pdGVDb3VudCk7XHJcbiAgICAgIGxldCAkaW5maW5pdGVCbG9ja3MgPSAkaW5maW5pdGVDb250YWluZXIuZmluZChnZ0NhcmRzQ2xhc3MpO1xyXG4gICAgICBjYXJkc0xheW91dC5hcHBlbmRlZCgkaW5maW5pdGVCbG9ja3MpO1xyXG4gICAgICAkKG1hc29ucnlCbG9ja0NsYXNzKS5nZ1RvZ2dsZSgnc2hvdycpO1xyXG4gICAgfSk7XHJcbiAgICAvLyBDSEVDSyBPTkNFIFNUQUdFRCEhXHJcbiAgfVxyXG5cclxuICAkZ2dDYXJkVG9nZ2xlQWRkb24ub24oJ2NsaWNrJywgKGV2ZW50KSA9PiB7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgbGV0ICR0b2dnbGUgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xyXG4gICAgbGV0ICRjb250YWluZXIgPSAkdG9nZ2xlLmNsb3Nlc3QoZ2dDYXJkQ2xhc3MpO1xyXG4gICAgbGV0ICR0YXJnZXQgPSAkKGAke2dnQ2FyZEFkZG9uQ2xhc3N9W2RhdGEtYWRkb249XCIkeyR0b2dnbGUuZGF0YSgnYWRkb24nKX1cIl1gKTtcclxuICAgIGxldCBpbm5lckhlaWdodCA9IDA7XHJcbiAgICAkdGFyZ2V0LmNoaWxkcmVuKCkuZWFjaCgoaW5kZXgsICRpdGVtKSA9PiB7XHJcbiAgICAgIGlubmVySGVpZ2h0ICs9ICQoJGl0ZW0pLm91dGVySGVpZ2h0KHRydWUpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJHRvZ2dsZS5nZ1RvZ2dsZSgpO1xyXG4gICAgJHRhcmdldC5nZ1RvZ2dsZSgpO1xyXG5cclxuICAgIGlmICgkdGFyZ2V0Lmhhc0NsYXNzKCdpcy12aXNpYmxlJykpIHtcclxuICAgICAgJGNvbnRhaW5lci5jc3MoeyB6SW5kZXggOiAxIH0pO1xyXG4gICAgICAkdGFyZ2V0LmNzcyh7IG1heEhlaWdodCA6IGlubmVySGVpZ2h0IH0pO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICRjb250YWluZXIuY3NzKHsgekluZGV4IDogJ2F1dG8nIH0pO1xyXG4gICAgICB9LCAyMDApO1xyXG4gICAgICAkdGFyZ2V0LmNzcyh7IG1heEhlaWdodCA6IDAgfSk7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG59XHJcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vZGV2L2pzL2NvbXBvbmVudHMvZ2ctY2FyZHMuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Masonry v4.0.0\n * Cascading grid layout library\n * http://masonry.desandro.com\n * MIT License\n * by David DeSandro\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n        __webpack_require__(34),\n        __webpack_require__(36)\n      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('outlayer'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Masonry = factory(\n      window.Outlayer,\n      window.getSize\n    );\n  }\n\n}( window, function factory( Outlayer, getSize ) {\n\n'use strict';\n\n// -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Masonry = Outlayer.create('masonry');\n  // isFitWidth -> fitWidth\n  Masonry.compatOptions.fitWidth = 'isFitWidth';\n\n  Masonry.prototype._resetLayout = function() {\n    this.getSize();\n    this._getMeasurement( 'columnWidth', 'outerWidth' );\n    this._getMeasurement( 'gutter', 'outerWidth' );\n    this.measureColumns();\n\n    // reset column Y\n    this.colYs = [];\n    for ( var i=0; i < this.cols; i++ ) {\n      this.colYs.push( 0 );\n    }\n\n    this.maxY = 0;\n  };\n\n  Masonry.prototype.measureColumns = function() {\n    this.getContainerWidth();\n    // if columnWidth is 0, default to outerWidth of first item\n    if ( !this.columnWidth ) {\n      var firstItem = this.items[0];\n      var firstItemElem = firstItem && firstItem.element;\n      // columnWidth fall back to item of first element\n      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||\n        // if first elem has no width, default to size of container\n        this.containerWidth;\n    }\n\n    var columnWidth = this.columnWidth += this.gutter;\n\n    // calculate columns\n    var containerWidth = this.containerWidth + this.gutter;\n    var cols = containerWidth / columnWidth;\n    // fix rounding errors, typically with gutters\n    var excess = columnWidth - containerWidth % columnWidth;\n    // if overshoot is less than a pixel, round up, otherwise floor it\n    var mathMethod = excess && excess < 1 ? 'round' : 'floor';\n    cols = Math[ mathMethod ]( cols );\n    this.cols = Math.max( cols, 1 );\n  };\n\n  Masonry.prototype.getContainerWidth = function() {\n    // container is parent if fit width\n    var isFitWidth = this._getOption('fitWidth');\n    var container = isFitWidth ? this.element.parentNode : this.element;\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var size = getSize( container );\n    this.containerWidth = size && size.innerWidth;\n  };\n\n  Masonry.prototype._getItemLayoutPosition = function( item ) {\n    item.getSize();\n    // how many columns does this brick span\n    var remainder = item.size.outerWidth % this.columnWidth;\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n    // round if off by 1 pixel, otherwise use ceil\n    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );\n    colSpan = Math.min( colSpan, this.cols );\n\n    var colGroup = this._getColGroup( colSpan );\n    // get the minimum Y value from the columns\n    var minimumY = Math.min.apply( Math, colGroup );\n    var shortColIndex = colGroup.indexOf( minimumY );\n\n    // position the brick\n    var position = {\n      x: this.columnWidth * shortColIndex,\n      y: minimumY\n    };\n\n    // apply setHeight to necessary columns\n    var setHeight = minimumY + item.size.outerHeight;\n    var setSpan = this.cols + 1 - colGroup.length;\n    for ( var i = 0; i < setSpan; i++ ) {\n      this.colYs[ shortColIndex + i ] = setHeight;\n    }\n\n    return position;\n  };\n\n  /**\n   * @param {Number} colSpan - number of columns the element spans\n   * @returns {Array} colGroup\n   */\n  Masonry.prototype._getColGroup = function( colSpan ) {\n    if ( colSpan < 2 ) {\n      // if brick spans only one column, use all the column Ys\n      return this.colYs;\n    }\n\n    var colGroup = [];\n    // how many different places could this brick fit horizontally\n    var groupCount = this.cols + 1 - colSpan;\n    // for each group potential horizontal position\n    for ( var i = 0; i < groupCount; i++ ) {\n      // make an array of colY values for that one group\n      var groupColYs = this.colYs.slice( i, i + colSpan );\n      // and get the max value of the array\n      colGroup[i] = Math.max.apply( Math, groupColYs );\n    }\n    return colGroup;\n  };\n\n  Masonry.prototype._manageStamp = function( stamp ) {\n    var stampSize = getSize( stamp );\n    var offset = this._getElementOffset( stamp );\n    // get the columns that this stamp affects\n    var isOriginLeft = this._getOption('originLeft');\n    var firstX = isOriginLeft ? offset.left : offset.right;\n    var lastX = firstX + stampSize.outerWidth;\n    var firstCol = Math.floor( firstX / this.columnWidth );\n    firstCol = Math.max( 0, firstCol );\n    var lastCol = Math.floor( lastX / this.columnWidth );\n    // lastCol should not go over if multiple of columnWidth #425\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\n    lastCol = Math.min( this.cols - 1, lastCol );\n    // set colYs to bottom of the stamp\n\n    var isOriginTop = this._getOption('originTop');\n    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +\n      stampSize.outerHeight;\n    for ( var i = firstCol; i <= lastCol; i++ ) {\n      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );\n    }\n  };\n\n  Masonry.prototype._getContainerSize = function() {\n    this.maxY = Math.max.apply( Math, this.colYs );\n    var size = {\n      height: this.maxY\n    };\n\n    if ( this._getOption('fitWidth') ) {\n      size.width = this._getContainerFitWidth();\n    }\n\n    return size;\n  };\n\n  Masonry.prototype._getContainerFitWidth = function() {\n    var unusedCols = 0;\n    // count unused columns\n    var i = this.cols;\n    while ( --i ) {\n      if ( this.colYs[i] !== 0 ) {\n        break;\n      }\n      unusedCols++;\n    }\n    // fit container to columns that have been used\n    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;\n  };\n\n  Masonry.prototype.needsResizeLayout = function() {\n    var previousWidth = this.containerWidth;\n    this.getContainerWidth();\n    return previousWidth != this.containerWidth;\n  };\n\n  return Masonry;\n\n}));\n//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Outlayer v2.0.0\n * the brains and guts of a layout library\n * MIT license\n */\n\n( function( window, factory ) {\n  'use strict';\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( true ) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n        __webpack_require__(35),\n        __webpack_require__(36),\n        __webpack_require__(37),\n        __webpack_require__(39)\n      ], __WEBPACK_AMD_DEFINE_RESULT__ = function( EvEmitter, getSize, utils, Item ) {\n        return factory( window, EvEmitter, getSize, utils, Item);\n      }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      window,\n      require('ev-emitter'),\n      require('get-size'),\n      require('fizzy-ui-utils'),\n      require('./item')\n    );\n  } else {\n    // browser global\n    window.Outlayer = factory(\n      window,\n      window.EvEmitter,\n      window.getSize,\n      window.fizzyUIUtils,\n      window.Outlayer.Item\n    );\n  }\n\n}( window, function factory( window, EvEmitter, getSize, utils, Item ) {\n'use strict';\n\n// ----- vars ----- //\n\nvar console = window.console;\nvar jQuery = window.jQuery;\nvar noop = function() {};\n\n// -------------------------- Outlayer -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Outlayer intances\nvar instances = {};\n\n\n/**\n * @param {Element, String} element\n * @param {Object} options\n * @constructor\n */\nfunction Outlayer( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for ' + this.constructor.namespace +\n        ': ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // add id for Outlayer.getFromElement\n  var id = ++GUID;\n  this.element.outlayerGUID = id; // expando\n  instances[ id ] = this; // associate via id\n\n  // kick it off\n  this._create();\n\n  var isInitLayout = this._getOption('initLayout');\n  if ( isInitLayout ) {\n    this.layout();\n  }\n}\n\n// settings are for internal use only\nOutlayer.namespace = 'outlayer';\nOutlayer.Item = Item;\n\n// default options\nOutlayer.defaults = {\n  containerStyle: {\n    position: 'relative'\n  },\n  initLayout: true,\n  originLeft: true,\n  originTop: true,\n  resize: true,\n  resizeContainer: true,\n  // item options\n  transitionDuration: '0.4s',\n  hiddenStyle: {\n    opacity: 0,\n    transform: 'scale(0.001)'\n  },\n  visibleStyle: {\n    opacity: 1,\n    transform: 'scale(1)'\n  }\n};\n\nvar proto = Outlayer.prototype;\n// inherit EvEmitter\nutils.extend( proto, EvEmitter.prototype );\n\n/**\n * set options\n * @param {Object} opts\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\n/**\n * get backwards compatible option value, check old name\n */\nproto._getOption = function( option ) {\n  var oldOption = this.constructor.compatOptions[ option ];\n  return oldOption && this.options[ oldOption ] !== undefined ?\n    this.options[ oldOption ] : this.options[ option ];\n};\n\nOutlayer.compatOptions = {\n  // currentName: oldName\n  initLayout: 'isInitLayout',\n  horizontal: 'isHorizontal',\n  layoutInstant: 'isLayoutInstant',\n  originLeft: 'isOriginLeft',\n  originTop: 'isOriginTop',\n  resize: 'isResizeBound',\n  resizeContainer: 'isResizingContainer'\n};\n\nproto._create = function() {\n  // get items from children\n  this.reloadItems();\n  // elements that affect layout, but are not laid out\n  this.stamps = [];\n  this.stamp( this.options.stamp );\n  // set container style\n  utils.extend( this.element.style, this.options.containerStyle );\n\n  // bind resize method\n  var canBindResize = this._getOption('resize');\n  if ( canBindResize ) {\n    this.bindResize();\n  }\n};\n\n// goes through all children again and gets bricks in proper order\nproto.reloadItems = function() {\n  // collection of item elements\n  this.items = this._itemize( this.element.children );\n};\n\n\n/**\n * turn elements into Outlayer.Items to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - collection of new Outlayer Items\n */\nproto._itemize = function( elems ) {\n\n  var itemElems = this._filterFindItemElements( elems );\n  var Item = this.constructor.Item;\n\n  // create new Outlayer Items for collection\n  var items = [];\n  for ( var i=0; i < itemElems.length; i++ ) {\n    var elem = itemElems[i];\n    var item = new Item( elem, this );\n    items.push( item );\n  }\n\n  return items;\n};\n\n/**\n * get item elements to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - item elements\n */\nproto._filterFindItemElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.itemSelector );\n};\n\n/**\n * getter method for getting item elements\n * @returns {Array} elems - collection of item elements\n */\nproto.getItemElements = function() {\n  return this.items.map( function( item ) {\n    return item.element;\n  });\n};\n\n// ----- init & layout ----- //\n\n/**\n * lays out all items\n */\nproto.layout = function() {\n  this._resetLayout();\n  this._manageStamps();\n\n  // don't animate first layout\n  var layoutInstant = this._getOption('layoutInstant');\n  var isInstant = layoutInstant !== undefined ?\n    layoutInstant : !this._isLayoutInited;\n  this.layoutItems( this.items, isInstant );\n\n  // flag for initalized\n  this._isLayoutInited = true;\n};\n\n// _init is alias for layout\nproto._init = proto.layout;\n\n/**\n * logic before any new layout\n */\nproto._resetLayout = function() {\n  this.getSize();\n};\n\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * get measurement from option, for columnWidth, rowHeight, gutter\n * if option is String -> get element from selector string, & get size of element\n * if option is Element -> get size of element\n * else use option as a number\n *\n * @param {String} measurement\n * @param {String} size - width or height\n * @private\n */\nproto._getMeasurement = function( measurement, size ) {\n  var option = this.options[ measurement ];\n  var elem;\n  if ( !option ) {\n    // default to 0\n    this[ measurement ] = 0;\n  } else {\n    // use option as an element\n    if ( typeof option == 'string' ) {\n      elem = this.element.querySelector( option );\n    } else if ( option instanceof HTMLElement ) {\n      elem = option;\n    }\n    // use size of element, if element\n    this[ measurement ] = elem ? getSize( elem )[ size ] : option;\n  }\n};\n\n/**\n * layout a collection of item elements\n * @api public\n */\nproto.layoutItems = function( items, isInstant ) {\n  items = this._getItemsForLayout( items );\n\n  this._layoutItems( items, isInstant );\n\n  this._postLayout();\n};\n\n/**\n * get the items to be laid out\n * you may want to skip over some items\n * @param {Array} items\n * @returns {Array} items\n */\nproto._getItemsForLayout = function( items ) {\n  return items.filter( function( item ) {\n    return !item.isIgnored;\n  });\n};\n\n/**\n * layout items\n * @param {Array} items\n * @param {Boolean} isInstant\n */\nproto._layoutItems = function( items, isInstant ) {\n  this._emitCompleteOnItems( 'layout', items );\n\n  if ( !items || !items.length ) {\n    // no items, emit event with empty array\n    return;\n  }\n\n  var queue = [];\n\n  items.forEach( function( item ) {\n    // get x/y object from method\n    var position = this._getItemLayoutPosition( item );\n    // enqueue\n    position.item = item;\n    position.isInstant = isInstant || item.isLayoutInstant;\n    queue.push( position );\n  }, this );\n\n  this._processLayoutQueue( queue );\n};\n\n/**\n * get item layout position\n * @param {Outlayer.Item} item\n * @returns {Object} x and y position\n */\nproto._getItemLayoutPosition = function( /* item */ ) {\n  return {\n    x: 0,\n    y: 0\n  };\n};\n\n/**\n * iterate over array and position each item\n * Reason being - separating this logic prevents 'layout invalidation'\n * thx @paul_irish\n * @param {Array} queue\n */\nproto._processLayoutQueue = function( queue ) {\n  queue.forEach( function( obj ) {\n    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant );\n  }, this );\n};\n\n/**\n * Sets position of item in DOM\n * @param {Outlayer.Item} item\n * @param {Number} x - horizontal position\n * @param {Number} y - vertical position\n * @param {Boolean} isInstant - disables transitions\n */\nproto._positionItem = function( item, x, y, isInstant ) {\n  if ( isInstant ) {\n    // if not transition, just set CSS\n    item.goTo( x, y );\n  } else {\n    item.moveTo( x, y );\n  }\n};\n\n/**\n * Any logic you want to do after each layout,\n * i.e. size the container\n */\nproto._postLayout = function() {\n  this.resizeContainer();\n};\n\nproto.resizeContainer = function() {\n  var isResizingContainer = this._getOption('resizeContainer');\n  if ( !isResizingContainer ) {\n    return;\n  }\n  var size = this._getContainerSize();\n  if ( size ) {\n    this._setContainerMeasure( size.width, true );\n    this._setContainerMeasure( size.height, false );\n  }\n};\n\n/**\n * Sets width or height of container if returned\n * @returns {Object} size\n *   @param {Number} width\n *   @param {Number} height\n */\nproto._getContainerSize = noop;\n\n/**\n * @param {Number} measure - size of width or height\n * @param {Boolean} isWidth\n */\nproto._setContainerMeasure = function( measure, isWidth ) {\n  if ( measure === undefined ) {\n    return;\n  }\n\n  var elemSize = this.size;\n  // add padding and border width if border box\n  if ( elemSize.isBorderBox ) {\n    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +\n      elemSize.borderLeftWidth + elemSize.borderRightWidth :\n      elemSize.paddingBottom + elemSize.paddingTop +\n      elemSize.borderTopWidth + elemSize.borderBottomWidth;\n  }\n\n  measure = Math.max( measure, 0 );\n  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';\n};\n\n/**\n * emit eventComplete on a collection of items events\n * @param {String} eventName\n * @param {Array} items - Outlayer.Items\n */\nproto._emitCompleteOnItems = function( eventName, items ) {\n  var _this = this;\n  function onComplete() {\n    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );\n  }\n\n  var count = items.length;\n  if ( !items || !count ) {\n    onComplete();\n    return;\n  }\n\n  var doneCount = 0;\n  function tick() {\n    doneCount++;\n    if ( doneCount == count ) {\n      onComplete();\n    }\n  }\n\n  // bind callback\n  items.forEach( function( item ) {\n    item.once( eventName, tick );\n  });\n};\n\n/**\n * emits events via EvEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  // add original event to arguments\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery ) {\n    // set this.$element\n    this.$element = this.$element || jQuery( this.element );\n    if ( event ) {\n      // create jQuery event\n      var $event = jQuery.Event( event );\n      $event.type = type;\n      this.$element.trigger( $event, args );\n    } else {\n      // just trigger with type if no event available\n      this.$element.trigger( type, args );\n    }\n  }\n};\n\n// -------------------------- ignore & stamps -------------------------- //\n\n\n/**\n * keep item in collection, but do not lay it out\n * ignored items do not get skipped in layout\n * @param {Element} elem\n */\nproto.ignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    item.isIgnored = true;\n  }\n};\n\n/**\n * return item to layout collection\n * @param {Element} elem\n */\nproto.unignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    delete item.isIgnored;\n  }\n};\n\n/**\n * adds elements to stamps\n * @param {NodeList, Array, Element, or String} elems\n */\nproto.stamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ) {\n    return;\n  }\n\n  this.stamps = this.stamps.concat( elems );\n  // ignore\n  elems.forEach( this.ignore, this );\n};\n\n/**\n * removes elements to stamps\n * @param {NodeList, Array, or Element} elems\n */\nproto.unstamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ){\n    return;\n  }\n\n  elems.forEach( function( elem ) {\n    // filter out removed stamp elements\n    utils.removeFrom( this.stamps, elem );\n    this.unignore( elem );\n  }, this );\n};\n\n/**\n * finds child elements\n * @param {NodeList, Array, Element, or String} elems\n * @returns {Array} elems\n */\nproto._find = function( elems ) {\n  if ( !elems ) {\n    return;\n  }\n  // if string, use argument as selector string\n  if ( typeof elems == 'string' ) {\n    elems = this.element.querySelectorAll( elems );\n  }\n  elems = utils.makeArray( elems );\n  return elems;\n};\n\nproto._manageStamps = function() {\n  if ( !this.stamps || !this.stamps.length ) {\n    return;\n  }\n\n  this._getBoundingRect();\n\n  this.stamps.forEach( this._manageStamp, this );\n};\n\n// update boundingLeft / Top\nproto._getBoundingRect = function() {\n  // get bounding rect for container element\n  var boundingRect = this.element.getBoundingClientRect();\n  var size = this.size;\n  this._boundingRect = {\n    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,\n    top: boundingRect.top + size.paddingTop + size.borderTopWidth,\n    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),\n    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )\n  };\n};\n\n/**\n * @param {Element} stamp\n**/\nproto._manageStamp = noop;\n\n/**\n * get x/y position of element relative to container element\n * @param {Element} elem\n * @returns {Object} offset - has left, top, right, bottom\n */\nproto._getElementOffset = function( elem ) {\n  var boundingRect = elem.getBoundingClientRect();\n  var thisRect = this._boundingRect;\n  var size = getSize( elem );\n  var offset = {\n    left: boundingRect.left - thisRect.left - size.marginLeft,\n    top: boundingRect.top - thisRect.top - size.marginTop,\n    right: thisRect.right - boundingRect.right - size.marginRight,\n    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom\n  };\n  return offset;\n};\n\n// -------------------------- resize -------------------------- //\n\n// enable event handlers for listeners\n// i.e. resize -> onresize\nproto.handleEvent = utils.handleEvent;\n\n/**\n * Bind layout to window resizing\n */\nproto.bindResize = function() {\n  window.addEventListener( 'resize', this );\n  this.isResizeBound = true;\n};\n\n/**\n * Unbind layout to window resizing\n */\nproto.unbindResize = function() {\n  window.removeEventListener( 'resize', this );\n  this.isResizeBound = false;\n};\n\nproto.onresize = function() {\n  this.resize();\n};\n\nutils.debounceMethod( Outlayer, 'onresize', 100 );\n\nproto.resize = function() {\n  // don't trigger if size did not change\n  // or if resize was unbound. See #9\n  if ( !this.isResizeBound || !this.needsResizeLayout() ) {\n    return;\n  }\n\n  this.layout();\n};\n\n/**\n * check if layout is needed post layout\n * @returns Boolean\n */\nproto.needsResizeLayout = function() {\n  var size = getSize( this.element );\n  // check that this.size and size are there\n  // IE8 triggers resize on body size change, so they might not be\n  var hasSizes = this.size && size;\n  return hasSizes && size.innerWidth !== this.size.innerWidth;\n};\n\n// -------------------------- methods -------------------------- //\n\n/**\n * add items to Outlayer instance\n * @param {Array or NodeList or Element} elems\n * @returns {Array} items - Outlayer.Items\n**/\nproto.addItems = function( elems ) {\n  var items = this._itemize( elems );\n  // add items to collection\n  if ( items.length ) {\n    this.items = this.items.concat( items );\n  }\n  return items;\n};\n\n/**\n * Layout newly-appended item elements\n * @param {Array or NodeList or Element} elems\n */\nproto.appended = function( elems ) {\n  var items = this.addItems( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // layout and reveal just the new items\n  this.layoutItems( items, true );\n  this.reveal( items );\n};\n\n/**\n * Layout prepended elements\n * @param {Array or NodeList or Element} elems\n */\nproto.prepended = function( elems ) {\n  var items = this._itemize( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // add items to beginning of collection\n  var previousItems = this.items.slice(0);\n  this.items = items.concat( previousItems );\n  // start new layout\n  this._resetLayout();\n  this._manageStamps();\n  // layout new stuff without transition\n  this.layoutItems( items, true );\n  this.reveal( items );\n  // layout previous items\n  this.layoutItems( previousItems );\n};\n\n/**\n * reveal a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.reveal = function( items ) {\n  this._emitCompleteOnItems( 'reveal', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  items.forEach( function( item ) {\n    item.reveal();\n  });\n};\n\n/**\n * hide a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.hide = function( items ) {\n  this._emitCompleteOnItems( 'hide', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  items.forEach( function( item ) {\n    item.hide();\n  });\n};\n\n/**\n * reveal item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.revealItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.reveal( items );\n};\n\n/**\n * hide item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.hideItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.hide( items );\n};\n\n/**\n * get Outlayer.Item, given an Element\n * @param {Element} elem\n * @param {Function} callback\n * @returns {Outlayer.Item} item\n */\nproto.getItem = function( elem ) {\n  // loop through items to get the one that matches\n  for ( var i=0; i < this.items.length; i++ ) {\n    var item = this.items[i];\n    if ( item.element == elem ) {\n      // return item\n      return item;\n    }\n  }\n};\n\n/**\n * get collection of Outlayer.Items, given Elements\n * @param {Array} elems\n * @returns {Array} items - Outlayer.Items\n */\nproto.getItems = function( elems ) {\n  elems = utils.makeArray( elems );\n  var items = [];\n  elems.forEach( function( elem ) {\n    var item = this.getItem( elem );\n    if ( item ) {\n      items.push( item );\n    }\n  }, this );\n\n  return items;\n};\n\n/**\n * remove element(s) from instance and DOM\n * @param {Array or NodeList or Element} elems\n */\nproto.remove = function( elems ) {\n  var removeItems = this.getItems( elems );\n\n  this._emitCompleteOnItems( 'remove', removeItems );\n\n  // bail if no items to remove\n  if ( !removeItems || !removeItems.length ) {\n    return;\n  }\n\n  removeItems.forEach( function( item ) {\n    item.remove();\n    // remove item from collection\n    utils.removeFrom( this.items, item );\n  }, this );\n};\n\n// ----- destroy ----- //\n\n// remove and disable Outlayer instance\nproto.destroy = function() {\n  // clean up dynamic styles\n  var style = this.element.style;\n  style.height = '';\n  style.position = '';\n  style.width = '';\n  // destroy items\n  this.items.forEach( function( item ) {\n    item.destroy();\n  });\n\n  this.unbindResize();\n\n  var id = this.element.outlayerGUID;\n  delete instances[ id ]; // remove reference to instance by id\n  delete this.element.outlayerGUID;\n  // remove data for jQuery\n  if ( jQuery ) {\n    jQuery.removeData( this.element, this.constructor.namespace );\n  }\n\n};\n\n// -------------------------- data -------------------------- //\n\n/**\n * get Outlayer instance from element\n * @param {Element} elem\n * @returns {Outlayer}\n */\nOutlayer.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.outlayerGUID;\n  return id && instances[ id ];\n};\n\n\n// -------------------------- create Outlayer class -------------------------- //\n\n/**\n * create a layout class\n * @param {String} namespace\n */\nOutlayer.create = function( namespace, options ) {\n  // sub-class Outlayer\n  var Layout = subclass( Outlayer );\n  // apply new options and compatOptions\n  Layout.defaults = utils.extend( {}, Outlayer.defaults );\n  utils.extend( Layout.defaults, options );\n  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );\n\n  Layout.namespace = namespace;\n\n  Layout.data = Outlayer.data;\n\n  // sub-class Item\n  Layout.Item = subclass( Item );\n\n  // -------------------------- declarative -------------------------- //\n\n  utils.htmlInit( Layout, namespace );\n\n  // -------------------------- jQuery bridge -------------------------- //\n\n  // make into jQuery plugin\n  if ( jQuery && jQuery.bridget ) {\n    jQuery.bridget( namespace, Layout );\n  }\n\n  return Layout;\n};\n\nfunction subclass( Parent ) {\n  function SubClass() {\n    Parent.apply( this, arguments );\n  }\n\n  SubClass.prototype = Object.create( Parent.prototype );\n  SubClass.prototype.constructor = SubClass;\n\n  return SubClass;\n}\n\n// ----- fin ----- //\n\n// back in global\nOutlayer.Item = Item;\n\nreturn Outlayer;\n\n}));\n//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * EvEmitter v1.0.1\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module */\n  if ( true ) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners array\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || [];\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var i = 0;\n  var listener = listeners[i];\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  while ( listener ) {\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n    // get next listener\n    i += isOnce ? 0 : 1;\n    listener = listeners[i];\n  }\n\n  return this;\n};\n\nreturn EvEmitter;\n\n}));\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hc29ucnktbGF5b3V0L34vb3V0bGF5ZXIvfi9ldi1lbWl0dGVyL2V2LWVtaXR0ZXIuanM/MzJjNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQSxDQUFDOztBQUVEOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUEsQ0FBQyIsImZpbGUiOiIzNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXZFbWl0dGVyIHYxLjAuMVxuICogTGlsJyBldmVudCBlbWl0dGVyXG4gKiBNSVQgTGljZW5zZVxuICovXG5cbi8qIGpzaGludCB1bnVzZWQ6IHRydWUsIHVuZGVmOiB0cnVlLCBzdHJpY3Q6IHRydWUgKi9cblxuKCBmdW5jdGlvbiggZ2xvYmFsLCBmYWN0b3J5ICkge1xuICAvLyB1bml2ZXJzYWwgbW9kdWxlIGRlZmluaXRpb25cbiAgLyoganNoaW50IHN0cmljdDogZmFsc2UgKi8gLyogZ2xvYmFscyBkZWZpbmUsIG1vZHVsZSAqL1xuICBpZiAoIHR5cGVvZiBkZWZpbmUgPT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kICkge1xuICAgIC8vIEFNRCAtIFJlcXVpcmVKU1xuICAgIGRlZmluZSggZmFjdG9yeSApO1xuICB9IGVsc2UgaWYgKCB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzICkge1xuICAgIC8vIENvbW1vbkpTIC0gQnJvd3NlcmlmeSwgV2VicGFja1xuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuICB9IGVsc2Uge1xuICAgIC8vIEJyb3dzZXIgZ2xvYmFsc1xuICAgIGdsb2JhbC5FdkVtaXR0ZXIgPSBmYWN0b3J5KCk7XG4gIH1cblxufSggdGhpcywgZnVuY3Rpb24oKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBFdkVtaXR0ZXIoKSB7fVxuXG52YXIgcHJvdG8gPSBFdkVtaXR0ZXIucHJvdG90eXBlO1xuXG5wcm90by5vbiA9IGZ1bmN0aW9uKCBldmVudE5hbWUsIGxpc3RlbmVyICkge1xuICBpZiAoICFldmVudE5hbWUgfHwgIWxpc3RlbmVyICkge1xuICAgIHJldHVybjtcbiAgfVxuICAvLyBzZXQgZXZlbnRzIGhhc2hcbiAgdmFyIGV2ZW50cyA9IHRoaXMuX2V2ZW50cyA9IHRoaXMuX2V2ZW50cyB8fCB7fTtcbiAgLy8gc2V0IGxpc3RlbmVycyBhcnJheVxuICB2YXIgbGlzdGVuZXJzID0gZXZlbnRzWyBldmVudE5hbWUgXSA9IGV2ZW50c1sgZXZlbnROYW1lIF0gfHwgW107XG4gIC8vIG9ubHkgYWRkIG9uY2VcbiAgaWYgKCBsaXN0ZW5lcnMuaW5kZXhPZiggbGlzdGVuZXIgKSA9PSAtMSApIHtcbiAgICBsaXN0ZW5lcnMucHVzaCggbGlzdGVuZXIgKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxucHJvdG8ub25jZSA9IGZ1bmN0aW9uKCBldmVudE5hbWUsIGxpc3RlbmVyICkge1xuICBpZiAoICFldmVudE5hbWUgfHwgIWxpc3RlbmVyICkge1xuICAgIHJldHVybjtcbiAgfVxuICAvLyBhZGQgZXZlbnRcbiAgdGhpcy5vbiggZXZlbnROYW1lLCBsaXN0ZW5lciApO1xuICAvLyBzZXQgb25jZSBmbGFnXG4gIC8vIHNldCBvbmNlRXZlbnRzIGhhc2hcbiAgdmFyIG9uY2VFdmVudHMgPSB0aGlzLl9vbmNlRXZlbnRzID0gdGhpcy5fb25jZUV2ZW50cyB8fCB7fTtcbiAgLy8gc2V0IG9uY2VMaXN0ZW5lcnMgYXJyYXlcbiAgdmFyIG9uY2VMaXN0ZW5lcnMgPSBvbmNlRXZlbnRzWyBldmVudE5hbWUgXSA9IG9uY2VFdmVudHNbIGV2ZW50TmFtZSBdIHx8IFtdO1xuICAvLyBzZXQgZmxhZ1xuICBvbmNlTGlzdGVuZXJzWyBsaXN0ZW5lciBdID0gdHJ1ZTtcblxuICByZXR1cm4gdGhpcztcbn07XG5cbnByb3RvLm9mZiA9IGZ1bmN0aW9uKCBldmVudE5hbWUsIGxpc3RlbmVyICkge1xuICB2YXIgbGlzdGVuZXJzID0gdGhpcy5fZXZlbnRzICYmIHRoaXMuX2V2ZW50c1sgZXZlbnROYW1lIF07XG4gIGlmICggIWxpc3RlbmVycyB8fCAhbGlzdGVuZXJzLmxlbmd0aCApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIGluZGV4ID0gbGlzdGVuZXJzLmluZGV4T2YoIGxpc3RlbmVyICk7XG4gIGlmICggaW5kZXggIT0gLTEgKSB7XG4gICAgbGlzdGVuZXJzLnNwbGljZSggaW5kZXgsIDEgKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxucHJvdG8uZW1pdEV2ZW50ID0gZnVuY3Rpb24oIGV2ZW50TmFtZSwgYXJncyApIHtcbiAgdmFyIGxpc3RlbmVycyA9IHRoaXMuX2V2ZW50cyAmJiB0aGlzLl9ldmVudHNbIGV2ZW50TmFtZSBdO1xuICBpZiAoICFsaXN0ZW5lcnMgfHwgIWxpc3RlbmVycy5sZW5ndGggKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBpID0gMDtcbiAgdmFyIGxpc3RlbmVyID0gbGlzdGVuZXJzW2ldO1xuICBhcmdzID0gYXJncyB8fCBbXTtcbiAgLy8gb25jZSBzdHVmZlxuICB2YXIgb25jZUxpc3RlbmVycyA9IHRoaXMuX29uY2VFdmVudHMgJiYgdGhpcy5fb25jZUV2ZW50c1sgZXZlbnROYW1lIF07XG5cbiAgd2hpbGUgKCBsaXN0ZW5lciApIHtcbiAgICB2YXIgaXNPbmNlID0gb25jZUxpc3RlbmVycyAmJiBvbmNlTGlzdGVuZXJzWyBsaXN0ZW5lciBdO1xuICAgIGlmICggaXNPbmNlICkge1xuICAgICAgLy8gcmVtb3ZlIGxpc3RlbmVyXG4gICAgICAvLyByZW1vdmUgYmVmb3JlIHRyaWdnZXIgdG8gcHJldmVudCByZWN1cnNpb25cbiAgICAgIHRoaXMub2ZmKCBldmVudE5hbWUsIGxpc3RlbmVyICk7XG4gICAgICAvLyB1bnNldCBvbmNlIGZsYWdcbiAgICAgIGRlbGV0ZSBvbmNlTGlzdGVuZXJzWyBsaXN0ZW5lciBdO1xuICAgIH1cbiAgICAvLyB0cmlnZ2VyIGxpc3RlbmVyXG4gICAgbGlzdGVuZXIuYXBwbHkoIHRoaXMsIGFyZ3MgKTtcbiAgICAvLyBnZXQgbmV4dCBsaXN0ZW5lclxuICAgIGkgKz0gaXNPbmNlID8gMCA6IDE7XG4gICAgbGlzdGVuZXIgPSBsaXN0ZW5lcnNbaV07XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbnJldHVybiBFdkVtaXR0ZXI7XG5cbn0pKTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L21hc29ucnktbGF5b3V0L34vb3V0bGF5ZXIvfi9ldi1lbWl0dGVyL2V2LWVtaXR0ZXIuanNcbiAqKiBtb2R1bGUgaWQgPSAzNVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * getSize v2.0.2\n * measure size of elements\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n/*global define: false, module: false, console: false */\n\n( function( window, factory ) {\n  'use strict';\n\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return factory();\n    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n\n})( window, function factory() {\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console == 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nvar measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n// -------------------------- getStyle -------------------------- //\n\n/**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction getStyle( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    logError( 'Style returned ' + style +\n      '. Are you running this code in a hidden iframe on Firefox? ' +\n      'See http://bit.ly/getsizebug1' );\n  }\n  return style;\n}\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar isBoxSizeOuter;\n\n/**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  // -------------------------- box sizing -------------------------- //\n\n  /**\n   * WebKit measures the outer-width on style.width on border-box elems\n   * IE & Firefox<29 measures the inner-width\n   */\n  var div = document.createElement('div');\n  div.style.width = '200px';\n  div.style.padding = '1px 2px 3px 4px';\n  div.style.borderStyle = 'solid';\n  div.style.borderWidth = '1px 2px 3px 4px';\n  div.style.boxSizing = 'border-box';\n\n  var body = document.body || document.documentElement;\n  body.appendChild( div );\n  var style = getStyle( div );\n\n  getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize( style.width ) == 200;\n  body.removeChild( div );\n\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n});\n//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Fizzy UI utils v2.0.1\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(38)\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = function( matchesSelector ) {\n      return factory( window, matchesSelector );\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('desandro-matches-selector')\n    );\n  } else {\n    // browser global\n    window.fizzyUIUtils = factory(\n      window,\n      window.matchesSelector\n    );\n  }\n\n}( window, function factory( window, matchesSelector ) {\n\n'use strict';\n\nvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- makeArray ----- //\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  var ary = [];\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    ary = obj;\n  } else if ( obj && typeof obj.length == 'number' ) {\n    // convert nodeList to array\n    for ( var i=0; i < obj.length; i++ ) {\n      ary.push( obj[i] );\n    }\n  } else {\n    // array of single index\n    ary.push( obj );\n  }\n  return ary;\n};\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  var index = ary.indexOf( obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem != document.body ) {\n    elem = elem.parentNode;\n    if ( matchesSelector( elem, selector ) ) {\n      return elem;\n    }\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n  var ffElems = [];\n\n  elems.forEach( function( elem ) {\n    // check that elem is an actual element\n    if ( !( elem instanceof HTMLElement ) ) {\n      return;\n    }\n    // add elem if no selector\n    if ( !selector ) {\n      ffElems.push( elem );\n      return;\n    }\n    // filter & find items if we have a selector\n    // filter\n    if ( matchesSelector( elem, selector ) ) {\n      ffElems.push( elem );\n    }\n    // find children\n    var childElems = elem.querySelectorAll( selector );\n    // concat childElems to filterFound array\n    for ( var i=0; i < childElems.length; i++ ) {\n      ffElems.push( childElems[i] );\n    }\n  });\n\n  return ffElems;\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  // original method\n  var method = _class.prototype[ methodName ];\n  var timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    var timeout = this[ timeoutName ];\n    if ( timeout ) {\n      clearTimeout( timeout );\n    }\n    var args = arguments;\n\n    var _this = this;\n    this[ timeoutName ] = setTimeout( function() {\n      method.apply( _this, args );\n      delete _this[ timeoutName ];\n    }, threshold || 100 );\n  };\n};\n\n// ----- docReady ----- //\n\nutils.docReady = function( callback ) {\n  if ( document.readyState == 'complete' ) {\n    callback();\n  } else {\n    document.addEventListener( 'DOMContentLoaded', callback );\n  }\n};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  }).toLowerCase();\n};\n\nvar console = window.console;\n/**\n * allow user to initialize classes via [data-namespace] or .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-options\n */\nutils.htmlInit = function( WidgetClass, namespace ) {\n  utils.docReady( function() {\n    var dashedNamespace = utils.toDashed( namespace );\n    var dataAttr = 'data-' + dashedNamespace;\n    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );\n    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );\n    var elems = utils.makeArray( dataAttrElems )\n      .concat( utils.makeArray( jsDashElems ) );\n    var dataOptionsAttr = dataAttr + '-options';\n    var jQuery = window.jQuery;\n\n    elems.forEach( function( elem ) {\n      var attr = elem.getAttribute( dataAttr ) ||\n        elem.getAttribute( dataOptionsAttr );\n      var options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +\n          ': ' + error );\n        }\n        return;\n      }\n      // initialize\n      var instance = new WidgetClass( elem, options );\n      // make available via $().data('layoutname')\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    });\n\n  });\n};\n\n// -----  ----- //\n\nreturn utils;\n\n}));\n//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * matchesSelector v2.0.1\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false */\n  'use strict';\n  // universal module definition\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.matchesSelector = factory();\n  }\n\n}( window, function factory() {\n  'use strict';\n\n  var matchesMethod = ( function() {\n    var ElemProto = Element.prototype;\n    // check for the standard method name first\n    if ( ElemProto.matches ) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if ( ElemProto.matchesSelector ) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n    for ( var i=0; i < prefixes.length; i++ ) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if ( ElemProto[ method ] ) {\n        return method;\n      }\n    }\n  })();\n\n  return function matchesSelector( elem, selector ) {\n    return elem[ matchesMethod ]( selector );\n  };\n\n}));\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hc29ucnktbGF5b3V0L34vb3V0bGF5ZXIvfi9maXp6eS11aS11dGlscy9+L2Rlc2FuZHJvLW1hdGNoZXMtc2VsZWN0b3IvbWF0Y2hlcy1zZWxlY3Rvci5qcz8wMzg3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUEsQ0FBQztBQUNEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IscUJBQXFCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBLENBQUMiLCJmaWxlIjoiMzguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIG1hdGNoZXNTZWxlY3RvciB2Mi4wLjFcbiAqIG1hdGNoZXNTZWxlY3RvciggZWxlbWVudCwgJy5zZWxlY3RvcicgKVxuICogTUlUIGxpY2Vuc2VcbiAqL1xuXG4vKmpzaGludCBicm93c2VyOiB0cnVlLCBzdHJpY3Q6IHRydWUsIHVuZGVmOiB0cnVlLCB1bnVzZWQ6IHRydWUgKi9cblxuKCBmdW5jdGlvbiggd2luZG93LCBmYWN0b3J5ICkge1xuICAvKmdsb2JhbCBkZWZpbmU6IGZhbHNlLCBtb2R1bGU6IGZhbHNlICovXG4gICd1c2Ugc3RyaWN0JztcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIGlmICggdHlwZW9mIGRlZmluZSA9PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgKSB7XG4gICAgLy8gQU1EXG4gICAgZGVmaW5lKCBmYWN0b3J5ICk7XG4gIH0gZWxzZSBpZiAoIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMgKSB7XG4gICAgLy8gQ29tbW9uSlNcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBicm93c2VyIGdsb2JhbFxuICAgIHdpbmRvdy5tYXRjaGVzU2VsZWN0b3IgPSBmYWN0b3J5KCk7XG4gIH1cblxufSggd2luZG93LCBmdW5jdGlvbiBmYWN0b3J5KCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgdmFyIG1hdGNoZXNNZXRob2QgPSAoIGZ1bmN0aW9uKCkge1xuICAgIHZhciBFbGVtUHJvdG8gPSBFbGVtZW50LnByb3RvdHlwZTtcbiAgICAvLyBjaGVjayBmb3IgdGhlIHN0YW5kYXJkIG1ldGhvZCBuYW1lIGZpcnN0XG4gICAgaWYgKCBFbGVtUHJvdG8ubWF0Y2hlcyApIHtcbiAgICAgIHJldHVybiAnbWF0Y2hlcyc7XG4gICAgfVxuICAgIC8vIGNoZWNrIHVuLXByZWZpeGVkXG4gICAgaWYgKCBFbGVtUHJvdG8ubWF0Y2hlc1NlbGVjdG9yICkge1xuICAgICAgcmV0dXJuICdtYXRjaGVzU2VsZWN0b3InO1xuICAgIH1cbiAgICAvLyBjaGVjayB2ZW5kb3IgcHJlZml4ZXNcbiAgICB2YXIgcHJlZml4ZXMgPSBbICd3ZWJraXQnLCAnbW96JywgJ21zJywgJ28nIF07XG5cbiAgICBmb3IgKCB2YXIgaT0wOyBpIDwgcHJlZml4ZXMubGVuZ3RoOyBpKysgKSB7XG4gICAgICB2YXIgcHJlZml4ID0gcHJlZml4ZXNbaV07XG4gICAgICB2YXIgbWV0aG9kID0gcHJlZml4ICsgJ01hdGNoZXNTZWxlY3Rvcic7XG4gICAgICBpZiAoIEVsZW1Qcm90b1sgbWV0aG9kIF0gKSB7XG4gICAgICAgIHJldHVybiBtZXRob2Q7XG4gICAgICB9XG4gICAgfVxuICB9KSgpO1xuXG4gIHJldHVybiBmdW5jdGlvbiBtYXRjaGVzU2VsZWN0b3IoIGVsZW0sIHNlbGVjdG9yICkge1xuICAgIHJldHVybiBlbGVtWyBtYXRjaGVzTWV0aG9kIF0oIHNlbGVjdG9yICk7XG4gIH07XG5cbn0pKTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L21hc29ucnktbGF5b3V0L34vb3V0bGF5ZXIvfi9maXp6eS11aS11dGlscy9+L2Rlc2FuZHJvLW1hdGNoZXMtc2VsZWN0b3IvbWF0Y2hlcy1zZWxlY3Rvci5qc1xuICoqIG1vZHVsZSBpZCA9IDM4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Outlayer Item\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( true ) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n        __webpack_require__(35),\n        __webpack_require__(36)\n      ], __WEBPACK_AMD_DEFINE_RESULT__ = function( EvEmitter, getSize ) {\n        return factory( window, EvEmitter, getSize );\n      }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      window,\n      require('ev-emitter'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Outlayer = {};\n    window.Outlayer.Item = factory(\n      window,\n      window.EvEmitter,\n      window.getSize\n    );\n  }\n\n}( window, function factory( window, EvEmitter, getSize ) {\n'use strict';\n\n// ----- helpers ----- //\n\nfunction isEmptyObj( obj ) {\n  for ( var prop in obj ) {\n    return false;\n  }\n  prop = null;\n  return true;\n}\n\n// -------------------------- CSS3 support -------------------------- //\n\n\nvar docElemStyle = document.documentElement.style;\n\nvar transitionProperty = typeof docElemStyle.transition == 'string' ?\n  'transition' : 'WebkitTransition';\nvar transformProperty = typeof docElemStyle.transform == 'string' ?\n  'transform' : 'WebkitTransform';\n\nvar transitionEndEvent = {\n  WebkitTransition: 'webkitTransitionEnd',\n  transition: 'transitionend'\n}[ transitionProperty ];\n\n// cache all vendor properties\nvar vendorProperties = [\n  transformProperty,\n  transitionProperty,\n  transitionProperty + 'Duration',\n  transitionProperty + 'Property'\n];\n\n// -------------------------- Item -------------------------- //\n\nfunction Item( element, layout ) {\n  if ( !element ) {\n    return;\n  }\n\n  this.element = element;\n  // parent layout class, i.e. Masonry, Isotope, or Packery\n  this.layout = layout;\n  this.position = {\n    x: 0,\n    y: 0\n  };\n\n  this._create();\n}\n\n// inherit EvEmitter\nvar proto = Item.prototype = Object.create( EvEmitter.prototype );\nproto.constructor = Item;\n\nproto._create = function() {\n  // transition objects\n  this._transn = {\n    ingProperties: {},\n    clean: {},\n    onEnd: {}\n  };\n\n  this.css({\n    position: 'absolute'\n  });\n};\n\n// trigger specified handler for event type\nproto.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * apply CSS styles to element\n * @param {Object} style\n */\nproto.css = function( style ) {\n  var elemStyle = this.element.style;\n\n  for ( var prop in style ) {\n    // use vendor property if available\n    var supportedProp = vendorProperties[ prop ] || prop;\n    elemStyle[ supportedProp ] = style[ prop ];\n  }\n};\n\n // measure position, and sets it\nproto.getPosition = function() {\n  var style = getComputedStyle( this.element );\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  var xValue = style[ isOriginLeft ? 'left' : 'right' ];\n  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];\n  // convert percent to pixels\n  var layoutSize = this.layout.size;\n  var x = xValue.indexOf('%') != -1 ?\n    ( parseFloat( xValue ) / 100 ) * layoutSize.width : parseInt( xValue, 10 );\n  var y = yValue.indexOf('%') != -1 ?\n    ( parseFloat( yValue ) / 100 ) * layoutSize.height : parseInt( yValue, 10 );\n\n  // clean up 'auto' or other non-integer values\n  x = isNaN( x ) ? 0 : x;\n  y = isNaN( y ) ? 0 : y;\n  // remove padding from measurement\n  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;\n  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;\n\n  this.position.x = x;\n  this.position.y = y;\n};\n\n// set settled position, apply padding\nproto.layoutPosition = function() {\n  var layoutSize = this.layout.size;\n  var style = {};\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n\n  // x\n  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';\n  var xProperty = isOriginLeft ? 'left' : 'right';\n  var xResetProperty = isOriginLeft ? 'right' : 'left';\n\n  var x = this.position.x + layoutSize[ xPadding ];\n  // set in percentage or pixels\n  style[ xProperty ] = this.getXValue( x );\n  // reset other property\n  style[ xResetProperty ] = '';\n\n  // y\n  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';\n  var yProperty = isOriginTop ? 'top' : 'bottom';\n  var yResetProperty = isOriginTop ? 'bottom' : 'top';\n\n  var y = this.position.y + layoutSize[ yPadding ];\n  // set in percentage or pixels\n  style[ yProperty ] = this.getYValue( y );\n  // reset other property\n  style[ yResetProperty ] = '';\n\n  this.css( style );\n  this.emitEvent( 'layout', [ this ] );\n};\n\nproto.getXValue = function( x ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && !isHorizontal ?\n    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';\n};\n\nproto.getYValue = function( y ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && isHorizontal ?\n    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';\n};\n\nproto._transitionTo = function( x, y ) {\n  this.getPosition();\n  // get current x & y from top/left\n  var curX = this.position.x;\n  var curY = this.position.y;\n\n  var compareX = parseInt( x, 10 );\n  var compareY = parseInt( y, 10 );\n  var didNotMove = compareX === this.position.x && compareY === this.position.y;\n\n  // save end position\n  this.setPosition( x, y );\n\n  // if did not move and not transitioning, just go to layout\n  if ( didNotMove && !this.isTransitioning ) {\n    this.layoutPosition();\n    return;\n  }\n\n  var transX = x - curX;\n  var transY = y - curY;\n  var transitionStyle = {};\n  transitionStyle.transform = this.getTranslate( transX, transY );\n\n  this.transition({\n    to: transitionStyle,\n    onTransitionEnd: {\n      transform: this.layoutPosition\n    },\n    isCleaning: true\n  });\n};\n\nproto.getTranslate = function( x, y ) {\n  // flip cooridinates if origin on right or bottom\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  x = isOriginLeft ? x : -x;\n  y = isOriginTop ? y : -y;\n  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n};\n\n// non transition + transform support\nproto.goTo = function( x, y ) {\n  this.setPosition( x, y );\n  this.layoutPosition();\n};\n\nproto.moveTo = proto._transitionTo;\n\nproto.setPosition = function( x, y ) {\n  this.position.x = parseInt( x, 10 );\n  this.position.y = parseInt( y, 10 );\n};\n\n// ----- transition ----- //\n\n/**\n * @param {Object} style - CSS\n * @param {Function} onTransitionEnd\n */\n\n// non transition, just trigger callback\nproto._nonTransition = function( args ) {\n  this.css( args.to );\n  if ( args.isCleaning ) {\n    this._removeStyles( args.to );\n  }\n  for ( var prop in args.onTransitionEnd ) {\n    args.onTransitionEnd[ prop ].call( this );\n  }\n};\n\n/**\n * proper transition\n * @param {Object} args - arguments\n *   @param {Object} to - style to transition to\n *   @param {Object} from - style to start transition from\n *   @param {Boolean} isCleaning - removes transition styles after transition\n *   @param {Function} onTransitionEnd - callback\n */\nproto._transition = function( args ) {\n  // redirect to nonTransition if no transition duration\n  if ( !parseFloat( this.layout.options.transitionDuration ) ) {\n    this._nonTransition( args );\n    return;\n  }\n\n  var _transition = this._transn;\n  // keep track of onTransitionEnd callback by css property\n  for ( var prop in args.onTransitionEnd ) {\n    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];\n  }\n  // keep track of properties that are transitioning\n  for ( prop in args.to ) {\n    _transition.ingProperties[ prop ] = true;\n    // keep track of properties to clean up when transition is done\n    if ( args.isCleaning ) {\n      _transition.clean[ prop ] = true;\n    }\n  }\n\n  // set from styles\n  if ( args.from ) {\n    this.css( args.from );\n    // force redraw. http://blog.alexmaccaw.com/css-transitions\n    var h = this.element.offsetHeight;\n    // hack for JSHint to hush about unused var\n    h = null;\n  }\n  // enable transition\n  this.enableTransition( args.to );\n  // set styles that are transitioning\n  this.css( args.to );\n\n  this.isTransitioning = true;\n\n};\n\n// dash before all cap letters, including first for\n// WebkitTransform => -webkit-transform\nfunction toDashedAll( str ) {\n  return str.replace( /([A-Z])/g, function( $1 ) {\n    return '-' + $1.toLowerCase();\n  });\n}\n\nvar transitionProps = 'opacity,' +\n  toDashedAll( vendorProperties.transform || 'transform' );\n\nproto.enableTransition = function(/* style */) {\n  // HACK changing transitionProperty during a transition\n  // will cause transition to jump\n  if ( this.isTransitioning ) {\n    return;\n  }\n\n  // make `transition: foo, bar, baz` from style object\n  // HACK un-comment this when enableTransition can work\n  // while a transition is happening\n  // var transitionValues = [];\n  // for ( var prop in style ) {\n  //   // dash-ify camelCased properties like WebkitTransition\n  //   prop = vendorProperties[ prop ] || prop;\n  //   transitionValues.push( toDashedAll( prop ) );\n  // }\n  // enable transition styles\n  this.css({\n    transitionProperty: transitionProps,\n    transitionDuration: this.layout.options.transitionDuration\n  });\n  // listen for transition end event\n  this.element.addEventListener( transitionEndEvent, this, false );\n};\n\nproto.transition = Item.prototype[ transitionProperty ? '_transition' : '_nonTransition' ];\n\n// ----- events ----- //\n\nproto.onwebkitTransitionEnd = function( event ) {\n  this.ontransitionend( event );\n};\n\nproto.onotransitionend = function( event ) {\n  this.ontransitionend( event );\n};\n\n// properties that I munge to make my life easier\nvar dashedVendorProperties = {\n  '-webkit-transform': 'transform'\n};\n\nproto.ontransitionend = function( event ) {\n  // disregard bubbled events from children\n  if ( event.target !== this.element ) {\n    return;\n  }\n  var _transition = this._transn;\n  // get property name of transitioned property, convert to prefix-free\n  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;\n\n  // remove property that has completed transitioning\n  delete _transition.ingProperties[ propertyName ];\n  // check if any properties are still transitioning\n  if ( isEmptyObj( _transition.ingProperties ) ) {\n    // all properties have completed transitioning\n    this.disableTransition();\n  }\n  // clean style\n  if ( propertyName in _transition.clean ) {\n    // clean up style\n    this.element.style[ event.propertyName ] = '';\n    delete _transition.clean[ propertyName ];\n  }\n  // trigger onTransitionEnd callback\n  if ( propertyName in _transition.onEnd ) {\n    var onTransitionEnd = _transition.onEnd[ propertyName ];\n    onTransitionEnd.call( this );\n    delete _transition.onEnd[ propertyName ];\n  }\n\n  this.emitEvent( 'transitionEnd', [ this ] );\n};\n\nproto.disableTransition = function() {\n  this.removeTransitionStyles();\n  this.element.removeEventListener( transitionEndEvent, this, false );\n  this.isTransitioning = false;\n};\n\n/**\n * removes style property from element\n * @param {Object} style\n**/\nproto._removeStyles = function( style ) {\n  // clean up transition styles\n  var cleanStyle = {};\n  for ( var prop in style ) {\n    cleanStyle[ prop ] = '';\n  }\n  this.css( cleanStyle );\n};\n\nvar cleanTransitionStyle = {\n  transitionProperty: '',\n  transitionDuration: ''\n};\n\nproto.removeTransitionStyles = function() {\n  // remove transition\n  this.css( cleanTransitionStyle );\n};\n\n// ----- show/hide/remove ----- //\n\n// remove element from DOM\nproto.removeElem = function() {\n  this.element.parentNode.removeChild( this.element );\n  // remove display: none\n  this.css({ display: '' });\n  this.emitEvent( 'remove', [ this ] );\n};\n\nproto.remove = function() {\n  // just remove element if no transition support or no transition\n  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {\n    this.removeElem();\n    return;\n  }\n\n  // start transition\n  this.once( 'transitionEnd', function() {\n    this.removeElem();\n  });\n  this.hide();\n};\n\nproto.reveal = function() {\n  delete this.isHidden;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;\n\n  this.transition({\n    from: options.hiddenStyle,\n    to: options.visibleStyle,\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onRevealTransitionEnd = function() {\n  // check if still visible\n  // during transition, item may have been hidden\n  if ( !this.isHidden ) {\n    this.emitEvent('reveal');\n  }\n};\n\n/**\n * get style property use for hide/reveal transition end\n * @param {String} styleProperty - hiddenStyle/visibleStyle\n * @returns {String}\n */\nproto.getHideRevealTransitionEndProperty = function( styleProperty ) {\n  var optionStyle = this.layout.options[ styleProperty ];\n  // use opacity\n  if ( optionStyle.opacity ) {\n    return 'opacity';\n  }\n  // get first property\n  for ( var prop in optionStyle ) {\n    return prop;\n  }\n};\n\nproto.hide = function() {\n  // set flag\n  this.isHidden = true;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;\n\n  this.transition({\n    from: options.visibleStyle,\n    to: options.hiddenStyle,\n    // keep hidden stuff hidden\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onHideTransitionEnd = function() {\n  // check if still hidden\n  // during transition, item may have been un-hidden\n  if ( this.isHidden ) {\n    this.css({ display: 'none' });\n    this.emitEvent('hide');\n  }\n};\n\nproto.destroy = function() {\n  this.css({\n    position: '',\n    left: '',\n    right: '',\n    top: '',\n    bottom: '',\n    transition: '',\n    transform: ''\n  });\n};\n\nreturn Item;\n\n}));\n//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(41);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(49)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/autoprefixer-loader/index.js!./../../node_modules/sass-loader/index.js?sourceMap!./gg11.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/autoprefixer-loader/index.js!./../../node_modules/sass-loader/index.js?sourceMap!./gg11.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXYvc2Nzcy9nZzExLnNjc3M/NTEyZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFtRjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJmaWxlIjoiNDAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXAhLi8uLi8uLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyLWxvYWRlci9pbmRleC5qcyEuLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXAhLi9nZzExLnNjc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanNcIikoY29udGVudCwge30pO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcCEuLy4uLy4uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXItbG9hZGVyL2luZGV4LmpzIS4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcCEuL2dnMTEuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXAhLi8uLi8uLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyLWxvYWRlci9pbmRleC5qcyEuLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXAhLi9nZzExLnNjc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9kZXYvc2Nzcy9nZzExLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSA0MFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	eval("exports = module.exports = __webpack_require__(42)();\n// imports\n\n\n// module\nexports.push([module.id, \"@charset \\\"UTF-8\\\";\\n/**\\r\\n * @function gg-font-size\\r\\n * @function gg-line-height\\r\\n * @mixin gg-font\\r\\n * %gg-font-display-4\\r\\n * %gg-font-display-3\\r\\n * %gg-font-display-2\\r\\n * %gg-font-display-1\\r\\n * %gg-font-headline\\r\\n * %gg-font-title\\r\\n * %gg-font-subheading-device\\r\\n * %gg-font-subheading-desktop\\r\\n * %gg-font-body-2-device\\r\\n * %gg-font-body-1-device\\r\\n * %gg-font-caption\\r\\n * %gg-font-button\\r\\n */\\n.gg-article > header h1 {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 4.5rem;\\n  font-weight: 400;\\n  line-height: 4.8rem; }\\n\\n.gg-header, .gg-article > header h2 {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 2rem;\\n  font-weight: 600; }\\n\\n.gg-appbar-menu ul, .gg-drawer ul, .gg-card-big .gg-card-addon .gg-card-addon-list ul, .gg-card-small .gg-card-addon .gg-card-addon-list ul, .gg-card-image .gg-card-addon .gg-card-addon-list ul, .gg-article-info > :first-child .gg-article-meta a {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 1.4rem;\\n  font-weight: 600;\\n  line-height: 2.4rem; }\\n\\n.gg-card-big .gg-card-text, .gg-card-small .gg-card-text, .gg-card-image .gg-card-text {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 1.4rem;\\n  font-weight: 400;\\n  line-height: 2rem; }\\n\\n.gg-article-info > :first-child .gg-article-meta span {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 1.2rem;\\n  font-weight: 400; }\\n\\n.gg-button-flat,\\n.gg-button-flat-light {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 1.4rem;\\n  font-weight: 600;\\n  text-transform: uppercase; }\\n\\n/*!\\r\\n *  Font Awesome 4.5.0 by @davegandy - http://fontawesome.io - @fontawesome\\r\\n *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\\r\\n */\\n/* FONT PATH\\r\\n * -------------------------- */\\n@font-face {\\n  font-family: 'FontAwesome';\\n  src: url(\" + __webpack_require__(43) + \");\\n  src: url(\" + __webpack_require__(44) + \"?#iefix&v=4.5.0) format(\\\"embedded-opentype\\\"), url(\" + __webpack_require__(45) + \") format(\\\"woff2\\\"), url(\" + __webpack_require__(46) + \") format(\\\"woff\\\"), url(\" + __webpack_require__(47) + \") format(\\\"truetype\\\"), url(\" + __webpack_require__(48) + \"#fontawesomeregular) format(\\\"svg\\\");\\n  font-weight: normal;\\n  font-style: normal; }\\n\\n.fa, .gg-icon-flat,\\n.gg-icon-flat-light, .gg-appbar-icon,\\n.gg-searchbar-icon, .gg-icon-chevron, .gg-icon-comments, .gg-icon-facebook, .gg-icon-twitter {\\n  display: inline-block;\\n  font: normal normal normal 14px / 1 FontAwesome;\\n  font-size: inherit;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale; }\\n\\n/* makes the font 33% larger relative to the icon container */\\n.fa-lg, .gg-icon-facebook, .gg-icon-twitter {\\n  font-size: 1.33333em;\\n  line-height: 0.75em;\\n  vertical-align: -15%; }\\n\\n.fa-2x {\\n  font-size: 2em; }\\n\\n.fa-3x {\\n  font-size: 3em; }\\n\\n.fa-4x {\\n  font-size: 4em; }\\n\\n.fa-5x {\\n  font-size: 5em; }\\n\\n.fa-fw {\\n  width: 1.28571em;\\n  text-align: center; }\\n\\n.fa-ul {\\n  padding-left: 0;\\n  margin-left: 2.14286em;\\n  list-style-type: none; }\\n  .fa-ul > li {\\n    position: relative; }\\n\\n.fa-li {\\n  position: absolute;\\n  left: -2.14286em;\\n  width: 2.14286em;\\n  top: 0.14286em;\\n  text-align: center; }\\n  .fa-li.fa-lg, .fa-li.gg-icon-facebook, .fa-li.gg-icon-twitter {\\n    left: -1.85714em; }\\n\\n.fa-border {\\n  padding: .2em .25em .15em;\\n  border: solid 0.08em #eee;\\n  border-radius: .1em; }\\n\\n.fa-pull-left {\\n  float: left; }\\n\\n.fa-pull-right {\\n  float: right; }\\n\\n.fa.fa-pull-left, .fa-pull-left.gg-icon-flat,\\n.fa-pull-left.gg-icon-flat-light, .fa-pull-left.gg-appbar-icon,\\n.fa-pull-left.gg-searchbar-icon, .fa-pull-left.gg-icon-chevron, .fa-pull-left.gg-icon-comments, .fa-pull-left.gg-icon-facebook, .fa-pull-left.gg-icon-twitter {\\n  margin-right: .3em; }\\n\\n.fa.fa-pull-right, .fa-pull-right.gg-icon-flat,\\n.fa-pull-right.gg-icon-flat-light, .fa-pull-right.gg-appbar-icon,\\n.fa-pull-right.gg-searchbar-icon, .fa-pull-right.gg-icon-chevron, .fa-pull-right.gg-icon-comments, .fa-pull-right.gg-icon-facebook, .fa-pull-right.gg-icon-twitter {\\n  margin-left: .3em; }\\n\\n/* Deprecated as of 4.4.0 */\\n.pull-right {\\n  float: right; }\\n\\n.pull-left {\\n  float: left; }\\n\\n.fa.pull-left, .pull-left.gg-icon-flat,\\n.pull-left.gg-icon-flat-light, .pull-left.gg-appbar-icon,\\n.pull-left.gg-searchbar-icon, .pull-left.gg-icon-chevron, .pull-left.gg-icon-comments, .pull-left.gg-icon-facebook, .pull-left.gg-icon-twitter {\\n  margin-right: .3em; }\\n\\n.fa.pull-right, .pull-right.gg-icon-flat,\\n.pull-right.gg-icon-flat-light, .pull-right.gg-appbar-icon,\\n.pull-right.gg-searchbar-icon, .pull-right.gg-icon-chevron, .pull-right.gg-icon-comments, .pull-right.gg-icon-facebook, .pull-right.gg-icon-twitter {\\n  margin-left: .3em; }\\n\\n.fa-spin {\\n  -webkit-animation: fa-spin 2s infinite linear;\\n  animation: fa-spin 2s infinite linear; }\\n\\n.fa-pulse {\\n  -webkit-animation: fa-spin 1s infinite steps(8);\\n  animation: fa-spin 1s infinite steps(8); }\\n\\n@-webkit-keyframes fa-spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(359deg);\\n    transform: rotate(359deg); } }\\n\\n@keyframes fa-spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(359deg);\\n    transform: rotate(359deg); } }\\n\\n.fa-rotate-90 {\\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1);\\n  -webkit-transform: rotate(90deg);\\n  transform: rotate(90deg); }\\n\\n.fa-rotate-180 {\\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);\\n  -webkit-transform: rotate(180deg);\\n  transform: rotate(180deg); }\\n\\n.fa-rotate-270 {\\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\\n  -webkit-transform: rotate(270deg);\\n  transform: rotate(270deg); }\\n\\n.fa-flip-horizontal {\\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=0);\\n  -webkit-transform: scale(-1, 1);\\n  transform: scale(-1, 1); }\\n\\n.fa-flip-vertical {\\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);\\n  -webkit-transform: scale(1, -1);\\n  transform: scale(1, -1); }\\n\\n:root .fa-rotate-90,\\n:root .fa-rotate-180,\\n:root .fa-rotate-270,\\n:root .fa-flip-horizontal,\\n:root .fa-flip-vertical {\\n  -webkit-filter: none;\\n          filter: none; }\\n\\n.fa-stack {\\n  position: relative;\\n  display: inline-block;\\n  width: 2em;\\n  height: 2em;\\n  line-height: 2em;\\n  vertical-align: middle; }\\n\\n.fa-stack-1x, .fa-stack-2x {\\n  position: absolute;\\n  left: 0;\\n  width: 100%;\\n  text-align: center; }\\n\\n.fa-stack-1x {\\n  line-height: inherit; }\\n\\n.fa-stack-2x {\\n  font-size: 2em; }\\n\\n.fa-inverse {\\n  color: #fff; }\\n\\n/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen\\r\\n   readers do not read off random characters that represent icons */\\n.fa-glass:before {\\n  content: \\\"\\\\F000\\\"; }\\n\\n.fa-music:before {\\n  content: \\\"\\\\F001\\\"; }\\n\\n.fa-search:before, .gg-appbar .gg-searchbar-toggle:before {\\n  content: \\\"\\\\F002\\\"; }\\n\\n.fa-envelope-o:before {\\n  content: \\\"\\\\F003\\\"; }\\n\\n.fa-heart:before {\\n  content: \\\"\\\\F004\\\"; }\\n\\n.fa-star:before {\\n  content: \\\"\\\\F005\\\"; }\\n\\n.fa-star-o:before {\\n  content: \\\"\\\\F006\\\"; }\\n\\n.fa-user:before {\\n  content: \\\"\\\\F007\\\"; }\\n\\n.fa-film:before {\\n  content: \\\"\\\\F008\\\"; }\\n\\n.fa-th-large:before {\\n  content: \\\"\\\\F009\\\"; }\\n\\n.fa-th:before {\\n  content: \\\"\\\\F00A\\\"; }\\n\\n.fa-th-list:before {\\n  content: \\\"\\\\F00B\\\"; }\\n\\n.fa-check:before {\\n  content: \\\"\\\\F00C\\\"; }\\n\\n.fa-remove:before,\\n.fa-close:before,\\n.fa-times:before,\\n.gg-searchbar-cancel:before {\\n  content: \\\"\\\\F00D\\\"; }\\n\\n.fa-search-plus:before {\\n  content: \\\"\\\\F00E\\\"; }\\n\\n.fa-search-minus:before {\\n  content: \\\"\\\\F010\\\"; }\\n\\n.fa-power-off:before {\\n  content: \\\"\\\\F011\\\"; }\\n\\n.fa-signal:before {\\n  content: \\\"\\\\F012\\\"; }\\n\\n.fa-gear:before,\\n.fa-cog:before {\\n  content: \\\"\\\\F013\\\"; }\\n\\n.fa-trash-o:before {\\n  content: \\\"\\\\F014\\\"; }\\n\\n.fa-home:before {\\n  content: \\\"\\\\F015\\\"; }\\n\\n.fa-file-o:before {\\n  content: \\\"\\\\F016\\\"; }\\n\\n.fa-clock-o:before {\\n  content: \\\"\\\\F017\\\"; }\\n\\n.fa-road:before {\\n  content: \\\"\\\\F018\\\"; }\\n\\n.fa-download:before {\\n  content: \\\"\\\\F019\\\"; }\\n\\n.fa-arrow-circle-o-down:before {\\n  content: \\\"\\\\F01A\\\"; }\\n\\n.fa-arrow-circle-o-up:before {\\n  content: \\\"\\\\F01B\\\"; }\\n\\n.fa-inbox:before {\\n  content: \\\"\\\\F01C\\\"; }\\n\\n.fa-play-circle-o:before {\\n  content: \\\"\\\\F01D\\\"; }\\n\\n.fa-rotate-right:before,\\n.fa-repeat:before {\\n  content: \\\"\\\\F01E\\\"; }\\n\\n.fa-refresh:before {\\n  content: \\\"\\\\F021\\\"; }\\n\\n.fa-list-alt:before {\\n  content: \\\"\\\\F022\\\"; }\\n\\n.fa-lock:before {\\n  content: \\\"\\\\F023\\\"; }\\n\\n.fa-flag:before {\\n  content: \\\"\\\\F024\\\"; }\\n\\n.fa-headphones:before {\\n  content: \\\"\\\\F025\\\"; }\\n\\n.fa-volume-off:before {\\n  content: \\\"\\\\F026\\\"; }\\n\\n.fa-volume-down:before {\\n  content: \\\"\\\\F027\\\"; }\\n\\n.fa-volume-up:before {\\n  content: \\\"\\\\F028\\\"; }\\n\\n.fa-qrcode:before {\\n  content: \\\"\\\\F029\\\"; }\\n\\n.fa-barcode:before {\\n  content: \\\"\\\\F02A\\\"; }\\n\\n.fa-tag:before {\\n  content: \\\"\\\\F02B\\\"; }\\n\\n.fa-tags:before, .gg-icon-tags:before {\\n  content: \\\"\\\\F02C\\\"; }\\n\\n.fa-book:before {\\n  content: \\\"\\\\F02D\\\"; }\\n\\n.fa-bookmark:before {\\n  content: \\\"\\\\F02E\\\"; }\\n\\n.fa-print:before {\\n  content: \\\"\\\\F02F\\\"; }\\n\\n.fa-camera:before {\\n  content: \\\"\\\\F030\\\"; }\\n\\n.fa-font:before {\\n  content: \\\"\\\\F031\\\"; }\\n\\n.fa-bold:before {\\n  content: \\\"\\\\F032\\\"; }\\n\\n.fa-italic:before {\\n  content: \\\"\\\\F033\\\"; }\\n\\n.fa-text-height:before {\\n  content: \\\"\\\\F034\\\"; }\\n\\n.fa-text-width:before {\\n  content: \\\"\\\\F035\\\"; }\\n\\n.fa-align-left:before {\\n  content: \\\"\\\\F036\\\"; }\\n\\n.fa-align-center:before {\\n  content: \\\"\\\\F037\\\"; }\\n\\n.fa-align-right:before {\\n  content: \\\"\\\\F038\\\"; }\\n\\n.fa-align-justify:before {\\n  content: \\\"\\\\F039\\\"; }\\n\\n.fa-list:before {\\n  content: \\\"\\\\F03A\\\"; }\\n\\n.fa-dedent:before,\\n.fa-outdent:before {\\n  content: \\\"\\\\F03B\\\"; }\\n\\n.fa-indent:before {\\n  content: \\\"\\\\F03C\\\"; }\\n\\n.fa-video-camera:before {\\n  content: \\\"\\\\F03D\\\"; }\\n\\n.fa-photo:before,\\n.fa-image:before,\\n.fa-picture-o:before {\\n  content: \\\"\\\\F03E\\\"; }\\n\\n.fa-pencil:before {\\n  content: \\\"\\\\F040\\\"; }\\n\\n.fa-map-marker:before {\\n  content: \\\"\\\\F041\\\"; }\\n\\n.fa-adjust:before {\\n  content: \\\"\\\\F042\\\"; }\\n\\n.fa-tint:before {\\n  content: \\\"\\\\F043\\\"; }\\n\\n.fa-edit:before,\\n.fa-pencil-square-o:before {\\n  content: \\\"\\\\F044\\\"; }\\n\\n.fa-share-square-o:before {\\n  content: \\\"\\\\F045\\\"; }\\n\\n.fa-check-square-o:before {\\n  content: \\\"\\\\F046\\\"; }\\n\\n.fa-arrows:before {\\n  content: \\\"\\\\F047\\\"; }\\n\\n.fa-step-backward:before {\\n  content: \\\"\\\\F048\\\"; }\\n\\n.fa-fast-backward:before {\\n  content: \\\"\\\\F049\\\"; }\\n\\n.fa-backward:before {\\n  content: \\\"\\\\F04A\\\"; }\\n\\n.fa-play:before {\\n  content: \\\"\\\\F04B\\\"; }\\n\\n.fa-pause:before {\\n  content: \\\"\\\\F04C\\\"; }\\n\\n.fa-stop:before {\\n  content: \\\"\\\\F04D\\\"; }\\n\\n.fa-forward:before {\\n  content: \\\"\\\\F04E\\\"; }\\n\\n.fa-fast-forward:before {\\n  content: \\\"\\\\F050\\\"; }\\n\\n.fa-step-forward:before {\\n  content: \\\"\\\\F051\\\"; }\\n\\n.fa-eject:before {\\n  content: \\\"\\\\F052\\\"; }\\n\\n.fa-chevron-left:before {\\n  content: \\\"\\\\F053\\\"; }\\n\\n.fa-chevron-right:before {\\n  content: \\\"\\\\F054\\\"; }\\n\\n.fa-plus-circle:before {\\n  content: \\\"\\\\F055\\\"; }\\n\\n.fa-minus-circle:before {\\n  content: \\\"\\\\F056\\\"; }\\n\\n.fa-times-circle:before {\\n  content: \\\"\\\\F057\\\"; }\\n\\n.fa-check-circle:before {\\n  content: \\\"\\\\F058\\\"; }\\n\\n.fa-question-circle:before {\\n  content: \\\"\\\\F059\\\"; }\\n\\n.fa-info-circle:before {\\n  content: \\\"\\\\F05A\\\"; }\\n\\n.fa-crosshairs:before {\\n  content: \\\"\\\\F05B\\\"; }\\n\\n.fa-times-circle-o:before {\\n  content: \\\"\\\\F05C\\\"; }\\n\\n.fa-check-circle-o:before {\\n  content: \\\"\\\\F05D\\\"; }\\n\\n.fa-ban:before {\\n  content: \\\"\\\\F05E\\\"; }\\n\\n.fa-arrow-left:before, .gg-searchbar .gg-searchbar-toggle:before {\\n  content: \\\"\\\\F060\\\"; }\\n\\n.fa-arrow-right:before {\\n  content: \\\"\\\\F061\\\"; }\\n\\n.fa-arrow-up:before {\\n  content: \\\"\\\\F062\\\"; }\\n\\n.fa-arrow-down:before {\\n  content: \\\"\\\\F063\\\"; }\\n\\n.fa-mail-forward:before,\\n.fa-share:before,\\n.gg-appbar-menu-toggle:before {\\n  content: \\\"\\\\F064\\\"; }\\n\\n.fa-expand:before {\\n  content: \\\"\\\\F065\\\"; }\\n\\n.fa-compress:before {\\n  content: \\\"\\\\F066\\\"; }\\n\\n.fa-plus:before {\\n  content: \\\"\\\\F067\\\"; }\\n\\n.fa-minus:before {\\n  content: \\\"\\\\F068\\\"; }\\n\\n.fa-asterisk:before {\\n  content: \\\"\\\\F069\\\"; }\\n\\n.fa-exclamation-circle:before {\\n  content: \\\"\\\\F06A\\\"; }\\n\\n.fa-gift:before {\\n  content: \\\"\\\\F06B\\\"; }\\n\\n.fa-leaf:before {\\n  content: \\\"\\\\F06C\\\"; }\\n\\n.fa-fire:before {\\n  content: \\\"\\\\F06D\\\"; }\\n\\n.fa-eye:before {\\n  content: \\\"\\\\F06E\\\"; }\\n\\n.fa-eye-slash:before {\\n  content: \\\"\\\\F070\\\"; }\\n\\n.fa-warning:before,\\n.fa-exclamation-triangle:before {\\n  content: \\\"\\\\F071\\\"; }\\n\\n.fa-plane:before {\\n  content: \\\"\\\\F072\\\"; }\\n\\n.fa-calendar:before {\\n  content: \\\"\\\\F073\\\"; }\\n\\n.fa-random:before {\\n  content: \\\"\\\\F074\\\"; }\\n\\n.fa-comment:before {\\n  content: \\\"\\\\F075\\\"; }\\n\\n.fa-magnet:before {\\n  content: \\\"\\\\F076\\\"; }\\n\\n.fa-chevron-up:before, .gg-icon-chevron:before {\\n  content: \\\"\\\\F077\\\"; }\\n\\n.fa-chevron-down:before {\\n  content: \\\"\\\\F078\\\"; }\\n\\n.fa-retweet:before {\\n  content: \\\"\\\\F079\\\"; }\\n\\n.fa-shopping-cart:before {\\n  content: \\\"\\\\F07A\\\"; }\\n\\n.fa-folder:before {\\n  content: \\\"\\\\F07B\\\"; }\\n\\n.fa-folder-open:before {\\n  content: \\\"\\\\F07C\\\"; }\\n\\n.fa-arrows-v:before {\\n  content: \\\"\\\\F07D\\\"; }\\n\\n.fa-arrows-h:before {\\n  content: \\\"\\\\F07E\\\"; }\\n\\n.fa-bar-chart-o:before,\\n.fa-bar-chart:before {\\n  content: \\\"\\\\F080\\\"; }\\n\\n.fa-twitter-square:before {\\n  content: \\\"\\\\F081\\\"; }\\n\\n.fa-facebook-square:before {\\n  content: \\\"\\\\F082\\\"; }\\n\\n.fa-camera-retro:before {\\n  content: \\\"\\\\F083\\\"; }\\n\\n.fa-key:before {\\n  content: \\\"\\\\F084\\\"; }\\n\\n.fa-gears:before,\\n.fa-cogs:before {\\n  content: \\\"\\\\F085\\\"; }\\n\\n.fa-comments:before {\\n  content: \\\"\\\\F086\\\"; }\\n\\n.fa-thumbs-o-up:before {\\n  content: \\\"\\\\F087\\\"; }\\n\\n.fa-thumbs-o-down:before {\\n  content: \\\"\\\\F088\\\"; }\\n\\n.fa-star-half:before {\\n  content: \\\"\\\\F089\\\"; }\\n\\n.fa-heart-o:before {\\n  content: \\\"\\\\F08A\\\"; }\\n\\n.fa-sign-out:before {\\n  content: \\\"\\\\F08B\\\"; }\\n\\n.fa-linkedin-square:before {\\n  content: \\\"\\\\F08C\\\"; }\\n\\n.fa-thumb-tack:before {\\n  content: \\\"\\\\F08D\\\"; }\\n\\n.fa-external-link:before {\\n  content: \\\"\\\\F08E\\\"; }\\n\\n.fa-sign-in:before {\\n  content: \\\"\\\\F090\\\"; }\\n\\n.fa-trophy:before {\\n  content: \\\"\\\\F091\\\"; }\\n\\n.fa-github-square:before {\\n  content: \\\"\\\\F092\\\"; }\\n\\n.fa-upload:before {\\n  content: \\\"\\\\F093\\\"; }\\n\\n.fa-lemon-o:before {\\n  content: \\\"\\\\F094\\\"; }\\n\\n.fa-phone:before {\\n  content: \\\"\\\\F095\\\"; }\\n\\n.fa-square-o:before {\\n  content: \\\"\\\\F096\\\"; }\\n\\n.fa-bookmark-o:before {\\n  content: \\\"\\\\F097\\\"; }\\n\\n.fa-phone-square:before {\\n  content: \\\"\\\\F098\\\"; }\\n\\n.fa-twitter:before, .gg-icon-twitter:before {\\n  content: \\\"\\\\F099\\\"; }\\n\\n.fa-facebook-f:before,\\n.fa-facebook:before {\\n  content: \\\"\\\\F09A\\\"; }\\n\\n.fa-github:before {\\n  content: \\\"\\\\F09B\\\"; }\\n\\n.fa-unlock:before {\\n  content: \\\"\\\\F09C\\\"; }\\n\\n.fa-credit-card:before {\\n  content: \\\"\\\\F09D\\\"; }\\n\\n.fa-feed:before,\\n.fa-rss:before {\\n  content: \\\"\\\\F09E\\\"; }\\n\\n.fa-hdd-o:before {\\n  content: \\\"\\\\F0A0\\\"; }\\n\\n.fa-bullhorn:before {\\n  content: \\\"\\\\F0A1\\\"; }\\n\\n.fa-bell:before {\\n  content: \\\"\\\\F0F3\\\"; }\\n\\n.fa-certificate:before {\\n  content: \\\"\\\\F0A3\\\"; }\\n\\n.fa-hand-o-right:before {\\n  content: \\\"\\\\F0A4\\\"; }\\n\\n.fa-hand-o-left:before {\\n  content: \\\"\\\\F0A5\\\"; }\\n\\n.fa-hand-o-up:before {\\n  content: \\\"\\\\F0A6\\\"; }\\n\\n.fa-hand-o-down:before {\\n  content: \\\"\\\\F0A7\\\"; }\\n\\n.fa-arrow-circle-left:before {\\n  content: \\\"\\\\F0A8\\\"; }\\n\\n.fa-arrow-circle-right:before {\\n  content: \\\"\\\\F0A9\\\"; }\\n\\n.fa-arrow-circle-up:before {\\n  content: \\\"\\\\F0AA\\\"; }\\n\\n.fa-arrow-circle-down:before {\\n  content: \\\"\\\\F0AB\\\"; }\\n\\n.fa-globe:before {\\n  content: \\\"\\\\F0AC\\\"; }\\n\\n.fa-wrench:before {\\n  content: \\\"\\\\F0AD\\\"; }\\n\\n.fa-tasks:before {\\n  content: \\\"\\\\F0AE\\\"; }\\n\\n.fa-filter:before {\\n  content: \\\"\\\\F0B0\\\"; }\\n\\n.fa-briefcase:before {\\n  content: \\\"\\\\F0B1\\\"; }\\n\\n.fa-arrows-alt:before {\\n  content: \\\"\\\\F0B2\\\"; }\\n\\n.fa-group:before,\\n.fa-users:before {\\n  content: \\\"\\\\F0C0\\\"; }\\n\\n.fa-chain:before,\\n.fa-link:before {\\n  content: \\\"\\\\F0C1\\\"; }\\n\\n.fa-cloud:before {\\n  content: \\\"\\\\F0C2\\\"; }\\n\\n.fa-flask:before {\\n  content: \\\"\\\\F0C3\\\"; }\\n\\n.fa-cut:before,\\n.fa-scissors:before {\\n  content: \\\"\\\\F0C4\\\"; }\\n\\n.fa-copy:before,\\n.fa-files-o:before {\\n  content: \\\"\\\\F0C5\\\"; }\\n\\n.fa-paperclip:before {\\n  content: \\\"\\\\F0C6\\\"; }\\n\\n.fa-save:before,\\n.fa-floppy-o:before {\\n  content: \\\"\\\\F0C7\\\"; }\\n\\n.fa-square:before {\\n  content: \\\"\\\\F0C8\\\"; }\\n\\n.fa-navicon:before,\\n.fa-reorder:before,\\n.fa-bars:before,\\n.gg-drawer-toggle:before {\\n  content: \\\"\\\\F0C9\\\"; }\\n\\n.fa-list-ul:before {\\n  content: \\\"\\\\F0CA\\\"; }\\n\\n.fa-list-ol:before {\\n  content: \\\"\\\\F0CB\\\"; }\\n\\n.fa-strikethrough:before {\\n  content: \\\"\\\\F0CC\\\"; }\\n\\n.fa-underline:before {\\n  content: \\\"\\\\F0CD\\\"; }\\n\\n.fa-table:before {\\n  content: \\\"\\\\F0CE\\\"; }\\n\\n.fa-magic:before {\\n  content: \\\"\\\\F0D0\\\"; }\\n\\n.fa-truck:before {\\n  content: \\\"\\\\F0D1\\\"; }\\n\\n.fa-pinterest:before {\\n  content: \\\"\\\\F0D2\\\"; }\\n\\n.fa-pinterest-square:before {\\n  content: \\\"\\\\F0D3\\\"; }\\n\\n.fa-google-plus-square:before {\\n  content: \\\"\\\\F0D4\\\"; }\\n\\n.fa-google-plus:before {\\n  content: \\\"\\\\F0D5\\\"; }\\n\\n.fa-money:before {\\n  content: \\\"\\\\F0D6\\\"; }\\n\\n.fa-caret-down:before {\\n  content: \\\"\\\\F0D7\\\"; }\\n\\n.fa-caret-up:before {\\n  content: \\\"\\\\F0D8\\\"; }\\n\\n.fa-caret-left:before {\\n  content: \\\"\\\\F0D9\\\"; }\\n\\n.fa-caret-right:before {\\n  content: \\\"\\\\F0DA\\\"; }\\n\\n.fa-columns:before {\\n  content: \\\"\\\\F0DB\\\"; }\\n\\n.fa-unsorted:before,\\n.fa-sort:before {\\n  content: \\\"\\\\F0DC\\\"; }\\n\\n.fa-sort-down:before,\\n.fa-sort-desc:before {\\n  content: \\\"\\\\F0DD\\\"; }\\n\\n.fa-sort-up:before,\\n.fa-sort-asc:before {\\n  content: \\\"\\\\F0DE\\\"; }\\n\\n.fa-envelope:before {\\n  content: \\\"\\\\F0E0\\\"; }\\n\\n.fa-linkedin:before {\\n  content: \\\"\\\\F0E1\\\"; }\\n\\n.fa-rotate-left:before,\\n.fa-undo:before {\\n  content: \\\"\\\\F0E2\\\"; }\\n\\n.fa-legal:before,\\n.fa-gavel:before,\\n.gg-icon-comments:before {\\n  content: \\\"\\\\F0E3\\\"; }\\n\\n.fa-dashboard:before,\\n.fa-tachometer:before {\\n  content: \\\"\\\\F0E4\\\"; }\\n\\n.fa-comment-o:before {\\n  content: \\\"\\\\F0E5\\\"; }\\n\\n.fa-comments-o:before {\\n  content: \\\"\\\\F0E6\\\"; }\\n\\n.fa-flash:before,\\n.fa-bolt:before {\\n  content: \\\"\\\\F0E7\\\"; }\\n\\n.fa-sitemap:before {\\n  content: \\\"\\\\F0E8\\\"; }\\n\\n.fa-umbrella:before {\\n  content: \\\"\\\\F0E9\\\"; }\\n\\n.fa-paste:before,\\n.fa-clipboard:before {\\n  content: \\\"\\\\F0EA\\\"; }\\n\\n.fa-lightbulb-o:before {\\n  content: \\\"\\\\F0EB\\\"; }\\n\\n.fa-exchange:before {\\n  content: \\\"\\\\F0EC\\\"; }\\n\\n.fa-cloud-download:before {\\n  content: \\\"\\\\F0ED\\\"; }\\n\\n.fa-cloud-upload:before {\\n  content: \\\"\\\\F0EE\\\"; }\\n\\n.fa-user-md:before {\\n  content: \\\"\\\\F0F0\\\"; }\\n\\n.fa-stethoscope:before {\\n  content: \\\"\\\\F0F1\\\"; }\\n\\n.fa-suitcase:before {\\n  content: \\\"\\\\F0F2\\\"; }\\n\\n.fa-bell-o:before {\\n  content: \\\"\\\\F0A2\\\"; }\\n\\n.fa-coffee:before {\\n  content: \\\"\\\\F0F4\\\"; }\\n\\n.fa-cutlery:before {\\n  content: \\\"\\\\F0F5\\\"; }\\n\\n.fa-file-text-o:before {\\n  content: \\\"\\\\F0F6\\\"; }\\n\\n.fa-building-o:before {\\n  content: \\\"\\\\F0F7\\\"; }\\n\\n.fa-hospital-o:before {\\n  content: \\\"\\\\F0F8\\\"; }\\n\\n.fa-ambulance:before {\\n  content: \\\"\\\\F0F9\\\"; }\\n\\n.fa-medkit:before {\\n  content: \\\"\\\\F0FA\\\"; }\\n\\n.fa-fighter-jet:before {\\n  content: \\\"\\\\F0FB\\\"; }\\n\\n.fa-beer:before {\\n  content: \\\"\\\\F0FC\\\"; }\\n\\n.fa-h-square:before {\\n  content: \\\"\\\\F0FD\\\"; }\\n\\n.fa-plus-square:before {\\n  content: \\\"\\\\F0FE\\\"; }\\n\\n.fa-angle-double-left:before {\\n  content: \\\"\\\\F100\\\"; }\\n\\n.fa-angle-double-right:before {\\n  content: \\\"\\\\F101\\\"; }\\n\\n.fa-angle-double-up:before {\\n  content: \\\"\\\\F102\\\"; }\\n\\n.fa-angle-double-down:before {\\n  content: \\\"\\\\F103\\\"; }\\n\\n.fa-angle-left:before {\\n  content: \\\"\\\\F104\\\"; }\\n\\n.fa-angle-right:before {\\n  content: \\\"\\\\F105\\\"; }\\n\\n.fa-angle-up:before {\\n  content: \\\"\\\\F106\\\"; }\\n\\n.fa-angle-down:before {\\n  content: \\\"\\\\F107\\\"; }\\n\\n.fa-desktop:before {\\n  content: \\\"\\\\F108\\\"; }\\n\\n.fa-laptop:before {\\n  content: \\\"\\\\F109\\\"; }\\n\\n.fa-tablet:before {\\n  content: \\\"\\\\F10A\\\"; }\\n\\n.fa-mobile-phone:before,\\n.fa-mobile:before {\\n  content: \\\"\\\\F10B\\\"; }\\n\\n.fa-circle-o:before {\\n  content: \\\"\\\\F10C\\\"; }\\n\\n.fa-quote-left:before {\\n  content: \\\"\\\\F10D\\\"; }\\n\\n.fa-quote-right:before {\\n  content: \\\"\\\\F10E\\\"; }\\n\\n.fa-spinner:before {\\n  content: \\\"\\\\F110\\\"; }\\n\\n.fa-circle:before {\\n  content: \\\"\\\\F111\\\"; }\\n\\n.fa-mail-reply:before,\\n.fa-reply:before {\\n  content: \\\"\\\\F112\\\"; }\\n\\n.fa-github-alt:before {\\n  content: \\\"\\\\F113\\\"; }\\n\\n.fa-folder-o:before {\\n  content: \\\"\\\\F114\\\"; }\\n\\n.fa-folder-open-o:before {\\n  content: \\\"\\\\F115\\\"; }\\n\\n.fa-smile-o:before {\\n  content: \\\"\\\\F118\\\"; }\\n\\n.fa-frown-o:before {\\n  content: \\\"\\\\F119\\\"; }\\n\\n.fa-meh-o:before {\\n  content: \\\"\\\\F11A\\\"; }\\n\\n.fa-gamepad:before {\\n  content: \\\"\\\\F11B\\\"; }\\n\\n.fa-keyboard-o:before {\\n  content: \\\"\\\\F11C\\\"; }\\n\\n.fa-flag-o:before {\\n  content: \\\"\\\\F11D\\\"; }\\n\\n.fa-flag-checkered:before {\\n  content: \\\"\\\\F11E\\\"; }\\n\\n.fa-terminal:before {\\n  content: \\\"\\\\F120\\\"; }\\n\\n.fa-code:before {\\n  content: \\\"\\\\F121\\\"; }\\n\\n.fa-mail-reply-all:before,\\n.fa-reply-all:before {\\n  content: \\\"\\\\F122\\\"; }\\n\\n.fa-star-half-empty:before,\\n.fa-star-half-full:before,\\n.fa-star-half-o:before {\\n  content: \\\"\\\\F123\\\"; }\\n\\n.fa-location-arrow:before {\\n  content: \\\"\\\\F124\\\"; }\\n\\n.fa-crop:before {\\n  content: \\\"\\\\F125\\\"; }\\n\\n.fa-code-fork:before {\\n  content: \\\"\\\\F126\\\"; }\\n\\n.fa-unlink:before,\\n.fa-chain-broken:before {\\n  content: \\\"\\\\F127\\\"; }\\n\\n.fa-question:before {\\n  content: \\\"\\\\F128\\\"; }\\n\\n.fa-info:before {\\n  content: \\\"\\\\F129\\\"; }\\n\\n.fa-exclamation:before {\\n  content: \\\"\\\\F12A\\\"; }\\n\\n.fa-superscript:before {\\n  content: \\\"\\\\F12B\\\"; }\\n\\n.fa-subscript:before {\\n  content: \\\"\\\\F12C\\\"; }\\n\\n.fa-eraser:before {\\n  content: \\\"\\\\F12D\\\"; }\\n\\n.fa-puzzle-piece:before {\\n  content: \\\"\\\\F12E\\\"; }\\n\\n.fa-microphone:before {\\n  content: \\\"\\\\F130\\\"; }\\n\\n.fa-microphone-slash:before {\\n  content: \\\"\\\\F131\\\"; }\\n\\n.fa-shield:before {\\n  content: \\\"\\\\F132\\\"; }\\n\\n.fa-calendar-o:before {\\n  content: \\\"\\\\F133\\\"; }\\n\\n.fa-fire-extinguisher:before {\\n  content: \\\"\\\\F134\\\"; }\\n\\n.fa-rocket:before {\\n  content: \\\"\\\\F135\\\"; }\\n\\n.fa-maxcdn:before {\\n  content: \\\"\\\\F136\\\"; }\\n\\n.fa-chevron-circle-left:before {\\n  content: \\\"\\\\F137\\\"; }\\n\\n.fa-chevron-circle-right:before {\\n  content: \\\"\\\\F138\\\"; }\\n\\n.fa-chevron-circle-up:before {\\n  content: \\\"\\\\F139\\\"; }\\n\\n.fa-chevron-circle-down:before {\\n  content: \\\"\\\\F13A\\\"; }\\n\\n.fa-html5:before {\\n  content: \\\"\\\\F13B\\\"; }\\n\\n.fa-css3:before {\\n  content: \\\"\\\\F13C\\\"; }\\n\\n.fa-anchor:before {\\n  content: \\\"\\\\F13D\\\"; }\\n\\n.fa-unlock-alt:before {\\n  content: \\\"\\\\F13E\\\"; }\\n\\n.fa-bullseye:before {\\n  content: \\\"\\\\F140\\\"; }\\n\\n.fa-ellipsis-h:before {\\n  content: \\\"\\\\F141\\\"; }\\n\\n.fa-ellipsis-v:before {\\n  content: \\\"\\\\F142\\\"; }\\n\\n.fa-rss-square:before {\\n  content: \\\"\\\\F143\\\"; }\\n\\n.fa-play-circle:before {\\n  content: \\\"\\\\F144\\\"; }\\n\\n.fa-ticket:before {\\n  content: \\\"\\\\F145\\\"; }\\n\\n.fa-minus-square:before {\\n  content: \\\"\\\\F146\\\"; }\\n\\n.fa-minus-square-o:before {\\n  content: \\\"\\\\F147\\\"; }\\n\\n.fa-level-up:before {\\n  content: \\\"\\\\F148\\\"; }\\n\\n.fa-level-down:before {\\n  content: \\\"\\\\F149\\\"; }\\n\\n.fa-check-square:before {\\n  content: \\\"\\\\F14A\\\"; }\\n\\n.fa-pencil-square:before {\\n  content: \\\"\\\\F14B\\\"; }\\n\\n.fa-external-link-square:before {\\n  content: \\\"\\\\F14C\\\"; }\\n\\n.fa-share-square:before {\\n  content: \\\"\\\\F14D\\\"; }\\n\\n.fa-compass:before {\\n  content: \\\"\\\\F14E\\\"; }\\n\\n.fa-toggle-down:before,\\n.fa-caret-square-o-down:before {\\n  content: \\\"\\\\F150\\\"; }\\n\\n.fa-toggle-up:before,\\n.fa-caret-square-o-up:before {\\n  content: \\\"\\\\F151\\\"; }\\n\\n.fa-toggle-right:before,\\n.fa-caret-square-o-right:before {\\n  content: \\\"\\\\F152\\\"; }\\n\\n.fa-euro:before,\\n.fa-eur:before {\\n  content: \\\"\\\\F153\\\"; }\\n\\n.fa-gbp:before {\\n  content: \\\"\\\\F154\\\"; }\\n\\n.fa-dollar:before,\\n.fa-usd:before {\\n  content: \\\"\\\\F155\\\"; }\\n\\n.fa-rupee:before,\\n.fa-inr:before {\\n  content: \\\"\\\\F156\\\"; }\\n\\n.fa-cny:before,\\n.fa-rmb:before,\\n.fa-yen:before,\\n.fa-jpy:before {\\n  content: \\\"\\\\F157\\\"; }\\n\\n.fa-ruble:before,\\n.fa-rouble:before,\\n.fa-rub:before {\\n  content: \\\"\\\\F158\\\"; }\\n\\n.fa-won:before,\\n.fa-krw:before {\\n  content: \\\"\\\\F159\\\"; }\\n\\n.fa-bitcoin:before,\\n.fa-btc:before {\\n  content: \\\"\\\\F15A\\\"; }\\n\\n.fa-file:before {\\n  content: \\\"\\\\F15B\\\"; }\\n\\n.fa-file-text:before {\\n  content: \\\"\\\\F15C\\\"; }\\n\\n.fa-sort-alpha-asc:before {\\n  content: \\\"\\\\F15D\\\"; }\\n\\n.fa-sort-alpha-desc:before {\\n  content: \\\"\\\\F15E\\\"; }\\n\\n.fa-sort-amount-asc:before {\\n  content: \\\"\\\\F160\\\"; }\\n\\n.fa-sort-amount-desc:before {\\n  content: \\\"\\\\F161\\\"; }\\n\\n.fa-sort-numeric-asc:before {\\n  content: \\\"\\\\F162\\\"; }\\n\\n.fa-sort-numeric-desc:before {\\n  content: \\\"\\\\F163\\\"; }\\n\\n.fa-thumbs-up:before {\\n  content: \\\"\\\\F164\\\"; }\\n\\n.fa-thumbs-down:before {\\n  content: \\\"\\\\F165\\\"; }\\n\\n.fa-youtube-square:before {\\n  content: \\\"\\\\F166\\\"; }\\n\\n.fa-youtube:before {\\n  content: \\\"\\\\F167\\\"; }\\n\\n.fa-xing:before {\\n  content: \\\"\\\\F168\\\"; }\\n\\n.fa-xing-square:before {\\n  content: \\\"\\\\F169\\\"; }\\n\\n.fa-youtube-play:before {\\n  content: \\\"\\\\F16A\\\"; }\\n\\n.fa-dropbox:before {\\n  content: \\\"\\\\F16B\\\"; }\\n\\n.fa-stack-overflow:before {\\n  content: \\\"\\\\F16C\\\"; }\\n\\n.fa-instagram:before {\\n  content: \\\"\\\\F16D\\\"; }\\n\\n.fa-flickr:before {\\n  content: \\\"\\\\F16E\\\"; }\\n\\n.fa-adn:before {\\n  content: \\\"\\\\F170\\\"; }\\n\\n.fa-bitbucket:before {\\n  content: \\\"\\\\F171\\\"; }\\n\\n.fa-bitbucket-square:before {\\n  content: \\\"\\\\F172\\\"; }\\n\\n.fa-tumblr:before {\\n  content: \\\"\\\\F173\\\"; }\\n\\n.fa-tumblr-square:before {\\n  content: \\\"\\\\F174\\\"; }\\n\\n.fa-long-arrow-down:before {\\n  content: \\\"\\\\F175\\\"; }\\n\\n.fa-long-arrow-up:before {\\n  content: \\\"\\\\F176\\\"; }\\n\\n.fa-long-arrow-left:before {\\n  content: \\\"\\\\F177\\\"; }\\n\\n.fa-long-arrow-right:before {\\n  content: \\\"\\\\F178\\\"; }\\n\\n.fa-apple:before {\\n  content: \\\"\\\\F179\\\"; }\\n\\n.fa-windows:before {\\n  content: \\\"\\\\F17A\\\"; }\\n\\n.fa-android:before {\\n  content: \\\"\\\\F17B\\\"; }\\n\\n.fa-linux:before {\\n  content: \\\"\\\\F17C\\\"; }\\n\\n.fa-dribbble:before {\\n  content: \\\"\\\\F17D\\\"; }\\n\\n.fa-skype:before {\\n  content: \\\"\\\\F17E\\\"; }\\n\\n.fa-foursquare:before {\\n  content: \\\"\\\\F180\\\"; }\\n\\n.fa-trello:before {\\n  content: \\\"\\\\F181\\\"; }\\n\\n.fa-female:before {\\n  content: \\\"\\\\F182\\\"; }\\n\\n.fa-male:before {\\n  content: \\\"\\\\F183\\\"; }\\n\\n.fa-gittip:before,\\n.fa-gratipay:before {\\n  content: \\\"\\\\F184\\\"; }\\n\\n.fa-sun-o:before {\\n  content: \\\"\\\\F185\\\"; }\\n\\n.fa-moon-o:before {\\n  content: \\\"\\\\F186\\\"; }\\n\\n.fa-archive:before {\\n  content: \\\"\\\\F187\\\"; }\\n\\n.fa-bug:before {\\n  content: \\\"\\\\F188\\\"; }\\n\\n.fa-vk:before {\\n  content: \\\"\\\\F189\\\"; }\\n\\n.fa-weibo:before {\\n  content: \\\"\\\\F18A\\\"; }\\n\\n.fa-renren:before {\\n  content: \\\"\\\\F18B\\\"; }\\n\\n.fa-pagelines:before {\\n  content: \\\"\\\\F18C\\\"; }\\n\\n.fa-stack-exchange:before {\\n  content: \\\"\\\\F18D\\\"; }\\n\\n.fa-arrow-circle-o-right:before {\\n  content: \\\"\\\\F18E\\\"; }\\n\\n.fa-arrow-circle-o-left:before {\\n  content: \\\"\\\\F190\\\"; }\\n\\n.fa-toggle-left:before,\\n.fa-caret-square-o-left:before {\\n  content: \\\"\\\\F191\\\"; }\\n\\n.fa-dot-circle-o:before {\\n  content: \\\"\\\\F192\\\"; }\\n\\n.fa-wheelchair:before {\\n  content: \\\"\\\\F193\\\"; }\\n\\n.fa-vimeo-square:before {\\n  content: \\\"\\\\F194\\\"; }\\n\\n.fa-turkish-lira:before,\\n.fa-try:before {\\n  content: \\\"\\\\F195\\\"; }\\n\\n.fa-plus-square-o:before {\\n  content: \\\"\\\\F196\\\"; }\\n\\n.fa-space-shuttle:before {\\n  content: \\\"\\\\F197\\\"; }\\n\\n.fa-slack:before {\\n  content: \\\"\\\\F198\\\"; }\\n\\n.fa-envelope-square:before {\\n  content: \\\"\\\\F199\\\"; }\\n\\n.fa-wordpress:before {\\n  content: \\\"\\\\F19A\\\"; }\\n\\n.fa-openid:before {\\n  content: \\\"\\\\F19B\\\"; }\\n\\n.fa-institution:before,\\n.fa-bank:before,\\n.fa-university:before {\\n  content: \\\"\\\\F19C\\\"; }\\n\\n.fa-mortar-board:before,\\n.fa-graduation-cap:before {\\n  content: \\\"\\\\F19D\\\"; }\\n\\n.fa-yahoo:before {\\n  content: \\\"\\\\F19E\\\"; }\\n\\n.fa-google:before {\\n  content: \\\"\\\\F1A0\\\"; }\\n\\n.fa-reddit:before {\\n  content: \\\"\\\\F1A1\\\"; }\\n\\n.fa-reddit-square:before {\\n  content: \\\"\\\\F1A2\\\"; }\\n\\n.fa-stumbleupon-circle:before {\\n  content: \\\"\\\\F1A3\\\"; }\\n\\n.fa-stumbleupon:before {\\n  content: \\\"\\\\F1A4\\\"; }\\n\\n.fa-delicious:before {\\n  content: \\\"\\\\F1A5\\\"; }\\n\\n.fa-digg:before {\\n  content: \\\"\\\\F1A6\\\"; }\\n\\n.fa-pied-piper:before {\\n  content: \\\"\\\\F1A7\\\"; }\\n\\n.fa-pied-piper-alt:before {\\n  content: \\\"\\\\F1A8\\\"; }\\n\\n.fa-drupal:before {\\n  content: \\\"\\\\F1A9\\\"; }\\n\\n.fa-joomla:before {\\n  content: \\\"\\\\F1AA\\\"; }\\n\\n.fa-language:before {\\n  content: \\\"\\\\F1AB\\\"; }\\n\\n.fa-fax:before {\\n  content: \\\"\\\\F1AC\\\"; }\\n\\n.fa-building:before {\\n  content: \\\"\\\\F1AD\\\"; }\\n\\n.fa-child:before {\\n  content: \\\"\\\\F1AE\\\"; }\\n\\n.fa-paw:before {\\n  content: \\\"\\\\F1B0\\\"; }\\n\\n.fa-spoon:before {\\n  content: \\\"\\\\F1B1\\\"; }\\n\\n.fa-cube:before {\\n  content: \\\"\\\\F1B2\\\"; }\\n\\n.fa-cubes:before {\\n  content: \\\"\\\\F1B3\\\"; }\\n\\n.fa-behance:before {\\n  content: \\\"\\\\F1B4\\\"; }\\n\\n.fa-behance-square:before {\\n  content: \\\"\\\\F1B5\\\"; }\\n\\n.fa-steam:before {\\n  content: \\\"\\\\F1B6\\\"; }\\n\\n.fa-steam-square:before {\\n  content: \\\"\\\\F1B7\\\"; }\\n\\n.fa-recycle:before {\\n  content: \\\"\\\\F1B8\\\"; }\\n\\n.fa-automobile:before,\\n.fa-car:before {\\n  content: \\\"\\\\F1B9\\\"; }\\n\\n.fa-cab:before,\\n.fa-taxi:before {\\n  content: \\\"\\\\F1BA\\\"; }\\n\\n.fa-tree:before {\\n  content: \\\"\\\\F1BB\\\"; }\\n\\n.fa-spotify:before {\\n  content: \\\"\\\\F1BC\\\"; }\\n\\n.fa-deviantart:before {\\n  content: \\\"\\\\F1BD\\\"; }\\n\\n.fa-soundcloud:before {\\n  content: \\\"\\\\F1BE\\\"; }\\n\\n.fa-database:before {\\n  content: \\\"\\\\F1C0\\\"; }\\n\\n.fa-file-pdf-o:before {\\n  content: \\\"\\\\F1C1\\\"; }\\n\\n.fa-file-word-o:before {\\n  content: \\\"\\\\F1C2\\\"; }\\n\\n.fa-file-excel-o:before {\\n  content: \\\"\\\\F1C3\\\"; }\\n\\n.fa-file-powerpoint-o:before {\\n  content: \\\"\\\\F1C4\\\"; }\\n\\n.fa-file-photo-o:before,\\n.fa-file-picture-o:before,\\n.fa-file-image-o:before {\\n  content: \\\"\\\\F1C5\\\"; }\\n\\n.fa-file-zip-o:before,\\n.fa-file-archive-o:before {\\n  content: \\\"\\\\F1C6\\\"; }\\n\\n.fa-file-sound-o:before,\\n.fa-file-audio-o:before {\\n  content: \\\"\\\\F1C7\\\"; }\\n\\n.fa-file-movie-o:before,\\n.fa-file-video-o:before {\\n  content: \\\"\\\\F1C8\\\"; }\\n\\n.fa-file-code-o:before {\\n  content: \\\"\\\\F1C9\\\"; }\\n\\n.fa-vine:before {\\n  content: \\\"\\\\F1CA\\\"; }\\n\\n.fa-codepen:before {\\n  content: \\\"\\\\F1CB\\\"; }\\n\\n.fa-jsfiddle:before {\\n  content: \\\"\\\\F1CC\\\"; }\\n\\n.fa-life-bouy:before,\\n.fa-life-buoy:before,\\n.fa-life-saver:before,\\n.fa-support:before,\\n.fa-life-ring:before {\\n  content: \\\"\\\\F1CD\\\"; }\\n\\n.fa-circle-o-notch:before {\\n  content: \\\"\\\\F1CE\\\"; }\\n\\n.fa-ra:before,\\n.fa-rebel:before {\\n  content: \\\"\\\\F1D0\\\"; }\\n\\n.fa-ge:before,\\n.fa-empire:before {\\n  content: \\\"\\\\F1D1\\\"; }\\n\\n.fa-git-square:before {\\n  content: \\\"\\\\F1D2\\\"; }\\n\\n.fa-git:before {\\n  content: \\\"\\\\F1D3\\\"; }\\n\\n.fa-y-combinator-square:before,\\n.fa-yc-square:before,\\n.fa-hacker-news:before {\\n  content: \\\"\\\\F1D4\\\"; }\\n\\n.fa-tencent-weibo:before {\\n  content: \\\"\\\\F1D5\\\"; }\\n\\n.fa-qq:before {\\n  content: \\\"\\\\F1D6\\\"; }\\n\\n.fa-wechat:before,\\n.fa-weixin:before {\\n  content: \\\"\\\\F1D7\\\"; }\\n\\n.fa-send:before,\\n.fa-paper-plane:before {\\n  content: \\\"\\\\F1D8\\\"; }\\n\\n.fa-send-o:before,\\n.fa-paper-plane-o:before {\\n  content: \\\"\\\\F1D9\\\"; }\\n\\n.fa-history:before {\\n  content: \\\"\\\\F1DA\\\"; }\\n\\n.fa-circle-thin:before {\\n  content: \\\"\\\\F1DB\\\"; }\\n\\n.fa-header:before {\\n  content: \\\"\\\\F1DC\\\"; }\\n\\n.fa-paragraph:before {\\n  content: \\\"\\\\F1DD\\\"; }\\n\\n.fa-sliders:before {\\n  content: \\\"\\\\F1DE\\\"; }\\n\\n.fa-share-alt:before {\\n  content: \\\"\\\\F1E0\\\"; }\\n\\n.fa-share-alt-square:before {\\n  content: \\\"\\\\F1E1\\\"; }\\n\\n.fa-bomb:before {\\n  content: \\\"\\\\F1E2\\\"; }\\n\\n.fa-soccer-ball-o:before,\\n.fa-futbol-o:before {\\n  content: \\\"\\\\F1E3\\\"; }\\n\\n.fa-tty:before {\\n  content: \\\"\\\\F1E4\\\"; }\\n\\n.fa-binoculars:before {\\n  content: \\\"\\\\F1E5\\\"; }\\n\\n.fa-plug:before {\\n  content: \\\"\\\\F1E6\\\"; }\\n\\n.fa-slideshare:before {\\n  content: \\\"\\\\F1E7\\\"; }\\n\\n.fa-twitch:before {\\n  content: \\\"\\\\F1E8\\\"; }\\n\\n.fa-yelp:before {\\n  content: \\\"\\\\F1E9\\\"; }\\n\\n.fa-newspaper-o:before {\\n  content: \\\"\\\\F1EA\\\"; }\\n\\n.fa-wifi:before {\\n  content: \\\"\\\\F1EB\\\"; }\\n\\n.fa-calculator:before {\\n  content: \\\"\\\\F1EC\\\"; }\\n\\n.fa-paypal:before {\\n  content: \\\"\\\\F1ED\\\"; }\\n\\n.fa-google-wallet:before {\\n  content: \\\"\\\\F1EE\\\"; }\\n\\n.fa-cc-visa:before {\\n  content: \\\"\\\\F1F0\\\"; }\\n\\n.fa-cc-mastercard:before {\\n  content: \\\"\\\\F1F1\\\"; }\\n\\n.fa-cc-discover:before {\\n  content: \\\"\\\\F1F2\\\"; }\\n\\n.fa-cc-amex:before {\\n  content: \\\"\\\\F1F3\\\"; }\\n\\n.fa-cc-paypal:before {\\n  content: \\\"\\\\F1F4\\\"; }\\n\\n.fa-cc-stripe:before {\\n  content: \\\"\\\\F1F5\\\"; }\\n\\n.fa-bell-slash:before {\\n  content: \\\"\\\\F1F6\\\"; }\\n\\n.fa-bell-slash-o:before {\\n  content: \\\"\\\\F1F7\\\"; }\\n\\n.fa-trash:before {\\n  content: \\\"\\\\F1F8\\\"; }\\n\\n.fa-copyright:before {\\n  content: \\\"\\\\F1F9\\\"; }\\n\\n.fa-at:before {\\n  content: \\\"\\\\F1FA\\\"; }\\n\\n.fa-eyedropper:before {\\n  content: \\\"\\\\F1FB\\\"; }\\n\\n.fa-paint-brush:before {\\n  content: \\\"\\\\F1FC\\\"; }\\n\\n.fa-birthday-cake:before {\\n  content: \\\"\\\\F1FD\\\"; }\\n\\n.fa-area-chart:before {\\n  content: \\\"\\\\F1FE\\\"; }\\n\\n.fa-pie-chart:before {\\n  content: \\\"\\\\F200\\\"; }\\n\\n.fa-line-chart:before {\\n  content: \\\"\\\\F201\\\"; }\\n\\n.fa-lastfm:before {\\n  content: \\\"\\\\F202\\\"; }\\n\\n.fa-lastfm-square:before {\\n  content: \\\"\\\\F203\\\"; }\\n\\n.fa-toggle-off:before {\\n  content: \\\"\\\\F204\\\"; }\\n\\n.fa-toggle-on:before {\\n  content: \\\"\\\\F205\\\"; }\\n\\n.fa-bicycle:before {\\n  content: \\\"\\\\F206\\\"; }\\n\\n.fa-bus:before {\\n  content: \\\"\\\\F207\\\"; }\\n\\n.fa-ioxhost:before {\\n  content: \\\"\\\\F208\\\"; }\\n\\n.fa-angellist:before {\\n  content: \\\"\\\\F209\\\"; }\\n\\n.fa-cc:before {\\n  content: \\\"\\\\F20A\\\"; }\\n\\n.fa-shekel:before,\\n.fa-sheqel:before,\\n.fa-ils:before {\\n  content: \\\"\\\\F20B\\\"; }\\n\\n.fa-meanpath:before {\\n  content: \\\"\\\\F20C\\\"; }\\n\\n.fa-buysellads:before {\\n  content: \\\"\\\\F20D\\\"; }\\n\\n.fa-connectdevelop:before {\\n  content: \\\"\\\\F20E\\\"; }\\n\\n.fa-dashcube:before {\\n  content: \\\"\\\\F210\\\"; }\\n\\n.fa-forumbee:before {\\n  content: \\\"\\\\F211\\\"; }\\n\\n.fa-leanpub:before {\\n  content: \\\"\\\\F212\\\"; }\\n\\n.fa-sellsy:before {\\n  content: \\\"\\\\F213\\\"; }\\n\\n.fa-shirtsinbulk:before {\\n  content: \\\"\\\\F214\\\"; }\\n\\n.fa-simplybuilt:before {\\n  content: \\\"\\\\F215\\\"; }\\n\\n.fa-skyatlas:before {\\n  content: \\\"\\\\F216\\\"; }\\n\\n.fa-cart-plus:before {\\n  content: \\\"\\\\F217\\\"; }\\n\\n.fa-cart-arrow-down:before {\\n  content: \\\"\\\\F218\\\"; }\\n\\n.fa-diamond:before {\\n  content: \\\"\\\\F219\\\"; }\\n\\n.fa-ship:before {\\n  content: \\\"\\\\F21A\\\"; }\\n\\n.fa-user-secret:before {\\n  content: \\\"\\\\F21B\\\"; }\\n\\n.fa-motorcycle:before {\\n  content: \\\"\\\\F21C\\\"; }\\n\\n.fa-street-view:before {\\n  content: \\\"\\\\F21D\\\"; }\\n\\n.fa-heartbeat:before {\\n  content: \\\"\\\\F21E\\\"; }\\n\\n.fa-venus:before {\\n  content: \\\"\\\\F221\\\"; }\\n\\n.fa-mars:before {\\n  content: \\\"\\\\F222\\\"; }\\n\\n.fa-mercury:before {\\n  content: \\\"\\\\F223\\\"; }\\n\\n.fa-intersex:before,\\n.fa-transgender:before {\\n  content: \\\"\\\\F224\\\"; }\\n\\n.fa-transgender-alt:before {\\n  content: \\\"\\\\F225\\\"; }\\n\\n.fa-venus-double:before {\\n  content: \\\"\\\\F226\\\"; }\\n\\n.fa-mars-double:before {\\n  content: \\\"\\\\F227\\\"; }\\n\\n.fa-venus-mars:before {\\n  content: \\\"\\\\F228\\\"; }\\n\\n.fa-mars-stroke:before {\\n  content: \\\"\\\\F229\\\"; }\\n\\n.fa-mars-stroke-v:before {\\n  content: \\\"\\\\F22A\\\"; }\\n\\n.fa-mars-stroke-h:before {\\n  content: \\\"\\\\F22B\\\"; }\\n\\n.fa-neuter:before {\\n  content: \\\"\\\\F22C\\\"; }\\n\\n.fa-genderless:before {\\n  content: \\\"\\\\F22D\\\"; }\\n\\n.fa-facebook-official:before, .gg-icon-facebook:before {\\n  content: \\\"\\\\F230\\\"; }\\n\\n.fa-pinterest-p:before {\\n  content: \\\"\\\\F231\\\"; }\\n\\n.fa-whatsapp:before {\\n  content: \\\"\\\\F232\\\"; }\\n\\n.fa-server:before {\\n  content: \\\"\\\\F233\\\"; }\\n\\n.fa-user-plus:before {\\n  content: \\\"\\\\F234\\\"; }\\n\\n.fa-user-times:before {\\n  content: \\\"\\\\F235\\\"; }\\n\\n.fa-hotel:before,\\n.fa-bed:before {\\n  content: \\\"\\\\F236\\\"; }\\n\\n.fa-viacoin:before {\\n  content: \\\"\\\\F237\\\"; }\\n\\n.fa-train:before {\\n  content: \\\"\\\\F238\\\"; }\\n\\n.fa-subway:before {\\n  content: \\\"\\\\F239\\\"; }\\n\\n.fa-medium:before {\\n  content: \\\"\\\\F23A\\\"; }\\n\\n.fa-yc:before,\\n.fa-y-combinator:before {\\n  content: \\\"\\\\F23B\\\"; }\\n\\n.fa-optin-monster:before {\\n  content: \\\"\\\\F23C\\\"; }\\n\\n.fa-opencart:before {\\n  content: \\\"\\\\F23D\\\"; }\\n\\n.fa-expeditedssl:before {\\n  content: \\\"\\\\F23E\\\"; }\\n\\n.fa-battery-4:before,\\n.fa-battery-full:before {\\n  content: \\\"\\\\F240\\\"; }\\n\\n.fa-battery-3:before,\\n.fa-battery-three-quarters:before {\\n  content: \\\"\\\\F241\\\"; }\\n\\n.fa-battery-2:before,\\n.fa-battery-half:before {\\n  content: \\\"\\\\F242\\\"; }\\n\\n.fa-battery-1:before,\\n.fa-battery-quarter:before {\\n  content: \\\"\\\\F243\\\"; }\\n\\n.fa-battery-0:before,\\n.fa-battery-empty:before {\\n  content: \\\"\\\\F244\\\"; }\\n\\n.fa-mouse-pointer:before {\\n  content: \\\"\\\\F245\\\"; }\\n\\n.fa-i-cursor:before {\\n  content: \\\"\\\\F246\\\"; }\\n\\n.fa-object-group:before {\\n  content: \\\"\\\\F247\\\"; }\\n\\n.fa-object-ungroup:before {\\n  content: \\\"\\\\F248\\\"; }\\n\\n.fa-sticky-note:before {\\n  content: \\\"\\\\F249\\\"; }\\n\\n.fa-sticky-note-o:before {\\n  content: \\\"\\\\F24A\\\"; }\\n\\n.fa-cc-jcb:before {\\n  content: \\\"\\\\F24B\\\"; }\\n\\n.fa-cc-diners-club:before {\\n  content: \\\"\\\\F24C\\\"; }\\n\\n.fa-clone:before {\\n  content: \\\"\\\\F24D\\\"; }\\n\\n.fa-balance-scale:before {\\n  content: \\\"\\\\F24E\\\"; }\\n\\n.fa-hourglass-o:before {\\n  content: \\\"\\\\F250\\\"; }\\n\\n.fa-hourglass-1:before,\\n.fa-hourglass-start:before {\\n  content: \\\"\\\\F251\\\"; }\\n\\n.fa-hourglass-2:before,\\n.fa-hourglass-half:before {\\n  content: \\\"\\\\F252\\\"; }\\n\\n.fa-hourglass-3:before,\\n.fa-hourglass-end:before {\\n  content: \\\"\\\\F253\\\"; }\\n\\n.fa-hourglass:before {\\n  content: \\\"\\\\F254\\\"; }\\n\\n.fa-hand-grab-o:before,\\n.fa-hand-rock-o:before {\\n  content: \\\"\\\\F255\\\"; }\\n\\n.fa-hand-stop-o:before,\\n.fa-hand-paper-o:before {\\n  content: \\\"\\\\F256\\\"; }\\n\\n.fa-hand-scissors-o:before {\\n  content: \\\"\\\\F257\\\"; }\\n\\n.fa-hand-lizard-o:before {\\n  content: \\\"\\\\F258\\\"; }\\n\\n.fa-hand-spock-o:before {\\n  content: \\\"\\\\F259\\\"; }\\n\\n.fa-hand-pointer-o:before {\\n  content: \\\"\\\\F25A\\\"; }\\n\\n.fa-hand-peace-o:before {\\n  content: \\\"\\\\F25B\\\"; }\\n\\n.fa-trademark:before {\\n  content: \\\"\\\\F25C\\\"; }\\n\\n.fa-registered:before {\\n  content: \\\"\\\\F25D\\\"; }\\n\\n.fa-creative-commons:before {\\n  content: \\\"\\\\F25E\\\"; }\\n\\n.fa-gg:before {\\n  content: \\\"\\\\F260\\\"; }\\n\\n.fa-gg-circle:before {\\n  content: \\\"\\\\F261\\\"; }\\n\\n.fa-tripadvisor:before {\\n  content: \\\"\\\\F262\\\"; }\\n\\n.fa-odnoklassniki:before {\\n  content: \\\"\\\\F263\\\"; }\\n\\n.fa-odnoklassniki-square:before {\\n  content: \\\"\\\\F264\\\"; }\\n\\n.fa-get-pocket:before {\\n  content: \\\"\\\\F265\\\"; }\\n\\n.fa-wikipedia-w:before {\\n  content: \\\"\\\\F266\\\"; }\\n\\n.fa-safari:before {\\n  content: \\\"\\\\F267\\\"; }\\n\\n.fa-chrome:before {\\n  content: \\\"\\\\F268\\\"; }\\n\\n.fa-firefox:before {\\n  content: \\\"\\\\F269\\\"; }\\n\\n.fa-opera:before {\\n  content: \\\"\\\\F26A\\\"; }\\n\\n.fa-internet-explorer:before {\\n  content: \\\"\\\\F26B\\\"; }\\n\\n.fa-tv:before,\\n.fa-television:before {\\n  content: \\\"\\\\F26C\\\"; }\\n\\n.fa-contao:before {\\n  content: \\\"\\\\F26D\\\"; }\\n\\n.fa-500px:before {\\n  content: \\\"\\\\F26E\\\"; }\\n\\n.fa-amazon:before {\\n  content: \\\"\\\\F270\\\"; }\\n\\n.fa-calendar-plus-o:before {\\n  content: \\\"\\\\F271\\\"; }\\n\\n.fa-calendar-minus-o:before {\\n  content: \\\"\\\\F272\\\"; }\\n\\n.fa-calendar-times-o:before {\\n  content: \\\"\\\\F273\\\"; }\\n\\n.fa-calendar-check-o:before {\\n  content: \\\"\\\\F274\\\"; }\\n\\n.fa-industry:before {\\n  content: \\\"\\\\F275\\\"; }\\n\\n.fa-map-pin:before {\\n  content: \\\"\\\\F276\\\"; }\\n\\n.fa-map-signs:before {\\n  content: \\\"\\\\F277\\\"; }\\n\\n.fa-map-o:before {\\n  content: \\\"\\\\F278\\\"; }\\n\\n.fa-map:before {\\n  content: \\\"\\\\F279\\\"; }\\n\\n.fa-commenting:before {\\n  content: \\\"\\\\F27A\\\"; }\\n\\n.fa-commenting-o:before {\\n  content: \\\"\\\\F27B\\\"; }\\n\\n.fa-houzz:before {\\n  content: \\\"\\\\F27C\\\"; }\\n\\n.fa-vimeo:before {\\n  content: \\\"\\\\F27D\\\"; }\\n\\n.fa-black-tie:before {\\n  content: \\\"\\\\F27E\\\"; }\\n\\n.fa-fonticons:before {\\n  content: \\\"\\\\F280\\\"; }\\n\\n.fa-reddit-alien:before {\\n  content: \\\"\\\\F281\\\"; }\\n\\n.fa-edge:before {\\n  content: \\\"\\\\F282\\\"; }\\n\\n.fa-credit-card-alt:before {\\n  content: \\\"\\\\F283\\\"; }\\n\\n.fa-codiepie:before {\\n  content: \\\"\\\\F284\\\"; }\\n\\n.fa-modx:before {\\n  content: \\\"\\\\F285\\\"; }\\n\\n.fa-fort-awesome:before {\\n  content: \\\"\\\\F286\\\"; }\\n\\n.fa-usb:before {\\n  content: \\\"\\\\F287\\\"; }\\n\\n.fa-product-hunt:before {\\n  content: \\\"\\\\F288\\\"; }\\n\\n.fa-mixcloud:before {\\n  content: \\\"\\\\F289\\\"; }\\n\\n.fa-scribd:before {\\n  content: \\\"\\\\F28A\\\"; }\\n\\n.fa-pause-circle:before {\\n  content: \\\"\\\\F28B\\\"; }\\n\\n.fa-pause-circle-o:before {\\n  content: \\\"\\\\F28C\\\"; }\\n\\n.fa-stop-circle:before {\\n  content: \\\"\\\\F28D\\\"; }\\n\\n.fa-stop-circle-o:before {\\n  content: \\\"\\\\F28E\\\"; }\\n\\n.fa-shopping-bag:before {\\n  content: \\\"\\\\F290\\\"; }\\n\\n.fa-shopping-basket:before {\\n  content: \\\"\\\\F291\\\"; }\\n\\n.fa-hashtag:before {\\n  content: \\\"\\\\F292\\\"; }\\n\\n.fa-bluetooth:before {\\n  content: \\\"\\\\F293\\\"; }\\n\\n.fa-bluetooth-b:before {\\n  content: \\\"\\\\F294\\\"; }\\n\\n.fa-percent:before {\\n  content: \\\"\\\\F295\\\"; }\\n\\n/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */\\n/**\\r\\n * 1. Set default font family to sans-serif.\\r\\n * 2. Prevent iOS and IE text size adjust after device orientation change,\\r\\n *    without disabling user zoom.\\r\\n */\\nhtml {\\n  font-family: sans-serif;\\n  /* 1 */\\n  -webkit-text-size-adjust: 100%;\\n      -ms-text-size-adjust: 100%;\\n          text-size-adjust: 100%;\\n  /* 2 */ }\\n\\n/**\\r\\n * Remove default margin.\\r\\n */\\nbody {\\n  margin: 0; }\\n\\n/* HTML5 display definitions\\r\\n   ========================================================================== */\\n/**\\r\\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\\r\\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\\r\\n * and Firefox.\\r\\n * Correct `block` display not defined for `main` in IE 11.\\r\\n */\\narticle,\\naside,\\ndetails,\\nfigcaption,\\nfigure,\\nfooter,\\nheader,\\nhgroup,\\nmain,\\nmenu,\\nnav,\\nsection,\\nsummary {\\n  display: block; }\\n\\n/**\\r\\n * 1. Correct `inline-block` display not defined in IE 8/9.\\r\\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\\r\\n */\\naudio,\\ncanvas,\\nprogress,\\nvideo {\\n  display: inline-block;\\n  /* 1 */\\n  vertical-align: baseline;\\n  /* 2 */ }\\n\\n/**\\r\\n * Prevent modern browsers from displaying `audio` without controls.\\r\\n * Remove excess height in iOS 5 devices.\\r\\n */\\naudio:not([controls]) {\\n  display: none;\\n  height: 0; }\\n\\n/**\\r\\n * Address `[hidden]` styling not present in IE 8/9/10.\\r\\n * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\\r\\n */\\n[hidden],\\ntemplate {\\n  display: none; }\\n\\n/* Links\\r\\n   ========================================================================== */\\n/**\\r\\n * Remove the gray background color from active links in IE 10.\\r\\n */\\na {\\n  background-color: transparent; }\\n\\n/**\\r\\n * Improve readability of focused elements when they are also in an\\r\\n * active/hover state.\\r\\n */\\na:active,\\na:hover {\\n  outline: 0; }\\n\\n/* Text-level semantics\\r\\n   ========================================================================== */\\n/**\\r\\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\\r\\n */\\nabbr[title] {\\n  border-bottom: 1px dotted; }\\n\\n/**\\r\\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\\r\\n */\\nb,\\nstrong {\\n  font-weight: bold; }\\n\\n/**\\r\\n * Address styling not present in Safari and Chrome.\\r\\n */\\ndfn {\\n  font-style: italic; }\\n\\n/**\\r\\n * Address variable `h1` font-size and margin within `section` and `article`\\r\\n * contexts in Firefox 4+, Safari, and Chrome.\\r\\n */\\nh1 {\\n  font-size: 2em;\\n  margin: 0.67em 0; }\\n\\n/**\\r\\n * Address styling not present in IE 8/9.\\r\\n */\\nmark {\\n  background: #ff0;\\n  color: #000; }\\n\\n/**\\r\\n * Address inconsistent and variable font size in all browsers.\\r\\n */\\nsmall {\\n  font-size: 80%; }\\n\\n/**\\r\\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\\r\\n */\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline; }\\n\\nsup {\\n  top: -0.5em; }\\n\\nsub {\\n  bottom: -0.25em; }\\n\\n/* Embedded content\\r\\n   ========================================================================== */\\n/**\\r\\n * Remove border when inside `a` element in IE 8/9/10.\\r\\n */\\nimg {\\n  border: 0; }\\n\\n/**\\r\\n * Correct overflow not hidden in IE 9/10/11.\\r\\n */\\nsvg:not(:root) {\\n  overflow: hidden; }\\n\\n/* Grouping content\\r\\n   ========================================================================== */\\n/**\\r\\n * Address margin not present in IE 8/9 and Safari.\\r\\n */\\nfigure {\\n  margin: 1em 40px; }\\n\\n/**\\r\\n * Address differences between Firefox and other browsers.\\r\\n */\\nhr {\\n  box-sizing: content-box;\\n  height: 0; }\\n\\n/**\\r\\n * Contain overflow in all browsers.\\r\\n */\\npre {\\n  overflow: auto; }\\n\\n/**\\r\\n * Address odd `em`-unit font size rendering in all browsers.\\r\\n */\\ncode,\\nkbd,\\npre,\\nsamp {\\n  font-family: monospace, monospace;\\n  font-size: 1em; }\\n\\n/* Forms\\r\\n   ========================================================================== */\\n/**\\r\\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\\r\\n * styling of `select`, unless a `border` property is set.\\r\\n */\\n/**\\r\\n * 1. Correct color not being inherited.\\r\\n *    Known issue: affects color of disabled elements.\\r\\n * 2. Correct font properties not being inherited.\\r\\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\\r\\n */\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  color: inherit;\\n  /* 1 */\\n  font: inherit;\\n  /* 2 */\\n  margin: 0;\\n  /* 3 */ }\\n\\n/**\\r\\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\\r\\n */\\nbutton {\\n  overflow: visible; }\\n\\n/**\\r\\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\\r\\n * All other form control elements do not inherit `text-transform` values.\\r\\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\\r\\n * Correct `select` style inheritance in Firefox.\\r\\n */\\nbutton,\\nselect {\\n  text-transform: none; }\\n\\n/**\\r\\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\\r\\n *    and `video` controls.\\r\\n * 2. Correct inability to style clickable `input` types in iOS.\\r\\n * 3. Improve usability and consistency of cursor style between image-type\\r\\n *    `input` and others.\\r\\n */\\nbutton,\\nhtml input[type=\\\"button\\\"],\\ninput[type=\\\"reset\\\"],\\ninput[type=\\\"submit\\\"] {\\n  -webkit-appearance: button;\\n  /* 2 */\\n  cursor: pointer;\\n  /* 3 */ }\\n\\n/**\\r\\n * Re-set default cursor for disabled elements.\\r\\n */\\nbutton[disabled],\\nhtml input[disabled] {\\n  cursor: default; }\\n\\n/**\\r\\n * Remove inner padding and border in Firefox 4+.\\r\\n */\\nbutton::-moz-focus-inner,\\ninput::-moz-focus-inner {\\n  border: 0;\\n  padding: 0; }\\n\\n/**\\r\\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\\r\\n * the UA stylesheet.\\r\\n */\\ninput {\\n  line-height: normal; }\\n\\n/**\\r\\n * It's recommended that you don't attempt to style these elements.\\r\\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\\r\\n *\\r\\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\\r\\n * 2. Remove excess padding in IE 8/9/10.\\r\\n */\\ninput[type=\\\"checkbox\\\"],\\ninput[type=\\\"radio\\\"] {\\n  box-sizing: border-box;\\n  /* 1 */\\n  padding: 0;\\n  /* 2 */ }\\n\\n/**\\r\\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\\r\\n * `font-size` values of the `input`, it causes the cursor style of the\\r\\n * decrement button to change from `default` to `text`.\\r\\n */\\ninput[type=\\\"number\\\"]::-webkit-inner-spin-button,\\ninput[type=\\\"number\\\"]::-webkit-outer-spin-button {\\n  height: auto; }\\n\\n/**\\r\\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\\r\\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\\r\\n */\\ninput[type=\\\"search\\\"] {\\n  -webkit-appearance: textfield;\\n  /* 1 */\\n  box-sizing: content-box;\\n  /* 2 */ }\\n\\n/**\\r\\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\\r\\n * Safari (but not Chrome) clips the cancel button when the search input has\\r\\n * padding (and `textfield` appearance).\\r\\n */\\ninput[type=\\\"search\\\"]::-webkit-search-cancel-button,\\ninput[type=\\\"search\\\"]::-webkit-search-decoration {\\n  -webkit-appearance: none; }\\n\\n/**\\r\\n * Define consistent border, margin, and padding.\\r\\n */\\nfieldset {\\n  border: 1px solid #c0c0c0;\\n  margin: 0 2px;\\n  padding: 0.35em 0.625em 0.75em; }\\n\\n/**\\r\\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\\r\\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\\r\\n */\\nlegend {\\n  border: 0;\\n  /* 1 */\\n  padding: 0;\\n  /* 2 */ }\\n\\n/**\\r\\n * Remove default vertical scrollbar in IE 8/9/10/11.\\r\\n */\\ntextarea {\\n  overflow: auto; }\\n\\n/**\\r\\n * Don't inherit the `font-weight` (applied by a rule above).\\r\\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\\r\\n */\\noptgroup {\\n  font-weight: bold; }\\n\\n/* Tables\\r\\n   ========================================================================== */\\n/**\\r\\n * Remove most spacing between table cells.\\r\\n */\\ntable {\\n  border-collapse: collapse;\\n  border-spacing: 0; }\\n\\ntd,\\nth {\\n  padding: 0; }\\n\\nhtml {\\n  box-sizing: border-box;\\n  font-size: 62.5%; }\\n\\n*,\\n*::before,\\n*::after {\\n  box-sizing: inherit; }\\n\\n@-ms-viewport {\\n  width: device-width; }\\n\\n@-o-viewport {\\n  width: device-width; }\\n\\n@viewport {\\n  width: device-width; }\\n\\nbody {\\n  background-color: #ffffff;\\n  color: rgba(0, 0, 0, 0.87); }\\n\\na {\\n  text-decoration: none; }\\n\\n::-webkit-input-placeholder {\\n  line-height: normal; }\\n\\n@media screen and (max-width: 600px) {\\n  #wpadminbar {\\n    display: none; } }\\n\\n/**\\r\\n * %gg-shadow-low\\r\\n * %gg-shadow-high\\r\\n * @mixin gg-transition\\r\\n * @mixin gg-menu-list\\r\\n */\\n.gg-appbar, .gg-appbar-menu, .gg-drawer, .gg-card-big, .gg-card-small, .gg-card-image, .gg-article > header {\\n  box-shadow: 0 0.15em 0.3em 0 rgba(0, 0, 0, 0.16), 0 0.15em 0.6em 0 rgba(0, 0, 0, 0.12); }\\n\\n.gg-card-big:hover, .gg-card-small:hover, .gg-card-image:hover, .gg-card-big .gg-card-addon, .gg-card-small .gg-card-addon, .gg-card-image .gg-card-addon, .gg-article-container {\\n  box-shadow: 0 0.3em 0.8em 0 rgba(0, 0, 0, 0.18), 0 0.25em 1em 0 rgba(0, 0, 0, 0.15); }\\n\\n/*!\\r\\n * Waves v0.7.4\\r\\n * http://fian.my.id/Waves\\r\\n *\\r\\n * Copyright 2014 Alfiana E. Sibuea and other contributors\\r\\n * Released under the MIT license\\r\\n * https://github.com/fians/Waves/blob/master/LICENSE\\r\\n */\\n.waves-effect {\\n  position: relative;\\n  cursor: pointer;\\n  display: inline-block;\\n  overflow: hidden;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  -webkit-tap-highlight-color: transparent; }\\n  .waves-effect .waves-ripple {\\n    position: absolute;\\n    border-radius: 50%;\\n    width: 100px;\\n    height: 100px;\\n    margin-top: -50px;\\n    margin-left: -50px;\\n    opacity: 0;\\n    background: -webkit-radial-gradient(rgba(0, 0, 0, 0.2) 0, rgba(0, 0, 0, 0.3) 40%, rgba(0, 0, 0, 0.4) 50%, rgba(0, 0, 0, 0.5) 60%, rgba(255, 255, 255, 0) 70%);\\n    background: radial-gradient(rgba(0, 0, 0, 0.2) 0, rgba(0, 0, 0, 0.3) 40%, rgba(0, 0, 0, 0.4) 50%, rgba(0, 0, 0, 0.5) 60%, rgba(255, 255, 255, 0) 70%);\\n    -webkit-transition: all 0.5s ease-out;\\n    transition: all 0.5s ease-out;\\n    -webkit-transition-property: opacity, -webkit-transform;\\n    transition-property: opacity, -webkit-transform;\\n    transition-property: transform, opacity;\\n    transition-property: transform, opacity, -webkit-transform;\\n    -webkit-transform: scale(0) translate(0, 0);\\n            transform: scale(0) translate(0, 0);\\n    pointer-events: none; }\\n  .waves-effect.waves-light .waves-ripple {\\n    background: -webkit-radial-gradient(rgba(255, 255, 255, 0.2) 0, rgba(255, 255, 255, 0.3) 40%, rgba(255, 255, 255, 0.4) 50%, rgba(255, 255, 255, 0.5) 60%, rgba(255, 255, 255, 0) 70%);\\n    background: radial-gradient(rgba(255, 255, 255, 0.2) 0, rgba(255, 255, 255, 0.3) 40%, rgba(255, 255, 255, 0.4) 50%, rgba(255, 255, 255, 0.5) 60%, rgba(255, 255, 255, 0) 70%); }\\n\\n.waves-button,\\n.waves-circle {\\n  -webkit-transform: translateZ(0);\\n          transform: translateZ(0);\\n  -webkit-mask-image: -webkit-radial-gradient(circle, #ffffff 100%, #000000 100%); }\\n\\n.waves-circle {\\n  border-radius: 50%; }\\n\\n/* perfect-scrollbar v0.6.8 */\\n.ps-container {\\n  -ms-touch-action: none;\\n  overflow: hidden !important; }\\n\\n.ps-container.ps-active-x > .ps-scrollbar-x-rail,\\n.ps-container.ps-active-y > .ps-scrollbar-y-rail {\\n  display: block; }\\n\\n.ps-container.ps-in-scrolling {\\n  pointer-events: none; }\\n\\n.ps-container.ps-in-scrolling.ps-x > .ps-scrollbar-x-rail {\\n  background-color: #eee;\\n  opacity: 0.9; }\\n\\n.ps-container.ps-in-scrolling.ps-x > .ps-scrollbar-x-rail > .ps-scrollbar-x {\\n  background-color: #999; }\\n\\n.ps-container.ps-in-scrolling.ps-y > .ps-scrollbar-y-rail {\\n  background-color: #eee;\\n  opacity: 0.9; }\\n\\n.ps-container.ps-in-scrolling.ps-y > .ps-scrollbar-y-rail > .ps-scrollbar-y {\\n  background-color: #999; }\\n\\n.ps-container > .ps-scrollbar-x-rail {\\n  display: none;\\n  position: absolute;\\n  /* please don't change 'position' */\\n  border-radius: 4px;\\n  opacity: 0;\\n  -webkit-transition: background-color 0.2s linear, opacity 0.2s linear;\\n  transition: background-color 0.2s linear, opacity 0.2s linear;\\n  bottom: 3px;\\n  /* there must be 'bottom' for ps-scrollbar-x-rail */\\n  height: 8px; }\\n\\n.ps-container > .ps-scrollbar-x-rail > .ps-scrollbar-x {\\n  position: absolute;\\n  /* please don't change 'position' */\\n  background-color: #aaa;\\n  border-radius: 4px;\\n  -webkit-transition: background-color 0.2s linear;\\n  transition: background-color 0.2s linear;\\n  bottom: 0;\\n  /* there must be 'bottom' for ps-scrollbar-x */\\n  height: 8px; }\\n\\n.ps-container > .ps-scrollbar-y-rail {\\n  display: none;\\n  position: absolute;\\n  /* please don't change 'position' */\\n  border-radius: 4px;\\n  opacity: 0;\\n  -webkit-transition: background-color 0.2s linear, opacity 0.2s linear;\\n  transition: background-color 0.2s linear, opacity 0.2s linear;\\n  right: 3px;\\n  /* there must be 'right' for ps-scrollbar-y-rail */\\n  width: 8px; }\\n\\n.ps-container > .ps-scrollbar-y-rail > .ps-scrollbar-y {\\n  position: absolute;\\n  /* please don't change 'position' */\\n  background-color: #aaa;\\n  border-radius: 4px;\\n  -webkit-transition: background-color 0.2s linear;\\n  transition: background-color 0.2s linear;\\n  right: 0;\\n  /* there must be 'right' for ps-scrollbar-y */\\n  width: 8px; }\\n\\n.ps-container:hover.ps-in-scrolling {\\n  pointer-events: none; }\\n\\n.ps-container:hover.ps-in-scrolling.ps-x > .ps-scrollbar-x-rail {\\n  background-color: #eee;\\n  opacity: 0.9; }\\n\\n.ps-container:hover.ps-in-scrolling.ps-x > .ps-scrollbar-x-rail > .ps-scrollbar-x {\\n  background-color: #999; }\\n\\n.ps-container:hover.ps-in-scrolling.ps-y > .ps-scrollbar-y-rail {\\n  background-color: #eee;\\n  opacity: 0.9; }\\n\\n.ps-container:hover.ps-in-scrolling.ps-y > .ps-scrollbar-y-rail > .ps-scrollbar-y {\\n  background-color: #999; }\\n\\n.ps-container:hover > .ps-scrollbar-x-rail,\\n.ps-container:hover > .ps-scrollbar-y-rail {\\n  opacity: 0.6; }\\n\\n.ps-container:hover > .ps-scrollbar-x-rail:hover {\\n  background-color: #eee;\\n  opacity: 0.9; }\\n\\n.ps-container:hover > .ps-scrollbar-x-rail:hover > .ps-scrollbar-x {\\n  background-color: #999; }\\n\\n.ps-container:hover > .ps-scrollbar-y-rail:hover {\\n  background-color: #eee;\\n  opacity: 0.9; }\\n\\n.ps-container:hover > .ps-scrollbar-y-rail:hover > .ps-scrollbar-y {\\n  background-color: #999; }\\n\\n/**\\r\\n * .gg-layout\\r\\n */\\n.gg-layout {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n  -webkit-flex-direction: column;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  position: relative;\\n  width: 100%;\\n  min-height: 100vh;\\n  padding-left: 0;\\n  -webkit-overflow-scrolling: touch;\\n  -webkit-transition-property: padding-left;\\n  transition-property: padding-left;\\n  will-change: padding-left;\\n  -webkit-transition-duration: 0.2s;\\n          transition-duration: 0.2s;\\n  -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n          transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  @media (min-width: 1280px) {\\n    .gg-layout {\\n      padding-left: 240px; } }\\n  @media screen and (max-width: 600px) {\\n    .gg-layout {\\n      margin-top: -46px; } }\\n\\n/**\\r\\n * .gg-obfuscator\\r\\n * body.is-obfuscated\\r\\n */\\n.gg-obfuscator {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  min-height: 100%;\\n  z-index: 9;\\n  visibility: hidden;\\n  background-color: transparent;\\n  -webkit-transition-property: visibility, background-color;\\n  transition-property: visibility, background-color;\\n  will-change: visibility, background-color;\\n  -webkit-transition-duration: 0.2s;\\n          transition-duration: 0.2s;\\n  -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n          transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  @media (min-width: 1280px) {\\n    .gg-obfuscator {\\n      display: none; } }\\n  .gg-obfuscator.is-visible {\\n    background-color: rgba(0, 0, 0, 0.5);\\n    visibility: visible; }\\n\\nbody.is-obfuscated {\\n  overflow: hidden; }\\n  @media (min-width: 1280px) {\\n    body.is-obfuscated {\\n      overflow: auto; } }\\n\\n/**\\r\\n * %gg-button\\r\\n * .gg-button-flat\\r\\n * .gg-button-flat-light\\r\\n */\\n.gg-button-flat,\\n.gg-button-flat-light {\\n  display: inline-block;\\n  min-width: 64px;\\n  height: 36px;\\n  margin: 8px;\\n  padding: 0 8px;\\n  border-radius: 2px;\\n  line-height: 36px;\\n  text-align: center;\\n  -webkit-transition-property: background-color;\\n  transition-property: background-color;\\n  will-change: background-color;\\n  -webkit-transition-duration: 0.2s;\\n          transition-duration: 0.2s;\\n  -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n          transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n  cursor: pointer; }\\n\\n.gg-button-flat:hover,\\n.gg-button-flat-light:hover {\\n  background-color: rgba(158, 158, 158, 0.2); }\\n\\n/**\\r\\n * %gg-icon\\r\\n * .gg-icon-flat\\r\\n * .gg-icon-flat-light\\r\\n */\\n.gg-icon-flat,\\n.gg-icon-flat-light, .gg-appbar-icon,\\n.gg-searchbar-icon {\\n  display: inline-block;\\n  width: 48px;\\n  height: 48px;\\n  margin: 4px;\\n  padding: 0;\\n  overflow: hidden;\\n  border-radius: 50%;\\n  line-height: 48px;\\n  text-align: center;\\n  -webkit-transition-property: background-color;\\n  transition-property: background-color;\\n  will-change: background-color;\\n  -webkit-transition-duration: 0.2s;\\n          transition-duration: 0.2s;\\n  -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n          transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n  cursor: pointer; }\\n\\n.gg-icon-flat:hover,\\n.gg-icon-flat-light:hover {\\n  background-color: rgba(158, 158, 158, 0.2); }\\n\\n.gg-icon-chevron {\\n  -webkit-transform: rotate(0deg);\\n          transform: rotate(0deg);\\n  -webkit-transition-property: -webkit-transform;\\n  transition-property: -webkit-transform;\\n  transition-property: transform;\\n  transition-property: transform, -webkit-transform;\\n  will-change: transform;\\n  -webkit-transition-duration: 0.2s;\\n          transition-duration: 0.2s;\\n  -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n          transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  .gg-icon-chevron.is-visible {\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg); }\\n\\n/**\\r\\n * .gg-badge\\r\\n */\\n.gg-badge {\\n  position: absolute;\\n  top: 2.66667px;\\n  right: 2.66667px;\\n  top: 0;\\n  right: 0;\\n  display: block;\\n  width: 20px;\\n  height: 20px;\\n  z-index: 10;\\n  border: 2px solid #ffffff;\\n  border-radius: 50%;\\n  background-color: #ff5722;\\n  color: #ffffff;\\n  font-size: 1.0rem;\\n  line-height: 16px;\\n  text-align: center; }\\n\\n/**\\r\\n * .gg-header\\r\\n * .gg-appbar\\r\\n * .gg-appbar-menu\\r\\n * .gg-searchbar\\r\\n * .gg-searchbar-icon\\r\\n * .gg-searchbar-cancel\\r\\n */\\n.gg-header {\\n  position: fixed;\\n  top: -70px;\\n  left: 0;\\n  width: 100%;\\n  height: 56px;\\n  z-index: 5;\\n  margin: 0;\\n  -webkit-transition-property: top;\\n  transition-property: top;\\n  will-change: top;\\n  -webkit-transition-duration: 0.2s;\\n          transition-duration: 0.2s;\\n  -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n          transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  .gg-header.is-visible {\\n    top: 0; }\\n  @media screen and (min-width: 600px) {\\n    .admin-bar .gg-header {\\n      top: -24px; }\\n      .admin-bar .gg-header.is-visible {\\n        top: 46px; } }\\n  @media screen and (min-width: 783px) {\\n    .admin-bar .gg-header {\\n      top: -38px; }\\n      .admin-bar .gg-header.is-visible {\\n        top: 32px; } }\\n\\n.gg-appbar,\\n.gg-searchbar {\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n  -webkit-flex-direction: row;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-flex-shrink: 0;\\n      -ms-flex-negative: 0;\\n          flex-shrink: 0;\\n  -webkit-flex-wrap: nowrap;\\n      -ms-flex-wrap: nowrap;\\n          flex-wrap: nowrap;\\n  -webkit-box-pack: start;\\n  -webkit-justify-content: flex-start;\\n      -ms-flex-pack: start;\\n          justify-content: flex-start;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  line-height: 2.4rem; }\\n\\n.gg-appbar {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  background-color: #ff5722;\\n  color: #ffffff;\\n  -webkit-transition-property: padding-left;\\n  transition-property: padding-left;\\n  will-change: padding-left;\\n  -webkit-transition-duration: 0.2s;\\n          transition-duration: 0.2s;\\n  -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n          transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  .gg-appbar h1 {\\n    -webkit-box-flex: 1;\\n    -webkit-flex-grow: 1;\\n        -ms-flex-positive: 1;\\n            flex-grow: 1;\\n    height: 24px;\\n    margin: 16px;\\n    font-size: inherit;\\n    font-weight: inherit;\\n    line-height: inherit; }\\n\\n.gg-searchbar {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  visibility: hidden;\\n  opacity: 0;\\n  background-color: #ffffff;\\n  color: rgba(0, 0, 0, 0.38);\\n  font-weight: 400;\\n  -webkit-transition-property: visibility, opacity;\\n  transition-property: visibility, opacity;\\n  will-change: visibility, opacity;\\n  -webkit-transition-duration: 0.2s;\\n          transition-duration: 0.2s;\\n  -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n          transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n  -webkit-transition-delay: 0s;\\n          transition-delay: 0s; }\\n  .gg-searchbar.is-visible {\\n    visibility: visible;\\n    opacity: 1; }\\n  .gg-searchbar form {\\n    -webkit-box-flex: 1;\\n    -webkit-flex-grow: 1;\\n        -ms-flex-positive: 1;\\n            flex-grow: 1;\\n    height: 24px;\\n    margin: 16px; }\\n    .gg-searchbar form input {\\n      display: block;\\n      width: 100%;\\n      height: 24px;\\n      padding: 0;\\n      border: none;\\n      outline: 0;\\n      color: rgba(0, 0, 0, 0.87);\\n      font-size: 1.8rem;\\n      line-height: 2.4rem; }\\n      .gg-searchbar form input::-webkit-input-placeholder {\\n        color: rgba(0, 0, 0, 0.38); }\\n      .gg-searchbar form input::-moz-placeholder {\\n        color: rgba(0, 0, 0, 0.38); }\\n      .gg-searchbar form input:-ms-input-placeholder {\\n        color: rgba(0, 0, 0, 0.38); }\\n      .gg-searchbar form input::placeholder {\\n        color: rgba(0, 0, 0, 0.38); }\\n  .gg-searchbar .gg-searchbar-cancel {\\n    visibility: hidden; }\\n    .gg-searchbar .gg-searchbar-cancel.is-visible {\\n      visibility: visible; }\\n\\n.gg-appbar-icon,\\n.gg-searchbar-icon {\\n  -webkit-flex-shrink: 0;\\n      -ms-flex-negative: 0;\\n          flex-shrink: 0; }\\n\\n.gg-appbar-icon {\\n  color: #ffffff; }\\n  .gg-appbar-icon:hover, .gg-appbar-icon:active, .gg-appbar-icon:visited {\\n    color: #ffffff; }\\n\\n.gg-searchbar-icon {\\n  color: rgba(0, 0, 0, 0.38); }\\n  .gg-searchbar-icon:hover, .gg-searchbar-icon:active, .gg-searchbar-icon:visited {\\n    color: rgba(0, 0, 0, 0.38); }\\n\\n.gg-appbar-menu {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  position: absolute;\\n  top: 4px;\\n  right: 4px;\\n  width: 200px;\\n  z-index: 5;\\n  visibility: hidden;\\n  opacity: 0;\\n  background: #ffffff;\\n  -webkit-transition-property: visibility, opacity, padding-left;\\n  transition-property: visibility, opacity, padding-left;\\n  will-change: visibility, opacity, padding-left;\\n  -webkit-transition-duration: 0.2s;\\n          transition-duration: 0.2s;\\n  -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n          transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  .gg-appbar-menu.is-visible {\\n    visibility: visible;\\n    opacity: 1; }\\n  .gg-appbar-menu ul {\\n    width: 100%;\\n    margin: 0;\\n    padding: 8px 0;\\n    list-style: none; }\\n    .gg-appbar-menu ul:not(:last-of-type) {\\n      border-bottom: 1px solid #eeeeee; }\\n    .gg-appbar-menu ul li {\\n      display: block;\\n      margin: 0;\\n      padding: 0; }\\n    .gg-appbar-menu ul a {\\n      display: -webkit-box;\\n      display: -webkit-flex;\\n      display: -ms-flexbox;\\n      display: flex;\\n      width: 100%;\\n      padding: 0 16px;\\n      color: #424242;\\n      line-height: 4.8rem; }\\n      .gg-appbar-menu ul a:hover {\\n        color: #424242; }\\n      .gg-appbar-menu ul a:active, .gg-appbar-menu ul a:focus {\\n        color: rgba(0, 0, 0, 0.87); }\\n      .gg-appbar-menu ul a span {\\n        line-height: 4.8rem; }\\n      .gg-appbar-menu ul a span:first-child {\\n        -webkit-box-flex: 1;\\n        -webkit-flex-grow: 1;\\n            -ms-flex-positive: 1;\\n                flex-grow: 1; }\\n      .gg-appbar-menu ul a span:last-child {\\n        padding-left: 16px; }\\n\\n@media (min-width: 1280px) {\\n  .gg-appbar,\\n  .gg-searchbar {\\n    padding-left: 240px; }\\n    .gg-appbar .gg-drawer-toggle,\\n    .gg-searchbar .gg-drawer-toggle {\\n      display: none; } }\\n\\n/**\\r\\n * .gg-drawer\\r\\n */\\n.gg-drawer {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n  -webkit-flex-direction: column;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-flex-wrap: nowrap;\\n      -ms-flex-wrap: nowrap;\\n          flex-wrap: nowrap;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: 10;\\n  overflow: visible;\\n  overflow-y: auto;\\n  width: 240px;\\n  height: 100%;\\n  min-height: 100vh;\\n  padding: 0;\\n  border-right: 1px solid #ecf0f1;\\n  background: #ffffff;\\n  -webkit-transform-style: preserve-3d;\\n          transform-style: preserve-3d;\\n  -webkit-transition-property: -webkit-transform;\\n  transition-property: -webkit-transform;\\n  transition-property: transform;\\n  transition-property: transform, -webkit-transform;\\n  will-change: transform;\\n  -webkit-transition-duration: 0.2s;\\n          transition-duration: 0.2s;\\n  -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n          transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  @media (max-width: 1280px) {\\n    .gg-drawer {\\n      -webkit-transform: translateX(-250px);\\n              transform: translateX(-250px); } }\\n  .gg-drawer.is-visible {\\n    -webkit-transform: translateX(0);\\n            transform: translateX(0); }\\n  .gg-drawer ul {\\n    width: 100%;\\n    margin: 0;\\n    padding: 8px 0;\\n    list-style: none; }\\n    .gg-drawer ul:not(:last-of-type) {\\n      border-bottom: 1px solid #eeeeee; }\\n    .gg-drawer ul li {\\n      display: block;\\n      margin: 0;\\n      padding: 0; }\\n    .gg-drawer ul a {\\n      display: -webkit-box;\\n      display: -webkit-flex;\\n      display: -ms-flexbox;\\n      display: flex;\\n      width: 100%;\\n      padding: 0 16px;\\n      color: #424242;\\n      line-height: 4.8rem; }\\n      .gg-drawer ul a:hover {\\n        color: #424242; }\\n      .gg-drawer ul a:active, .gg-drawer ul a:focus {\\n        color: rgba(0, 0, 0, 0.87); }\\n      .gg-drawer ul a span {\\n        line-height: 4.8rem; }\\n      .gg-drawer ul a span:first-child {\\n        width: 56px; }\\n      .gg-drawer ul a span:last-child {\\n        -webkit-box-flex: 1;\\n        -webkit-flex-grow: 1;\\n            -ms-flex-positive: 1;\\n                flex-grow: 1; }\\n  @media screen and (min-width: 600px) {\\n    .admin-bar .gg-drawer {\\n      padding-top: 46px; } }\\n  @media screen and (min-width: 783px) {\\n    .admin-bar .gg-drawer {\\n      padding-top: 32px; } }\\n\\n/**\\r\\n * .gg-cards\\r\\n * %gg-card\\r\\n * %gg-card-light\\r\\n * .gg-card-big\\r\\n * .gg-card-small\\r\\n * .gg-card-image\\r\\n *\\r\\n * .gg-card-media\\r\\n * .gg-card-content\\r\\n * .gg-card-headline\\r\\n * .gg-card-title\\r\\n * .gg-card-subtitle\\r\\n * .gg-card-payoff\\r\\n * .gg-card-actions\\r\\n * .gg-card-action-icons\\r\\n * .gg-card-action-buttons\\r\\n */\\n.gg-cards {\\n  /*display: flex;\\r\\n  flex-direction: row;\\r\\n  flex-wrap: wrap;\\r\\n  align-items: flex-start;*/\\n  position: relative;\\n  width: calc(100% - 8px);\\n  max-width: calc(100% - 8px);\\n  margin: 0 0 0 8px;\\n  padding-top: 84px; }\\n  @media (min-width: 600px) {\\n    .gg-cards {\\n      width: calc(100% - 16px);\\n      max-width: calc(100% - 16px);\\n      margin: 0 0 0 16px; } }\\n\\n.gg-card-big, .gg-card-small, .gg-card-image {\\n  float: left;\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-align-content: flex-start;\\n      -ms-flex-line-pack: start;\\n          align-content: flex-start;\\n  opacity: 0;\\n  border-radius: 2px;\\n  background: #ffffff;\\n  -webkit-transition-property: box-shadow, opacity;\\n  transition-property: box-shadow, opacity;\\n  will-change: box-shadow, opacity;\\n  -webkit-transition-duration: 0.2s;\\n          transition-duration: 0.2s;\\n  -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n          transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  .is-visible.gg-card-big, .is-visible.gg-card-small, .is-visible.gg-card-image {\\n    opacity: 1; }\\n  @media (max-width: 600px) {\\n    .gg-card-big, .gg-card-small, .gg-card-image {\\n      width: calc(100% - 8px);\\n      margin: 4px 0; } }\\n  @media (min-width: 600px) {\\n    .gg-card-big, .gg-card-small, .gg-card-image {\\n      width: calc(50% - 16px);\\n      margin: 8px 0; } }\\n  @media (min-width: 960px) {\\n    .gg-card-big, .gg-card-small, .gg-card-image {\\n      width: calc(33.333% - 16px); } }\\n  .gg-card-big .gg-card-media, .gg-card-small .gg-card-media, .gg-card-image .gg-card-media {\\n    background: rgba(0, 0, 0, 0.38) center center;\\n    background-size: cover; }\\n  .gg-card-big .gg-card-headline, .gg-card-small .gg-card-headline, .gg-card-image .gg-card-headline {\\n    margin: 0; }\\n    .gg-card-big .gg-card-headline .gg-card-title, .gg-card-small .gg-card-headline .gg-card-title, .gg-card-image .gg-card-headline .gg-card-title {\\n      margin: 0;\\n      padding-top: 8px;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-size: 2.4rem;\\n      font-weight: 400;\\n      line-height: 2.4rem; }\\n      .gg-card-big .gg-card-headline .gg-card-title .gg-card-payoff, .gg-card-small .gg-card-headline .gg-card-title .gg-card-payoff, .gg-card-image .gg-card-headline .gg-card-title .gg-card-payoff {\\n        display: block;\\n        font-size: 1.6rem;\\n        font-style: italic; }\\n    .gg-card-big .gg-card-headline .gg-card-subtitle, .gg-card-small .gg-card-headline .gg-card-subtitle, .gg-card-image .gg-card-headline .gg-card-subtitle {\\n      margin: 0;\\n      padding-top: 0.8rem;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-size: 1.4rem;\\n      font-weight: 400;\\n      line-height: 2rem; }\\n  .gg-card-big .gg-card-text, .gg-card-small .gg-card-text, .gg-card-image .gg-card-text {\\n    padding-bottom: 8px;\\n    /*&:last-child {\\r\\n      padding-top: gg-size(padding);\\r\\n      padding-bottom: gg-size(padding) + gg-size(margin);\\r\\n    }*/ }\\n  .gg-card-big .gg-card-actions, .gg-card-small .gg-card-actions, .gg-card-image .gg-card-actions {\\n    display: -webkit-box;\\n    display: -webkit-flex;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: horizontal;\\n    -webkit-box-direction: normal;\\n    -webkit-flex-direction: row;\\n        -ms-flex-direction: row;\\n            flex-direction: row;\\n    -webkit-box-pack: start;\\n    -webkit-justify-content: flex-start;\\n        -ms-flex-pack: start;\\n            justify-content: flex-start;\\n    padding: 0; }\\n    .gg-card-big .gg-card-actions > *:first-child, .gg-card-small .gg-card-actions > *:first-child, .gg-card-image .gg-card-actions > *:first-child {\\n      -webkit-box-flex: 1;\\n      -webkit-flex-grow: 1;\\n          -ms-flex-positive: 1;\\n              flex-grow: 1;\\n      text-align: left; }\\n    .gg-card-big .gg-card-actions > *:last-child, .gg-card-small .gg-card-actions > *:last-child, .gg-card-image .gg-card-actions > *:last-child {\\n      text-align: right; }\\n    .gg-card-big .gg-card-actions .gg-card-action-buttons .fa, .gg-card-small .gg-card-actions .gg-card-action-buttons .fa, .gg-card-image .gg-card-actions .gg-card-action-buttons .fa, .gg-card-big .gg-card-actions .gg-card-action-buttons .gg-icon-flat, .gg-card-small .gg-card-actions .gg-card-action-buttons .gg-icon-flat, .gg-card-image .gg-card-actions .gg-card-action-buttons .gg-icon-flat, .gg-card-big .gg-card-actions .gg-card-action-buttons\\n    .gg-icon-flat-light, .gg-card-small .gg-card-actions .gg-card-action-buttons\\n    .gg-icon-flat-light, .gg-card-image .gg-card-actions .gg-card-action-buttons\\n    .gg-icon-flat-light, .gg-card-big .gg-card-actions .gg-card-action-buttons .gg-appbar-icon, .gg-card-small .gg-card-actions .gg-card-action-buttons .gg-appbar-icon, .gg-card-image .gg-card-actions .gg-card-action-buttons .gg-appbar-icon, .gg-card-big .gg-card-actions .gg-card-action-buttons\\n    .gg-searchbar-icon, .gg-card-small .gg-card-actions .gg-card-action-buttons\\n    .gg-searchbar-icon, .gg-card-image .gg-card-actions .gg-card-action-buttons\\n    .gg-searchbar-icon, .gg-card-big .gg-card-actions .gg-card-action-buttons .gg-icon-chevron, .gg-card-small .gg-card-actions .gg-card-action-buttons .gg-icon-chevron, .gg-card-image .gg-card-actions .gg-card-action-buttons .gg-icon-chevron, .gg-card-big .gg-card-actions .gg-card-action-buttons .gg-icon-comments, .gg-card-small .gg-card-actions .gg-card-action-buttons .gg-icon-comments, .gg-card-image .gg-card-actions .gg-card-action-buttons .gg-icon-comments, .gg-card-big .gg-card-actions .gg-card-action-buttons .gg-icon-facebook, .gg-card-small .gg-card-actions .gg-card-action-buttons .gg-icon-facebook, .gg-card-image .gg-card-actions .gg-card-action-buttons .gg-icon-facebook, .gg-card-big .gg-card-actions .gg-card-action-buttons .gg-icon-twitter, .gg-card-small .gg-card-actions .gg-card-action-buttons .gg-icon-twitter, .gg-card-image .gg-card-actions .gg-card-action-buttons .gg-icon-twitter {\\n      margin-right: 4px;\\n      font-size: 1.6rem; }\\n    .gg-card-big .gg-card-actions .gg-card-action-icons, .gg-card-small .gg-card-actions .gg-card-action-icons, .gg-card-image .gg-card-actions .gg-card-action-icons {\\n      font-size: 2rem; }\\n  .gg-card-big .gg-card-addon, .gg-card-small .gg-card-addon, .gg-card-image .gg-card-addon {\\n    position: absolute;\\n    top: 100%;\\n    width: 100%;\\n    max-height: 0px;\\n    overflow: hidden;\\n    background: #ffffff;\\n    -webkit-transition-property: max-height;\\n    transition-property: max-height;\\n    will-change: max-height;\\n    -webkit-transition-duration: 0.2s;\\n            transition-duration: 0.2s;\\n    -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n            transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n    .gg-card-big .gg-card-addon.is-visible, .gg-card-small .gg-card-addon.is-visible, .gg-card-image .gg-card-addon.is-visible {\\n      max-height: 500px; }\\n    .gg-card-big .gg-card-addon .gg-card-addon-list ul, .gg-card-small .gg-card-addon .gg-card-addon-list ul, .gg-card-image .gg-card-addon .gg-card-addon-list ul {\\n      width: 100%;\\n      margin: 0;\\n      padding: 8px 0;\\n      list-style: none; }\\n      .gg-card-big .gg-card-addon .gg-card-addon-list ul:not(:last-of-type), .gg-card-small .gg-card-addon .gg-card-addon-list ul:not(:last-of-type), .gg-card-image .gg-card-addon .gg-card-addon-list ul:not(:last-of-type) {\\n        border-bottom: 1px solid #eeeeee; }\\n      .gg-card-big .gg-card-addon .gg-card-addon-list ul li, .gg-card-small .gg-card-addon .gg-card-addon-list ul li, .gg-card-image .gg-card-addon .gg-card-addon-list ul li {\\n        display: block;\\n        margin: 0;\\n        padding: 0; }\\n      .gg-card-big .gg-card-addon .gg-card-addon-list ul a, .gg-card-small .gg-card-addon .gg-card-addon-list ul a, .gg-card-image .gg-card-addon .gg-card-addon-list ul a {\\n        display: -webkit-box;\\n        display: -webkit-flex;\\n        display: -ms-flexbox;\\n        display: flex;\\n        width: 100%;\\n        padding: 0 16px;\\n        color: #424242;\\n        line-height: 4.8rem; }\\n        .gg-card-big .gg-card-addon .gg-card-addon-list ul a:hover, .gg-card-small .gg-card-addon .gg-card-addon-list ul a:hover, .gg-card-image .gg-card-addon .gg-card-addon-list ul a:hover {\\n          color: #424242; }\\n        .gg-card-big .gg-card-addon .gg-card-addon-list ul a:active, .gg-card-small .gg-card-addon .gg-card-addon-list ul a:active, .gg-card-image .gg-card-addon .gg-card-addon-list ul a:active, .gg-card-big .gg-card-addon .gg-card-addon-list ul a:focus, .gg-card-small .gg-card-addon .gg-card-addon-list ul a:focus, .gg-card-image .gg-card-addon .gg-card-addon-list ul a:focus {\\n          color: rgba(0, 0, 0, 0.87); }\\n        .gg-card-big .gg-card-addon .gg-card-addon-list ul a span, .gg-card-small .gg-card-addon .gg-card-addon-list ul a span, .gg-card-image .gg-card-addon .gg-card-addon-list ul a span {\\n          line-height: 4.8rem; }\\n        .gg-card-big .gg-card-addon .gg-card-addon-list ul a span:first-child, .gg-card-small .gg-card-addon .gg-card-addon-list ul a span:first-child, .gg-card-image .gg-card-addon .gg-card-addon-list ul a span:first-child {\\n          width: 56px; }\\n        .gg-card-big .gg-card-addon .gg-card-addon-list ul a span:last-child, .gg-card-small .gg-card-addon .gg-card-addon-list ul a span:last-child, .gg-card-image .gg-card-addon .gg-card-addon-list ul a span:last-child {\\n          -webkit-box-flex: 1;\\n          -webkit-flex-grow: 1;\\n              -ms-flex-positive: 1;\\n                  flex-grow: 1; }\\n\\n.gg-card-big .gg-card-content, .gg-card-small .gg-card-content {\\n  padding: 16px; }\\n\\n.gg-card-big .gg-card-headline, .gg-card-small .gg-card-headline {\\n  padding-bottom: 16px; }\\n  .gg-card-big .gg-card-headline .gg-card-payoff, .gg-card-small .gg-card-headline .gg-card-payoff {\\n    color: rgba(0, 0, 0, 0.38); }\\n  .gg-card-big .gg-card-headline .gg-card-subtitle, .gg-card-small .gg-card-headline .gg-card-subtitle {\\n    color: rgba(0, 0, 0, 0.54); }\\n\\n.gg-card-big .gg-card-actions, .gg-card-small .gg-card-actions {\\n  border-top: 1px solid #eeeeee; }\\n  .gg-card-big .gg-card-actions .gg-button-flat, .gg-card-small .gg-card-actions .gg-button-flat, .gg-card-big .gg-card-actions .gg-icon-flat, .gg-card-small .gg-card-actions .gg-icon-flat {\\n    color: #ff5722; }\\n    .gg-card-big .gg-card-actions .gg-button-flat:hover, .gg-card-small .gg-card-actions .gg-button-flat:hover, .gg-card-big .gg-card-actions .gg-icon-flat:hover, .gg-card-small .gg-card-actions .gg-icon-flat:hover {\\n      color: #ff5722; }\\n    .gg-card-big .gg-card-actions .gg-button-flat:active, .gg-card-small .gg-card-actions .gg-button-flat:active, .gg-card-big .gg-card-actions .gg-button-flat:focus, .gg-card-small .gg-card-actions .gg-button-flat:focus, .gg-card-big .gg-card-actions .gg-icon-flat:active, .gg-card-small .gg-card-actions .gg-icon-flat:active, .gg-card-big .gg-card-actions .gg-icon-flat:focus, .gg-card-small .gg-card-actions .gg-icon-flat:focus {\\n      color: #ff9800; }\\n  .gg-card-big .gg-card-actions .gg-icon-flat, .gg-card-small .gg-card-actions .gg-icon-flat {\\n    width: 36px;\\n    height: 36px;\\n    margin: 8px;\\n    line-height: 36px; }\\n\\n.gg-card-big {\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n  -webkit-flex-direction: column;\\n      -ms-flex-direction: column;\\n          flex-direction: column; }\\n  .gg-card-big .gg-card-media {\\n    width: 100%;\\n    padding-bottom: 56.25%;\\n    background-image: url(\\\"http://unsplash.it/650/200\\\"); }\\n\\n.gg-card-small {\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n  -webkit-flex-direction: row;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-flex-wrap: wrap;\\n      -ms-flex-wrap: wrap;\\n          flex-wrap: wrap;\\n  -webkit-box-align: start;\\n  -webkit-align-items: flex-start;\\n      -ms-flex-align: start;\\n              -ms-grid-row-align: flex-start;\\n          align-items: flex-start;\\n  /*.gg-card-text {\\r\\n    width: 100%;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n  }*/ }\\n  .gg-card-small .gg-card-media {\\n    -webkit-box-ordinal-group: 3;\\n    -webkit-order: 2;\\n        -ms-flex-order: 2;\\n            order: 2;\\n    -webkit-box-flex: 0;\\n    -webkit-flex-grow: 0;\\n        -ms-flex-positive: 0;\\n            flex-grow: 0;\\n    -webkit-flex-shrink: 0;\\n        -ms-flex-negative: 0;\\n            flex-shrink: 0;\\n    width: calc((100% - 16px) / 3);\\n    margin-top: 16px;\\n    margin-right: 16px;\\n    margin-bottom: 16px;\\n    padding-bottom: calc((100% - 16px) / 3);\\n    background-image: url(\\\"http://unsplash.it/300/300\\\"); }\\n  .gg-card-small .gg-card-content {\\n    -webkit-box-ordinal-group: 2;\\n    -webkit-order: 1;\\n        -ms-flex-order: 1;\\n            order: 1;\\n    -webkit-box-flex: 1;\\n    -webkit-flex-grow: 1;\\n        -ms-flex-positive: 1;\\n            flex-grow: 1;\\n    -webkit-flex-shrink: 0;\\n        -ms-flex-negative: 0;\\n            flex-shrink: 0;\\n    max-width: calc(((100% - 16px) / 3) * 2); }\\n  .gg-card-small .gg-card-headline {\\n    max-width: 100%; }\\n  .gg-card-small .gg-card-actions {\\n    width: 100%;\\n    -webkit-box-ordinal-group: 4;\\n    -webkit-order: 3;\\n        -ms-flex-order: 3;\\n            order: 3; }\\n\\n.gg-card-image {\\n  position: relative; }\\n  @media (max-width: 600px) {\\n    .gg-card-image {\\n      padding-bottom: calc(100% - 16px); } }\\n  @media (min-width: 600px) {\\n    .gg-card-image {\\n      padding-bottom: calc(50% - 16px); } }\\n  @media (min-width: 960px) {\\n    .gg-card-image {\\n      padding-bottom: calc(33.333% - 16px); } }\\n  .gg-card-image .gg-card-media {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    background-image: url(\\\"http://unsplash.it/600/600\\\"); }\\n  .gg-card-image .gg-card-content {\\n    position: absolute;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    padding-top: 16px;\\n    background-color: rgba(0, 0, 0, 0.5); }\\n  .gg-card-image .gg-card-headline {\\n    padding-right: 16px;\\n    padding-left: 16px;\\n    padding-bottom: 8px; }\\n    .gg-card-image .gg-card-headline .gg-card-title {\\n      color: #ffffff; }\\n      .gg-card-image .gg-card-headline .gg-card-title .gg-card-payoff {\\n        color: rgba(255, 255, 255, 0.3); }\\n    .gg-card-image .gg-card-headline .gg-card-subtitle {\\n      color: rgba(255, 255, 255, 0.7); }\\n  .gg-card-image .gg-card-actions .gg-button-flat-light,\\n  .gg-card-image .gg-card-actions .gg-icon-flat-light {\\n    color: #ffffff; }\\n    .gg-card-image .gg-card-actions .gg-button-flat-light:hover,\\n    .gg-card-image .gg-card-actions .gg-icon-flat-light:hover {\\n      color: #ffffff; }\\n    .gg-card-image .gg-card-actions .gg-button-flat-light:active, .gg-card-image .gg-card-actions .gg-button-flat-light:focus,\\n    .gg-card-image .gg-card-actions .gg-icon-flat-light:active,\\n    .gg-card-image .gg-card-actions .gg-icon-flat-light:focus {\\n      color: #ffffff; }\\n  .gg-card-image .gg-card-actions .gg-icon-flat-light {\\n    width: 36px;\\n    height: 36px;\\n    margin: 8px;\\n    line-height: 36px; }\\n\\n/**\\r\\n * .gg-article\\r\\n */\\n.gg-article {\\n  width: 100%; }\\n  .gg-article > header {\\n    display: -webkit-box;\\n    display: -webkit-flex;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n    -webkit-flex-direction: column;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    -webkit-flex-wrap: wrap;\\n        -ms-flex-wrap: wrap;\\n            flex-wrap: wrap;\\n    -webkit-box-pack: center;\\n    -webkit-justify-content: center;\\n        -ms-flex-pack: center;\\n            justify-content: center;\\n    -webkit-box-align: center;\\n    -webkit-align-items: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    width: 100%;\\n    min-height: 100vh;\\n    min-height: 50vh;\\n    padding: 74px 8px;\\n    text-align: center;\\n    background: rgba(0, 0, 0, 0.38) url(\\\"http://unsplash.it/1000/500\\\") center center;\\n    background-size: cover; }\\n    .gg-article > header h1 {\\n      margin: 0; }\\n    .gg-article > header h2 {\\n      margin: 0; }\\n\\n.gg-article-container {\\n  width: calc(100% - 16px);\\n  max-width: 700px;\\n  height: 500px;\\n  margin: -74px auto 8px auto;\\n  z-index: 100;\\n  border-radius: 2px;\\n  background: #ffffff; }\\n\\n.gg-article-info {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n  -webkit-flex-direction: row;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-pack: justify;\\n  -webkit-justify-content: space-between;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  -webkit-box-align: start;\\n  -webkit-align-items: flex-start;\\n      -ms-flex-align: start;\\n          align-items: flex-start;\\n  border-bottom: 1px solid #eeeeee; }\\n  .gg-article-info > :first-child {\\n    -webkit-box-flex: 1;\\n    -webkit-flex-grow: 1;\\n        -ms-flex-positive: 1;\\n            flex-grow: 1;\\n    display: -webkit-box;\\n    display: -webkit-flex;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: horizontal;\\n    -webkit-box-direction: normal;\\n    -webkit-flex-direction: row;\\n        -ms-flex-direction: row;\\n            flex-direction: row;\\n    -webkit-box-pack: start;\\n    -webkit-justify-content: flex-start;\\n        -ms-flex-pack: start;\\n            justify-content: flex-start;\\n    -webkit-box-align: center;\\n    -webkit-align-items: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    padding: 16px; }\\n    .gg-article-info > :first-child .gg-author-image {\\n      display: block;\\n      -webkit-box-flex: 0;\\n      -webkit-flex-grow: 0;\\n          -ms-flex-positive: 0;\\n              flex-grow: 0; }\\n      .gg-article-info > :first-child .gg-author-image img {\\n        width: 40px;\\n        height: 40px;\\n        border-radius: 50%; }\\n    .gg-article-info > :first-child .gg-article-meta {\\n      -webkit-box-flex: 1;\\n      -webkit-flex-grow: 1;\\n          -ms-flex-positive: 1;\\n              flex-grow: 1;\\n      padding-left: 16px; }\\n      .gg-article-info > :first-child .gg-article-meta a {\\n        display: block;\\n        color: #ff5722;\\n        line-height: 2rem; }\\n        .gg-article-info > :first-child .gg-article-meta a:hover {\\n          color: #ff9800; }\\n      .gg-article-info > :first-child .gg-article-meta span {\\n        display: block;\\n        color: rgba(0, 0, 0, 0.38);\\n        font-weight: 600; }\\n  .gg-article-info > :last-child {\\n    -webkit-box-flex: 0;\\n    -webkit-flex-grow: 0;\\n        -ms-flex-positive: 0;\\n            flex-grow: 0;\\n    padding: 8px;\\n    text-align: right; }\\n\\n.gg-article-actions {\\n  padding: 2px 0; }\\n  .gg-article-actions .gg-button-flat,\\n  .gg-article-actions .gg-icon-flat {\\n    color: #ff5722; }\\n    .gg-article-actions .gg-button-flat:hover,\\n    .gg-article-actions .gg-icon-flat:hover {\\n      color: #ff5722; }\\n    .gg-article-actions .gg-button-flat:active, .gg-article-actions .gg-button-flat:focus,\\n    .gg-article-actions .gg-icon-flat:active,\\n    .gg-article-actions .gg-icon-flat:focus {\\n      color: #ff9800; }\\n  .gg-article-actions .gg-button-flat .fa, .gg-article-actions .gg-button-flat .gg-icon-flat, .gg-article-actions .gg-button-flat\\n  .gg-icon-flat-light, .gg-article-actions .gg-button-flat .gg-appbar-icon, .gg-article-actions .gg-button-flat\\n  .gg-searchbar-icon, .gg-article-actions .gg-button-flat .gg-icon-chevron, .gg-article-actions .gg-button-flat .gg-icon-comments, .gg-article-actions .gg-button-flat .gg-icon-facebook, .gg-article-actions .gg-button-flat .gg-icon-twitter {\\n    font-size: 1.6rem; }\\n  .gg-article-actions .gg-icon-flat {\\n    margin-top: 0;\\n    margin-bottom: 0;\\n    font-size: 2rem; }\\n\\n/**\\r\\n * %gg-button\\r\\n * .gg-button-flat\\r\\n * .gg-button-flat-light\\r\\n */\\n.gg-button-flat,\\n.gg-button-flat-light {\\n  display: inline-block;\\n  min-width: 64px;\\n  height: 36px;\\n  margin: 8px;\\n  padding: 0 8px;\\n  border-radius: 2px;\\n  line-height: 36px;\\n  text-align: center;\\n  -webkit-transition-property: background-color;\\n  transition-property: background-color;\\n  will-change: background-color;\\n  -webkit-transition-duration: 0.2s;\\n          transition-duration: 0.2s;\\n  -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n          transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n  cursor: pointer; }\\n\\n.gg-button-flat:hover,\\n.gg-button-flat-light:hover {\\n  background-color: rgba(158, 158, 158, 0.2); }\\n\", \"\", {\"version\":3,\"sources\":[\"/./dev/scss/dev/scss/gg11.scss\",\"/./dev/scss/scss/utilities/_typography.scss\",\"/./dev/scss/scss/components/_article.scss\",\"/./dev/scss/scss/components/_header.scss\",\"/./dev/scss/scss/components/_cards.scss\",\"/./dev/scss/scss/components/_buttons.scss\",\"/./dev/scss/scss/font-awesome/font-awesome.scss\",\"/./dev/scss/scss/font-awesome/_path.scss\",\"/./dev/scss/scss/font-awesome/_core.scss\",\"/./dev/scss/scss/font-awesome/_larger.scss\",\"/./dev/scss/scss/font-awesome/_fixed-width.scss\",\"/./dev/scss/scss/font-awesome/_list.scss\",\"/./dev/scss/scss/font-awesome/_variables.scss\",\"/./dev/scss/scss/font-awesome/_bordered-pulled.scss\",\"/./dev/scss/scss/font-awesome/_animated.scss\",\"/./dev/scss/scss/font-awesome/_rotated-flipped.scss\",\"/./dev/scss/scss/font-awesome/_mixins.scss\",\"/./dev/scss/scss/font-awesome/_stacked.scss\",\"/./dev/scss/scss/font-awesome/_icons.scss\",\"/./dev/scss/scss/utilities/_normalize.scss\",\"/./dev/scss/scss/utilities/_reset.scss\",\"/./dev/scss/scss/utilities/_variables.scss\",\"/./dev/scss/scss/utilities/_utilities.scss\",\"/./dev/scss/scss/plugins/_waves.scss\",\"/./dev/scss/scss/plugins/_perfect-scrollbar.scss\",\"/./dev/scss/scss/components/_layout.scss\",\"/./dev/scss/scss/components/_obfuscator.scss\",\"/./dev/scss/scss/components/_icons.scss\",\"/./dev/scss/scss/components/_badges.scss\",\"/./dev/scss/scss/components/_drawer.scss\"],\"names\":[],\"mappings\":\"AAAA,iBAAiB;ACAjB;;;;;;;;;;;;;;;;GAgBG;ACTH;ED2DE,qCA7CmD;EA8CnD,kBAlC+B;EAmC/B,iBAyBK;EAvBH,oBAnBgC,EA6CnC;;AEpFD;EFsDE,qCA7CmD;EA8CnD,gBA/B+B;EAgC/B,iBAiDK,EAEN;;AEmCD;EFxFE,qCA7CmD;EA8CnD,kBA5B+B;EA6B/B,iBAwEK;EAtEH,oBAfgC,EAwFnC;;AGqDD;EHlIE,qCA7CmD;EA8CnD,kBA5B+B;EA6B/B,iBAgFK;EA9EH,kBAdgC,EA+FnC;;AC/FD;EDUE,qCA7CmD;EA8CnD,kBA1B+B;EA2B/B,iBAwFK,EAEN;;AIpID;;EJwCE,qCA7CmD;EA8CnD,kBAzB+B;EA0B/B,iBA+FK;EAEL,0BAA0B,EAC3B;;AKtKD;;;GAGG;ACHH;gCACgC;AAEhC;EACE,2BAA2B;EAC3B,mCAAQ;EACR,2PAI4F;EAE5F,oBAAoB;EACpB,mBAAmB,EAAA;;ACVrB;;;EACE,sBAAsB;EACtB,gDAAoF;EACpF,mBAAmB;EACnB,qBAAqB;EACrB,oCAAoC;EACpC,mCAAmC,EAEpC;;ACRD,8DAA8D;AAC9D;EACE,qBAAe;EACf,oBAAiB;EACjB,qBAAqB,EACtB;;AACD;EAAE,eAAe,EAAI;;AACrB;EAAE,eAAe,EAAI;;AACrB;EAAE,eAAe,EAAI;;AACrB;EAAE,eAAe,EAAI;;ACVrB;EACE,iBAAY;EACZ,mBAAmB,EACpB;;ACFD;EACE,gBAAgB;EAChB,uBCMyB;EDLzB,sBAAsB,EAEvB;EALD;IAIS,mBAAmB,EAAI;;AAEhC;EACE,mBAAmB;EACnB,iBCAyB;EDCzB,iBCDyB;EDEzB,eAAS;EACT,mBAAmB,EAIpB;EATD;IAOI,iBAAO,EACR;;AEdH;EACE,0BAA0B;EAC1B,0BDIwB;ECHxB,oBAAoB,EACrB;;AAED;EAAE,YAAY,EAAI;;AAClB;EAAE,aAAa,EAAI;;AAEnB;;;EACI,mBAAmB,EAAI;;AAD3B;;;EAEI,kBAAkB,EAAI;;AAG1B,4BAA4B;AAC5B;EAAc,aAAa,EAAI;;AAC/B;EAAa,YAAY,EAAI;;AAE7B;;;EACgB,mBAAmB,EAAI;;AADvC;;;EAEiB,kBAAkB,EAAI;;ACpBvC;EACE,8CAA8C;EACtC,sCAAsC,EAC/C;;AAED;EACE,gDAA4C;EACpC,wCAAoC,EAC7C;;AAED;EACE;IACE,gCAAyB;IACjB,wBAAiB,EAAA;EAE3B;IACE,kCAAyB;IACjB,0BAAiB,EAAA,EAAA;;AAI7B;EACE;IACE,gCAAyB;IACjB,wBAAiB,EAAA;EAE3B;IACE,kCAAyB;IACjB,0BAAiB,EAAA,EAAA;;AC5B7B;ECWE,iEAA2E;EAC3E,iCAAyB;EAEjB,yBAAiB,EDda;;AACxC;ECUE,iEAA2E;EAC3E,kCAAyB;EAEjB,0BAAiB,EDba;;AACxC;ECSE,iEAA2E;EAC3E,kCAAyB;EAEjB,0BAAiB,EDZa;;AAExC;ECcE,iEAA2E;EAC3E,gCAAwB;EAEhB,wBAAgB,EDjBW;;AACrC;ECaE,iEAA2E;EAC3E,gCAAwB;EAEhB,wBAAgB,EDhBW;;AAKrC;;;;;EACE,qBAAa;UAAb,aAAa,EACd;;AEZD;EACE,mBAAmB;EACnB,sBAAsB;EACtB,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,uBAAuB,EACxB;;AACD;EACE,mBAAmB;EACnB,QAAQ;EACR,YAAY;EACZ,mBAAmB,EACpB;;AACD;EAAE,qBAAqB,EAAI;;AAC3B;EAAE,eAAe,EAAI;;AACrB;EAAE,YLTwB,EKSF;;ACnBxB;oEACoE;AAEpE;EAAE,iBN4Sa,EAAO;;AM3StB;EAAE,iBNgba,EAAO;;AM/atB;EAAE,iBNwgBc,EAAO;;AMvgBvB;EAAE,iBNmNkB,EAAO;;AMlN3B;EAAE,iBNoUa,EAAO;;AMnUtB;EAAE,iBNyjBY,EAAO;;AMxjBrB;EAAE,iBN6jBc,EAAO;;AM5jBvB;EAAE,iBN+oBY,EAAO;;AM9oBrB;EAAE,iBN2PY,EAAO;;AM1PrB;EAAE,iBN4lBgB,EAAO;;AM3lBzB;EAAE,iBN0lBU,EAAO;;AMzlBnB;EAAE,iBN2lBe,EAAO;;AM1lBxB;EAAE,iBN2Ha,EAAO;;AM1HtB;;;;EAAE,iBNgmBa,EAAO;;AM/lBtB;EAAE,iBN8fmB,EAAO;;AM7f5B;EAAE,iBN4foB,EAAO;;AM3f7B;EAAE,iBNidiB,EAAO;;AMhd1B;EAAE,iBN+gBc,EAAO;;AM9gBvB;;EAAE,iBNqJW,EAAO;;AMpJpB;EAAE,iBNymBe,EAAO;;AMxmBxB;EAAE,iBNwTY,EAAO;;AMvTrB;EAAE,iBNkOc,EAAO;;AMjOvB;EAAE,iBNqIe,EAAO;;AMpIxB;EAAE,iBNqeY,EAAO;;AMperB;EAAE,iBNmLgB,EAAO;;AMlLzB;EAAE,iBNU2B,EAAO;;AMTpC;EAAE,iBNYyB,EAAO;;AMXlC;EAAE,iBNiUa,EAAO;;AMhUtB;EAAE,iBN+bqB,EAAO;;AM9b9B;;EAAE,iBN0dc,EAAO;;AMzdvB;EAAE,iBNode,EAAO;;AMndxB;EAAE,iBNoWgB,EAAO;;AMnWzB;EAAE,iBNuWY,EAAO;;AMtWrB;EAAE,iBNuOY,EAAO;;AMtOrB;EAAE,iBNqSkB,EAAO;;AMpS3B;EAAE,iBNmoBkB,EAAO;;AMloB3B;EAAE,iBNioBmB,EAAO;;AMhoB5B;EAAE,iBNkoBiB,EAAO;;AMjoB1B;EAAE,iBNgcc,EAAO;;AM/bvB;EAAE,iBNmBe,EAAO;;AMlBxB;EAAE,iBNmjBW,EAAO;;AMljBpB;EAAE,iBNmjBY,EAAO;;AMljBrB;EAAE,iBNgDY,EAAO;;AM/CrB;EAAE,iBNgDgB,EAAO;;AM/CzB;EAAE,iBNsba,EAAO;;AMrbtB;EAAE,iBNiEc,EAAO;;AMhEvB;EAAE,iBNqOY,EAAO;;AMpOrB;EAAE,iBNwCY,EAAO;;AMvCrB;EAAE,iBNuTc,EAAO;;AMtTvB;EAAE,iBNijBmB,EAAO;;AMhjB5B;EAAE,iBNijBkB,EAAO;;AMhjB3B;EAAE,iBNpCkB,EAAO;;AMqC3B;EAAE,iBNvCoB,EAAO;;AMwC7B;EAAE,iBNrCmB,EAAO;;AMsC5B;EAAE,iBNxCqB,EAAO;;AMyC9B;EAAE,iBN2UY,EAAO;;AM1UrB;;EAAE,iBNqYe,EAAO;;AMpYxB;EAAE,iBNoSc,EAAO;;AMnSvB;EAAE,iBNsmBoB,EAAO;;AMrmB7B;;;EAAE,iBNsZiB,EAAO;;AMrZ1B;EAAE,iBN8Yc,EAAO;;AM7YvB;EAAE,iBNsVkB,EAAO;;AMrV3B;EAAE,iBNnDc,EAAO;;AMoDvB;EAAE,iBNijBY,EAAO;;AMhjBrB;;EAAE,iBN4YuB,EAAO;;AM3YhC;EAAE,iBNodsB,EAAO;;AMnd/B;EAAE,iBNyEsB,EAAO;;AMxE/B;EAAE,iBNtBc,EAAO;;AMuBvB;EAAE,iBNkgBqB,EAAO;;AMjgB9B;EAAE,iBNqKqB,EAAO;;AMpK9B;EAAE,iBNlBgB,EAAO;;AMmBzB;EAAE,iBNkZY,EAAO;;AMjZrB;EAAE,iBN6Xa,EAAO;;AM5XtB;EAAE,iBNkgBY,EAAO;;AMjgBrB;EAAE,iBN6Me,EAAO;;AM5MxB;EAAE,iBNgKoB,EAAO;;AM/J7B;EAAE,iBN2foB,EAAO;;AM1f7B;EAAE,iBNoIa,EAAO;;AMnItB;EAAE,iBNmEoB,EAAO;;AMlE7B;EAAE,iBNmEqB,EAAO;;AMlE9B;EAAE,iBN8YmB,EAAO;;AM7Y5B;EAAE,iBNoVoB,EAAO;;AMnV7B;EAAE,iBN4hBoB,EAAO;;AM3hB7B;EAAE,iBNqDoB,EAAO;;AMpD7B;EAAE,iBNoZuB,EAAO;;AMnZhC;EAAE,iBN2QmB,EAAO;;AM1Q5B;EAAE,iBNoGkB,EAAO;;AMnG3B;EAAE,iBNwhBsB,EAAO;;AMvhB/B;EAAE,iBNiDsB,EAAO;;AMhD/B;EAAE,iBNnCW,EAAO;;AMoCpB;EAAE,iBNhDkB,EAAO;;AMiD3B;EAAE,iBNhDmB,EAAO;;AMiD5B;EAAE,iBNhDgB,EAAO;;AMiDzB;EAAE,iBNpDkB,EAAO;;AMqD3B;;;EAAE,iBNmba,EAAO;;AMlbtB;EAAE,iBNgIc,EAAO;;AM/HvB;EAAE,iBNiFgB,EAAO;;AMhFzB;EAAE,iBN4XY,EAAO;;AM3XrB;EAAE,iBNkUa,EAAO;;AMjUtB;EAAE,iBNlDgB,EAAO;;AMmDzB;EAAE,iBNyH0B,EAAO;;AMxHnC;EAAE,iBNgMY,EAAO;;AM/LrB;EAAE,iBN4QY,EAAO;;AM3QrB;EAAE,iBN8JY,EAAO;;AM7JrB;EAAE,iBN2HW,EAAO;;AM1HpB;EAAE,iBN2HiB,EAAO;;AM1H1B;;EAAE,iBNoH4B,EAAO;;AMnHrC;EAAE,iBN6Wa,EAAO;;AM5WtB;EAAE,iBNJgB,EAAO;;AMKzB;EAAE,iBN+Xc,EAAO;;AM9XvB;EAAE,iBN4De,EAAO;;AM3DxB;EAAE,iBN8Rc,EAAO;;AM7RvB;EAAE,iBNmCkB,EAAO;;AMlC3B;EAAE,iBN+BoB,EAAO;;AM9B7B;EAAE,iBNwYe,EAAO;;AMvYxB;EAAE,iBN0aqB,EAAO;;AMza9B;EAAE,iBN2Jc,EAAO;;AM1JvB;EAAE,iBN4JmB,EAAO;;AM3J5B;EAAE,iBNtEgB,EAAO;;AMuEzB;EAAE,iBNxEgB,EAAO;;AMyEzB;;EAAE,iBNhEiB,EAAO;;AMiE1B;EAAE,iBNihBsB,EAAO;;AMhhB/B;EAAE,iBN+GuB,EAAO;;AM9GhC;EAAE,iBNZoB,EAAO;;AMa7B;EAAE,iBN+OW,EAAO;;AM9OpB;;EAAE,iBN2CY,EAAO;;AM1CrB;EAAE,iBNgDgB,EAAO;;AM/CzB;EAAE,iBN2emB,EAAO;;AM1e5B;EAAE,iBNyeqB,EAAO;;AMxe9B;EAAE,iBN8biB,EAAO;;AM7b1B;EAAE,iBNuMe,EAAO;;AMtMxB;EAAE,iBN4ZgB,EAAO;;AM3ZzB;EAAE,iBN4PuB,EAAO;;AM3PhC;EAAE,iBNkekB,EAAO;;AMje3B;EAAE,iBN2FqB,EAAO;;AM1F9B;EAAE,iBNuZe,EAAO;;AMtZxB;EAAE,iBNwfc,EAAO;;AMvfvB;EAAE,iBNiKqB,EAAO;;AMhK9B;EAAE,iBNygBc,EAAO;;AMxgBvB;EAAE,iBN0Oe,EAAO;;AMzOxB;EAAE,iBNkUa,EAAO;;AMjUtB;EAAE,iBN8agB,EAAO;;AM7azB;EAAE,iBNlDkB,EAAO;;AMmD3B;EAAE,iBNgUoB,EAAO;;AM/T7B;EAAE,iBNyfe,EAAO;;AMxfxB;;EAAE,iBNqFgB,EAAO;;AMpFzB;EAAE,iBNsJc,EAAO;;AMrJvB;EAAE,iBN6fc,EAAO;;AM5fvB;EAAE,iBNmCmB,EAAO;;AMlC5B;;EAAE,iBN4WW,EAAO;;AM3WpB;EAAE,iBN+Ka,EAAO;;AM9KtB;EAAE,iBNrDgB,EAAO;;AMsDzB;EAAE,iBN9EY,EAAO;;AM+ErB;EAAE,iBNrBmB,EAAO;;AMsB5B;EAAE,iBNiKoB,EAAO;;AMhK7B;EAAE,iBN+JmB,EAAO;;AM9J5B;EAAE,iBNgKiB,EAAO;;AM/J1B;EAAE,iBN4JmB,EAAO;;AM3J5B;EAAE,iBN5HyB,EAAO;;AM6HlC;EAAE,iBNxH0B,EAAO;;AMyHnC;EAAE,iBNxHuB,EAAO;;AMyHhC;EAAE,iBNhIyB,EAAO;;AMiIlC;EAAE,iBN2Ia,EAAO;;AM1ItB;EAAE,iBNghBc,EAAO;;AM/gBvB;EAAE,iBNyba,EAAO;;AMxbtB;EAAE,iBN+Fc,EAAO;;AM9FvB;EAAE,iBNzEiB,EAAO;;AM0E1B;EAAE,iBNzHkB,EAAO;;AM0H3B;;EAAE,iBNmfa,EAAO;;AMlftB;;EAAE,iBNqNY,EAAO;;AMpNrB;EAAE,iBNZa,EAAO;;AMatB;EAAE,iBNiGa,EAAO;;AMhGtB;;EAAE,iBN4VgB,EAAO;;AM3VzB;;EAAE,iBNqFe,EAAO;;AMpFxB;EAAE,iBNoRiB,EAAO;;AMnR1B;;EAAE,iBN+FgB,EAAO;;AM9FzB;EAAE,iBN0Yc,EAAO;;AMzYvB;;;;EAAE,iBNtHY,EAAO;;AMuHrB;EAAE,iBNmNe,EAAO;;AMlNxB;EAAE,iBNiNe,EAAO;;AMhNxB;EAAE,iBN2ZqB,EAAO;;AM1Z9B;EAAE,iBNudiB,EAAO;;AMtd1B;EAAE,iBNkaa,EAAO;;AMjatB;EAAE,iBNqNa,EAAO;;AMpNtB;EAAE,iBNyca,EAAO;;AMxctB;EAAE,iBN4RiB,EAAO;;AM3R1B;EAAE,iBN6RwB,EAAO;;AM5RjC;EAAE,iBNqH0B,EAAO;;AMpHnC;EAAE,iBNmHmB,EAAO;;AMlH5B;EAAE,iBN+Oa,EAAO;;AM9OtB;EAAE,iBN7EkB,EAAO;;AM8E3B;EAAE,iBNvEgB,EAAO;;AMwEzB;EAAE,iBN9EkB,EAAO;;AM+E3B;EAAE,iBN9EmB,EAAO;;AM+E5B;EAAE,iBNzBe,EAAO;;AM0BxB;;EAAE,iBNuWY,EAAO;;AMtWrB;;EAAE,iBN4WiB,EAAO;;AM3W1B;;EAAE,iBN0WgB,EAAO;;AMzWzB;EAAE,iBNegB,EAAO;;AMdzB;EAAE,iBNwLgB,EAAO;;AMvLzB;;EAAE,iBNqcY,EAAO;;AMpcrB;;;EAAE,iBNmFa,EAAO;;AMlFtB;;EAAE,iBNgZkB,EAAO;;AM/Y3B;EAAE,iBNhCiB,EAAO;;AMiC1B;EAAE,iBN7BkB,EAAO;;AM8B3B;;EAAE,iBNrHY,EAAO;;AMsHrB;EAAE,iBNoVe,EAAO;;AMnVxB;EAAE,iBN4bgB,EAAO;;AM3bzB;;EAAE,iBNtDiB,EAAO;;AMuD1B;EAAE,iBN2KmB,EAAO;;AM1K5B;EAAE,iBNSgB,EAAO;;AMRzB;EAAE,iBNpDsB,EAAO;;AMqD/B;EAAE,iBNpDoB,EAAO;;AMqD7B;EAAE,iBNkce,EAAO;;AMjcxB;EAAE,iBNkXmB,EAAO;;AMjX5B;EAAE,iBN6XgB,EAAO;;AM5XzB;EAAE,iBN7Ic,EAAO;;AM8IvB;EAAE,iBNnDc,EAAO;;AMoDvB;EAAE,iBN3Be,EAAO;;AM4BxB;EAAE,iBNmCmB,EAAO;;AMlC5B;EAAE,iBN3HkB,EAAO;;AM4H3B;EAAE,iBNgHkB,EAAO;;AM/G3B;EAAE,iBN5MiB,EAAO;;AM6M1B;EAAE,iBNgMc,EAAO;;AM/LvB;EAAE,iBNemB,EAAO;;AMd5B;EAAE,iBN1JY,EAAO;;AM2JrB;EAAE,iBNmFgB,EAAO;;AMlFzB;EAAE,iBN4PmB,EAAO;;AM3P5B;EAAE,iBN7MyB,EAAO;;AM8MlC;EAAE,iBN7M0B,EAAO;;AM8MnC;EAAE,iBN7MuB,EAAO;;AM8MhC;EAAE,iBNjNyB,EAAO;;AMkNlC;EAAE,iBN7MkB,EAAO;;AM8M3B;EAAE,iBN7MmB,EAAO;;AM8M5B;EAAE,iBN7MgB,EAAO;;AM8MzB;EAAE,iBNjNkB,EAAO;;AMkN3B;EAAE,iBNvCe,EAAO;;AMwCxB;EAAE,iBNkIc,EAAO;;AMjIvB;EAAE,iBN2Wc,EAAO;;AM1WvB;;EAAE,iBN0Lc,EAAO;;AMzLvB;EAAE,iBNzFgB,EAAO;;AM0FzB;EAAE,iBNwPkB,EAAO;;AMvP3B;EAAE,iBNwPmB,EAAO;;AMvP5B;EAAE,iBNoUe,EAAO;;AMnUxB;EAAE,iBN9Fc,EAAO;;AM+FvB;;EAAE,iBNmQa,EAAO;;AMlQtB;EAAE,iBNmDkB,EAAO;;AMlD3B;EAAE,iBNyBgB,EAAO;;AMxBzB;EAAE,iBN0BqB,EAAO;;AMzB9B;EAAE,iBN+Se,EAAO;;AM9SxB;EAAE,iBN+Be,EAAO;;AM9BxB;EAAE,iBNqKa,EAAO;;AMpKtB;EAAE,iBN+Be,EAAO;;AM9BxB;EAAE,iBN+GkB,EAAO;;AM9G3B;EAAE,iBNYc,EAAO;;AMXvB;EAAE,iBNUsB,EAAO;;AMT/B;EAAE,iBNiWgB,EAAO;;AMhWzB;EAAE,iBN/FY,EAAO;;AMgGrB;;EAAE,iBNuPiB,EAAO;;AMtP1B;;;EAAE,iBN+TmB,EAAO;;AM9T5B;EAAE,iBNkIsB,EAAO;;AMjI/B;EAAE,iBN5EY,EAAO;;AM6ErB;EAAE,iBNnGiB,EAAO;;AMoG1B;;EAAE,iBNjIoB,EAAO;;AMkI7B;EAAE,iBN+NgB,EAAO;;AM9NzB;EAAE,iBNsFY,EAAO;;AMrFrB;EAAE,iBN9CmB,EAAO;;AM+C5B;EAAE,iBN2UmB,EAAO;;AM1U5B;EAAE,iBNsUiB,EAAO;;AMrU1B;EAAE,iBNrDc,EAAO;;AMsDvB;EAAE,iBNsNoB,EAAO;;AMrN7B;EAAE,iBNmJkB,EAAO;;AMlJ3B;EAAE,iBNmJwB,EAAO;;AMlJjC;EAAE,iBNuQc,EAAO;;AMtQvB;EAAE,iBNvKkB,EAAO;;AMwK3B;EAAE,iBNbyB,EAAO;;AMclC;EAAE,iBNyOc,EAAO;;AMxOvB;EAAE,iBNuIc,EAAO;;AMtIvB;EAAE,iBNzI2B,EAAO;;AM0IpC;EAAE,iBNzI4B,EAAO;;AM0IrC;EAAE,iBNzIyB,EAAO;;AM0IlC;EAAE,iBN7I2B,EAAO;;AM8IpC;EAAE,iBN8Da,EAAO;;AM7DtB;EAAE,iBNhGY,EAAO;;AMiGrB;EAAE,iBNzQc,EAAO;;AM0QvB;EAAE,iBNoXkB,EAAO;;AMnX3B;EAAE,iBN3LgB,EAAO;;AM4LzB;EAAE,iBN7EkB,EAAO;;AM8E3B;EAAE,iBN7EkB,EAAO;;AM8E3B;EAAE,iBNiOkB,EAAO;;AMhO3B;EAAE,iBNwLmB,EAAO;;AMvL5B;EAAE,iBNyUc,EAAO;;AMxUvB;EAAE,iBNkIoB,EAAO;;AMjI7B;EAAE,iBNkIsB,EAAO;;AMjI/B;EAAE,iBNiFgB,EAAO;;AMhFzB;EAAE,iBN+EkB,EAAO;;AM9E3B;EAAE,iBN9JoB,EAAO;;AM+J7B;EAAE,iBNkKqB,EAAO;;AMjK9B;EAAE,iBNxE4B,EAAO;;AMyErC;EAAE,iBNyOoB,EAAO;;AMxO7B;EAAE,iBN5He,EAAO;;AM6HxB;;EAAE,iBNzL2B,EAAO;;AM0LpC;;EAAE,iBNvLyB,EAAO;;AMwLlC;;EAAE,iBNzL4B,EAAO;;AM0LrC;;EAAE,iBNvFW,EAAO;;AMwFpB;EAAE,iBNpBW,EAAO;;AMqBpB;;EAAE,iBNmWW,EAAO;;AMlWpB;;EAAE,iBN8CW,EAAO;;AM7CpB;;;;EAAE,iBNqDW,EAAO;;AMpDpB;;;EAAE,iBN8MW,EAAO;;AM7MpB;;EAAE,iBNuDW,EAAO;;AMtDpB;;EAAE,iBNzNW,EAAO;;AM0NpB;EAAE,iBNxEY,EAAO;;AMyErB;EAAE,iBN5DiB,EAAO;;AM6D1B;EAAE,iBNiPsB,EAAO;;AMhP/B;EAAE,iBNiPuB,EAAO;;AMhPhC;EAAE,iBNiPuB,EAAO;;AMhPhC;EAAE,iBNiPwB,EAAO;;AMhPjC;EAAE,iBNoPwB,EAAO;;AMnPjC;EAAE,iBNoPyB,EAAO;;AMnPlC;EAAE,iBN2SiB,EAAO;;AM1S1B;EAAE,iBNuSmB,EAAO;;AMtS5B;EAAE,iBN6XsB,EAAO;;AM5X/B;EAAE,iBN0Xe,EAAO;;AMzXxB;EAAE,iBNgXY,EAAO;;AM/WrB;EAAE,iBNgXmB,EAAO;;AM/W5B;EAAE,iBNwXoB,EAAO;;AMvX7B;EAAE,iBN1He,EAAO;;AM2HxB;EAAE,iBNqPsB,EAAO;;AMpP/B;EAAE,iBNyBiB,EAAO;;AMxB1B;EAAE,iBN7Dc,EAAO;;AM8DvB;EAAE,iBN/TW,EAAO;;AMgUpB;EAAE,iBN3PiB,EAAO;;AM4P1B;EAAE,iBN3PwB,EAAO;;AM4PjC;EAAE,iBNsTc,EAAO;;AMrTvB;EAAE,iBNsTqB,EAAO;;AMrT9B;EAAE,iBNwDuB,EAAO;;AMvDhC;EAAE,iBN0DqB,EAAO;;AMzD9B;EAAE,iBNuDuB,EAAO;;AMtDhC;EAAE,iBNuDwB,EAAO;;AMtDjC;EAAE,iBNtTa,EAAO;;AMuTtB;EAAE,iBN2Ve,EAAO;;AM1VxB;EAAE,iBNlUe,EAAO;;AMmUxB;EAAE,iBN0Ca,EAAO;;AMzCtB;EAAE,iBN5IgB,EAAO;;AM6IzB;EAAE,iBN2Ma,EAAO;;AM1MtB;EAAE,iBNlEkB,EAAO;;AMmE3B;EAAE,iBNmSc,EAAO;;AMlSvB;EAAE,iBN9Gc,EAAO;;AM+GvB;EAAE,iBNoDY,EAAO;;AMnDrB;;EAAE,iBN3CgB,EAAO;;AM4CzB;EAAE,iBNsPa,EAAO;;AMrPtB;EAAE,iBN6Ec,EAAO;;AM5EvB;EAAE,iBNlUe,EAAO;;AMmUxB;EAAE,iBNnQW,EAAO;;AMoQpB;EAAE,iBNiUU,EAAO;;AMhUnB;EAAE,iBNsUa,EAAO;;AMrUtB;EAAE,iBNgJc,EAAO;;AM/IvB;EAAE,iBNwFiB,EAAO;;AMvF1B;EAAE,iBNqNsB,EAAO;;AMpN/B;EAAE,iBNnU4B,EAAO;;AMoUrC;EAAE,iBNrU2B,EAAO;;AMsUpC;;EAAE,iBNrP2B,EAAO;;AMsPpC;EAAE,iBNjKoB,EAAO;;AMkK7B;EAAE,iBNiUkB,EAAO;;AMhU3B;EAAE,iBNqToB,EAAO;;AMpT7B;;EAAE,iBNoRW,EAAO;;AMnRpB;EAAE,iBNiHqB,EAAO;;AMhH9B;EAAE,iBNsMqB,EAAO;;AMrM9B;EAAE,iBNoLa,EAAO;;AMnLtB;EAAE,iBN3JuB,EAAO;;AM4JhC;EAAE,iBN+TiB,EAAO;;AM9T1B;EAAE,iBNsEc,EAAO;;AMrEvB;;;EAAE,iBNyRkB,EAAO;;AMxR3B;;EAAE,iBNpEsB,EAAO;;AMqE/B;EAAE,iBNiUa,EAAO;;AMhUtB;EAAE,iBN1Ec,EAAO;;AM2EvB;EAAE,iBNsHc,EAAO;;AMrHvB;EAAE,iBNuHqB,EAAO;;AMtH9B;EAAE,iBNsN0B,EAAO;;AMrNnC;EAAE,iBNoNmB,EAAO;;AMnN5B;EAAE,iBNzLiB,EAAO;;AM0L1B;EAAE,iBNtLY,EAAO;;AMuLrB;EAAE,iBNoFkB,EAAO;;AMnF3B;EAAE,iBNoFsB,EAAO;;AMnF/B;EAAE,iBNnLc,EAAO;;AMoLvB;EAAE,iBN1Bc,EAAO;;AM2BvB;EAAE,iBNrBgB,EAAO;;AMsBzB;EAAE,iBNxJW,EAAO;;AMyJpB;EAAE,iBNrSgB,EAAO;;AMsSzB;EAAE,iBNlPa,EAAO;;AMmPtB;EAAE,iBNiEW,EAAO;;AMhEpB;EAAE,iBNgLa,EAAO;;AM/KtB;EAAE,iBN7MY,EAAO;;AM8MrB;EAAE,iBN7Ma,EAAO;;AM8MtB;EAAE,iBNnUe,EAAO;;AMoUxB;EAAE,iBNnUsB,EAAO;;AMoU/B;EAAE,iBNuLa,EAAO;;AMtLtB;EAAE,iBNuLoB,EAAO;;AMtL7B;EAAE,iBN+Fe,EAAO;;AM9FxB;;EAAE,iBNhSW,EAAO;;AMiSpB;;EAAE,iBN6MY,EAAO;;AM5MrB;EAAE,iBN2OY,EAAO;;AM1OrB;EAAE,iBNsKe,EAAO;;AMrKxB;EAAE,iBN9MkB,EAAO;;AM+M3B;EAAE,iBNgKkB,EAAO;;AM/J3B;EAAE,iBNpNgB,EAAO;;AMqNzB;EAAE,iBN/JkB,EAAO;;AMgK3B;EAAE,iBNxJmB,EAAO;;AMyJ5B;EAAE,iBNrKoB,EAAO;;AMsK7B;EAAE,iBN/JyB,EAAO;;AMgKlC;;;EAAE,iBNtKoB,EAAO;;AMuK7B;;EAAE,iBN3KsB,EAAO;;AM4K/B;;EAAE,iBN3KoB,EAAO;;AM4K7B;;EAAE,iBN/JoB,EAAO;;AMgK7B;EAAE,iBN5KmB,EAAO;;AM6K5B;EAAE,iBNmQY,EAAO;;AMlQrB;EAAE,iBN7Pe,EAAO;;AM8PxB;EAAE,iBNxDgB,EAAO;;AMyDzB;;;;;EAAE,iBNzCiB,EAAO;;AM0C1B;EAAE,iBN5QsB,EAAO;;AM6Q/B;;EAAE,iBNwEa,EAAO;;AMvEtB;;EAAE,iBNlNc,EAAO;;AMmNvB;EAAE,iBNhIkB,EAAO;;AMiI3B;EAAE,iBNlIW,EAAO;;AMmIpB;;;EAAE,iBNnHmB,EAAO;;AMoH5B;EAAE,iBNsLqB,EAAO;;AMrL9B;EAAE,iBN0DU,EAAO;;AMzDnB;;EAAE,iBN+Pc,EAAO;;AM9PvB;;EAAE,iBNmBmB,EAAO;;AMlB5B;;EAAE,iBNmBqB,EAAO;;AMlB9B;EAAE,iBNpGe,EAAO;;AMqGxB;EAAE,iBNvRmB,EAAO;;AMwR5B;EAAE,iBN3Gc,EAAO;;AM4GvB;EAAE,iBNiBiB,EAAO;;AMhB1B;EAAE,iBNmHe,EAAO;;AMlHxB;EAAE,iBN8FiB,EAAO;;AM7F1B;EAAE,iBN8FwB,EAAO;;AM7FjC;EAAE,iBN7VY,EAAO;;AM8VrB;;EAAE,iBN7JgB,EAAO;;AM8JzB;EAAE,iBN2MW,EAAO;;AM1MpB;EAAE,iBN1WkB,EAAO;;AM2W3B;EAAE,iBNkCY,EAAO;;AMjCrB;EAAE,iBN4GkB,EAAO;;AM3G3B;EAAE,iBN4Mc,EAAO;;AM3MvB;EAAE,iBN8PY,EAAO;;AM7PrB;EAAE,iBNVmB,EAAO;;AMW5B;EAAE,iBN+OY,EAAO;;AM9OrB;EAAE,iBNzVkB,EAAO;;AM0V3B;EAAE,iBNQc,EAAO;;AMPvB;EAAE,iBNjJqB,EAAO;;AMkJ9B;EAAE,iBNhUe,EAAO;;AMiUxB;EAAE,iBNpUqB,EAAO;;AMqU9B;EAAE,iBNvUmB,EAAO;;AMwU5B;EAAE,iBN1Ue,EAAO;;AM2UxB;EAAE,iBNtUiB,EAAO;;AMuU1B;EAAE,iBNtUiB,EAAO;;AMuU1B;EAAE,iBN7XkB,EAAO;;AM8X3B;EAAE,iBN7XoB,EAAO;;AM8X7B;EAAE,iBNgLa,EAAO;;AM/KtB;EAAE,iBNvRiB,EAAO;;AMwR1B;EAAE,iBN3ZU,EAAO;;AM4ZnB;EAAE,iBNzOkB,EAAO;;AM0O3B;EAAE,iBNhBmB,EAAO;;AMiB5B;EAAE,iBNhYqB,EAAO;;AMiY9B;EAAE,iBNjbkB,EAAO;;AMkb3B;EAAE,iBNAiB,EAAO;;AMC1B;EAAE,iBNtFkB,EAAO;;AMuF3B;EAAE,iBNpGc,EAAO;;AMqGvB;EAAE,iBNpGqB,EAAO;;AMqG9B;EAAE,iBN6JkB,EAAO;;AM5J3B;EAAE,iBN6JiB,EAAO;;AM5J1B;EAAE,iBN1Ye,EAAO;;AM2YxB;EAAE,iBNrXW,EAAO;;AMsXpB;EAAE,iBNpHe,EAAO;;AMqHxB;EAAE,iBNtciB,EAAO;;AMuc1B;EAAE,iBNjWU,EAAO;;AMkWnB;;;EAAE,iBNnIW,EAAO;;AMoIpB;EAAE,iBNjEgB,EAAO;;AMkEzB;EAAE,iBN1XkB,EAAO;;AM2X3B;EAAE,iBN9SsB,EAAO;;AM+S/B;EAAE,iBNhSgB,EAAO;;AMiSzB;EAAE,iBN5MgB,EAAO;;AM6MzB;EAAE,iBNhHe,EAAO;;AMiHxB;EAAE,iBNyCc,EAAO;;AMxCvB;EAAE,iBNqDoB,EAAO;;AMpD7B;EAAE,iBN2DmB,EAAO;;AM1D5B;EAAE,iBN4DgB,EAAO;;AM3DzB;EAAE,iBN9WiB,EAAO;;AM+W1B;EAAE,iBNhXuB,EAAO;;AMiXhC;EAAE,iBNnSe,EAAO;;AMoSxB;EAAE,iBN8CY,EAAO;;AM7CrB;EAAE,iBN6KmB,EAAO;;AM5K5B;EAAE,iBN9DkB,EAAO;;AM+D3B;EAAE,iBNgGmB,EAAO;;AM/F5B;EAAE,iBNrKiB,EAAO;;AMsK1B;EAAE,iBN4Ka,EAAO;;AM3KtB;EAAE,iBN1FY,EAAO;;AM2FrB;EAAE,iBNjFe,EAAO;;AMkFxB;;EAAE,iBNsImB,EAAO;;AMrI5B;EAAE,iBNsIuB,EAAO;;AMrIhC;EAAE,iBNwKoB,EAAO;;AMvK7B;EAAE,iBN9FmB,EAAO;;AM+F5B;EAAE,iBNuKkB,EAAO;;AMtK3B;EAAE,iBN/FmB,EAAO;;AMgG5B;EAAE,iBN9FqB,EAAO;;AM+F9B;EAAE,iBNhGqB,EAAO;;AMiG9B;EAAE,iBNxEc,EAAO;;AMyEvB;EAAE,iBN3NkB,EAAO;;AM4N3B;EAAE,iBNrRyB,EAAO;;AMsRlC;EAAE,iBNxCmB,EAAO;;AMyC5B;EAAE,iBN6KgB,EAAO;;AM5KzB;EAAE,iBNgBc,EAAO;;AMfvB;EAAE,iBNuJiB,EAAO;;AMtJ1B;EAAE,iBNwJkB,EAAO;;AMvJ3B;;EAAE,iBN7bW,EAAO;;AM8bpB;EAAE,iBN2Je,EAAO;;AM1JxB;EAAE,iBNmHa,EAAO;;AMlHtB;EAAE,iBN6Ec,EAAO;;AM5EvB;EAAE,iBNzGc,EAAO;;AM0GvB;;EAAE,iBN8KoB,EAAO;;AM7K7B;EAAE,iBN7EqB,EAAO;;AM8E9B;EAAE,iBNjFgB,EAAO;;AMkFzB;EAAE,iBN3SoB,EAAO;;AM4S7B;;EAAE,iBN1coB,EAAO;;AM2c7B;;EAAE,iBNxc8B,EAAO;;AMycvC;;EAAE,iBN3coB,EAAO;;AM4c7B;;EAAE,iBN3cuB,EAAO;;AM4chC;;EAAE,iBN/cqB,EAAO;;AMgd9B;EAAE,iBNjGqB,EAAO;;AMkG9B;EAAE,iBNzLgB,EAAO;;AM0LzB;EAAE,iBN9FoB,EAAO;;AM+F7B;EAAE,iBN9FsB,EAAO;;AM+F/B;EAAE,iBNoDmB,EAAO;;AMnD5B;EAAE,iBNoDqB,EAAO;;AMnD9B;EAAE,iBNxZc,EAAO;;AMyZvB;EAAE,iBN3ZsB,EAAO;;AM4Z/B;EAAE,iBN7Xa,EAAO;;AM8XtB;EAAE,iBNreqB,EAAO;;AMse9B;EAAE,iBNtMmB,EAAO;;AMuM5B;;EAAE,iBNtMuB,EAAO;;AMuMhC;;EAAE,iBNzMsB,EAAO;;AM0M/B;;EAAE,iBN3MqB,EAAO;;AM4M9B;EAAE,iBNhNiB,EAAO;;AMiN1B;;EAAE,iBNhOmB,EAAO;;AMiO5B;;EAAE,iBNpOoB,EAAO;;AMqO7B;EAAE,iBNjOuB,EAAO;;AMkOhC;EAAE,iBN3OqB,EAAO;;AM4O9B;EAAE,iBNlOoB,EAAO;;AMmO7B;EAAE,iBNtOsB,EAAO;;AMuO/B;EAAE,iBNxOoB,EAAO;;AMyO7B;EAAE,iBNgFiB,EAAO;;AM/E1B;EAAE,iBNrDkB,EAAO;;AMsD3B;EAAE,iBNnXwB,EAAO;;AMoXjC;EAAE,iBNvQU,EAAO;;AMwQnB;EAAE,iBNvQiB,EAAO;;AMwQ1B;EAAE,iBNmFmB,EAAO;;AMlF5B;EAAE,iBNtHqB,EAAO;;AMuH9B;EAAE,iBNtH4B,EAAO;;AMuHrC;EAAE,iBN7QkB,EAAO;;AM8Q3B;EAAE,iBN+HmB,EAAO;;AM9H5B;EAAE,iBN3Cc,EAAO;;AM4CvB;EAAE,iBN7Zc,EAAO;;AM8ZvB;EAAE,iBN5Se,EAAO;;AM6SxB;EAAE,iBNzHa,EAAO;;AM0HtB;EAAE,iBNjNyB,EAAO;;AMkNlC;;EAAE,iBNyCkB,EAAO;;AMxC3B;EAAE,iBNpYc,EAAO;;AMqYvB;EAAE,iBN9iBa,EAAO;;AM+iBtB;EAAE,iBNxiBc,EAAO;;AMyiBvB;EAAE,iBN9cuB,EAAO;;AM+chC;EAAE,iBNjdwB,EAAO;;AMkdjC;EAAE,iBN/cwB,EAAO;;AMgdjC;EAAE,iBNpdwB,EAAO;;AMqdjC;EAAE,iBNhOgB,EAAO;;AMiOzB;EAAE,iBN1Ke,EAAO;;AM2KxB;EAAE,iBN1KiB,EAAO;;AM2K1B;EAAE,iBN7Ka,EAAO;;AM8KtB;EAAE,iBNhLW,EAAO;;AMiLpB;EAAE,iBNvZkB,EAAO;;AMwZ3B;EAAE,iBNvZoB,EAAO;;AMwZ7B;EAAE,iBN9Oa,EAAO;;AM+OtB;EAAE,iBN2Fa,EAAO;;AM1FtB;EAAE,iBNnfiB,EAAO;;AMof1B;EAAE,iBNpTiB,EAAO;;AMqT1B;EAAE,iBNzFoB,EAAO;;AM0F7B;EAAE,iBN3XY,EAAO;;AM4XrB;EAAE,iBNnZuB,EAAO;;AMoZhC;EAAE,iBNvagB,EAAO;;AMwazB;EAAE,iBNlKY,EAAO;;AMmKrB;EAAE,iBNzToB,EAAO;;AM0T7B;EAAE,iBNqEW,EAAO;;AMpEpB;EAAE,iBN7GoB,EAAO;;AM8G7B;EAAE,iBNzKgB,EAAO;;AM0KzB;EAAE,iBNzEc,EAAO;;AM0EvB;EAAE,iBN7IoB,EAAO;;AM8I7B;EAAE,iBN7IsB,EAAO;;AM8I/B;EAAE,iBNTmB,EAAO;;AMU5B;EAAE,iBNTqB,EAAO;;AMU9B;EAAE,iBN5DoB,EAAO;;AM6D7B;EAAE,iBN5DuB,EAAO;;AM6DhC;EAAE,iBNrRe,EAAO;;AMsRxB;EAAE,iBNrgBiB,EAAO;;AMsgB1B;EAAE,iBNrgBmB,EAAO;;AMsgB5B;EAAE,iBN/Ie,EAAO;;AOhdxB,4EAA4E;AAE5E;;;;GAIG;AAEH;EACE,wBAAwB;EAAE,OAAO;EACjC,+BAAuB;MAAvB,2BAAuB;UAAvB,uBAAuB;EAAE,OAAO,EACjC;;AAED;;GAEG;AAEH;EACE,UAAU,EACX;;AAED;gFACgF;AAEhF;;;;;GAKG;AAEH;;;;;;;;;;;;;EAaE,eAAe,EAChB;;AAED;;;GAGG;AAEH;;;;EAIE,sBAAsB;EAAE,OAAO;EAC/B,yBAAyB;EAAE,OAAO,EACnC;;AAED;;;GAGG;AAEH;EACE,cAAc;EACd,UAAU,EACX;;AAED;;;GAGG;AnB2lEH;;EmBvlEE,cAAc,EACf;;AAED;gFACgF;AAEhF;;GAEG;AAEH;EACE,8BAA8B,EAC/B;;AAED;;;GAGG;AAEH;;EAEE,WAAW,EACZ;;AAED;gFACgF;AAEhF;;GAEG;AAEH;EACE,0BAA0B,EAC3B;;AAED;;GAEG;AAEH;;EAEE,kBAAkB,EACnB;;AAED;;GAEG;AAEH;EACE,mBAAmB,EACpB;;AAED;;;GAGG;AAEH;EACE,eAAe;EACf,iBAAiB,EAClB;;AAED;;GAEG;AAEH;EACE,iBAAiB;EACjB,YAAY,EACb;;AAED;;GAEG;AAEH;EACE,eAAe,EAChB;;AAED;;GAEG;AAEH;;EAEE,eAAe;EACf,eAAe;EACf,mBAAmB;EACnB,yBAAyB,EAC1B;;AAED;EACE,YAAY,EACb;;AAED;EACE,gBAAgB,EACjB;;AAED;gFACgF;AAEhF;;GAEG;AAEH;EACE,UAAU,EACX;;AAED;;GAEG;AAEH;EACE,iBAAiB,EAClB;;AAED;gFACgF;AAEhF;;GAEG;AAEH;EACE,iBAAiB,EAClB;;AAED;;GAEG;AAEH;EACE,wBAAwB;EACxB,UAAU,EACX;;AAED;;GAEG;AAEH;EACE,eAAe,EAChB;;AAED;;GAEG;AAEH;;;;EAIE,kCAAkC;EAClC,eAAe,EAChB;;AAED;gFACgF;AAEhF;;;GAGG;AAEH;;;;;GAKG;AAEH;;;;;EAKE,eAAe;EAAE,OAAO;EACxB,cAAc;EAAE,OAAO;EACvB,UAAU;EAAE,OAAO,EACpB;;AAED;;GAEG;AAEH;EACE,kBAAkB,EACnB;;AAED;;;;;GAKG;AAEH;;EAEE,qBAAqB,EACtB;;AAED;;;;;;GAMG;AAEH;;;;EAIE,2BAA2B;EAAE,OAAO;EACpC,gBAAgB;EAAE,OAAO,EAC1B;;AAED;;GAEG;AAEH;;EAEE,gBAAgB,EACjB;;AAED;;GAEG;AAEH;;EAEE,UAAU;EACV,WAAW,EACZ;;AAED;;;GAGG;AAEH;EACE,oBAAoB,EACrB;;AAED;;;;;;GAMG;AAEH;;EAEE,uBAAuB;EAAE,OAAO;EAChC,WAAW;EAAE,OAAO,EACrB;;AAED;;;;GAIG;AAEH;;EAEE,aAAa,EACd;;AAED;;;GAGG;AAEH;EACE,8BAA8B;EAAE,OAAO;EACvC,wBAAwB;EAAE,OAAO,EAClC;;AAED;;;;GAIG;AAEH;;EAEE,yBAAyB,EAC1B;;AAED;;GAEG;AAEH;EACE,0BAA0B;EAC1B,cAAc;EACd,+BAA+B,EAChC;;AAED;;;GAGG;AAEH;EACE,UAAU;EAAE,OAAO;EACnB,WAAW;EAAE,OAAO,EACrB;;AAED;;GAEG;AAEH;EACE,eAAe,EAChB;;AAED;;;GAGG;AAEH;EACE,kBAAkB,EACnB;;AAED;gFACgF;AAEhF;;GAEG;AAEH;EACE,0BAA0B;EAC1B,kBAAkB,EACnB;;AAED;;EAEE,WAAW,EACZ;;ACtaD;EACE,uBAAuB;EACvB,iBnByBiC,EmBxBlC;;AAED;;;EAGE,oBAAoB,EACrB;;AAGC;EACE,oBAAoB,EAAA;;AADtB;EACE,oBAAoB,EAAA;;AADtB;EACE,oBAAoB,EAAA;;AAIxB;EAEE,0BC2DmC;ED1DnC,2BCqDmC,EDpDpC;;AAED;EACE,sBAAsB,EACvB;;AAED;EAA8B,oBAAoB,EAAI;;AAMpD;EADF;IAEI,cAAc,EAEjB,EAAA;;AEpCD;;;;;GAKG;AnByDH;EmBnDE,uFD8DmC,EC5DpC;;AlBuLD;EkBrLE,oFD0DmC,ECxDpC;;AChBD;;;;;;;GAOG;AAKH;EACE,mBAAmB;EACnB,gBAAgB;EAChB,sBAAsB;EACtB,iBAAiB;EACjB,0BAAkB;KAAlB,uBAAkB;MAAlB,sBAAkB;UAAlB,kBAAkB;EAClB,yCAAyC,EAiC1C;EAvCD;IASI,mBAAmB;IACnB,mBAAmB;IACnB,aAAa;IACb,cAAc;IACd,kBAAkB;IAClB,mBAAmB;IACnB,WAAW;IACX,8JAA2B;IAA3B,sJAA2B;IAO3B,sCAA8B;IAA9B,8BAA8B;IAC9B,wDAAwC;IAAxC,gDAAwC;IAAxC,wCAAwC;IAAxC,2DAAwC;IACxC,4CAA6B;YAA7B,oCAA6B;IAC7B,qBAAqB,EACtB;EA3BH;IA8BI,sLAA2B;IAA3B,8KAA2B,EAO5B;;AAIH;;EAEE,iCAAqB;UAArB,yBAAqB;EACrB,gFAA2C,EAC5C;;AAED;EACE,mBAAmB,EACpB;;AC9DD,8BAA8B;AAC9B;EACE,uBAAuB;EACvB,4BAA4B,EAAG;;AAC/B;;EAEE,eAAe,EAAG;;AACpB;EACE,qBAAqB,EAAG;;AACxB;EACE,uBAAuB;EACvB,aAAa,EAAG;;AAChB;EACE,uBAAuB,EAAG;;AAC9B;EACE,uBAAuB;EACvB,aAAa,EAAG;;AAChB;EACE,uBAAuB,EAAG;;AAChC;EACE,cAAc;EACd,mBAAmB;EACnB,oCAAoC;EAIpC,mBAAmB;EACnB,WAAW;EACX,sEAAsE;EAGtE,8DAA8D;EAC9D,YAAY;EACZ,oDAAoD;EACpD,YAAY,EAAG;;AACf;EACE,mBAAmB;EACnB,oCAAoC;EACpC,uBAAuB;EAIvB,mBAAmB;EACnB,iDAAiD;EAGjD,yCAAyC;EACzC,UAAU;EACV,+CAA+C;EAC/C,YAAY,EAAG;;AACnB;EACE,cAAc;EACd,mBAAmB;EACnB,oCAAoC;EAIpC,mBAAmB;EACnB,WAAW;EACX,sEAAsE;EAGtE,8DAA8D;EAC9D,WAAW;EACX,mDAAmD;EACnD,WAAW,EAAG;;AACd;EACE,mBAAmB;EACnB,oCAAoC;EACpC,uBAAuB;EAIvB,mBAAmB;EACnB,iDAAiD;EAGjD,yCAAyC;EACzC,SAAS;EACT,8CAA8C;EAC9C,WAAW,EAAG;;AAClB;EACE,qBAAqB,EAAG;;AACxB;EACE,uBAAuB;EACvB,aAAa,EAAG;;AAChB;EACE,uBAAuB,EAAG;;AAC9B;EACE,uBAAuB;EACvB,aAAa,EAAG;;AAChB;EACE,uBAAuB,EAAG;;AAChC;;EAEE,aAAa,EAAG;;AAClB;EACE,uBAAuB;EACvB,aAAa,EAAG;;AAChB;EACE,uBAAuB,EAAG;;AAC9B;EACE,uBAAuB;EACvB,aAAa,EAAG;;AAChB;EACE,uBAAuB,EAAG;;ACzGhC;;GAEG;AAKH;EACE,qBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd,cAAc;EACd,6BAAuB;EAAvB,8BAAuB;EAAvB,+BAAuB;MAAvB,2BAAuB;UAAvB,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,kBAAkB;EAClB,gBAAgB;EAChB,kCAAkC;EHSlC,0CAAqB;EAArB,kCAAqB;EACrB,0BAAa;EACb,kCAHiD;UAGjD,0BAHiD;EAIjD,+DAAwC;UAAxC,uDAAwC,EGDzC;EJmBG;IIrCJ;MAYI,oBJZ+B,EIkBlC,EAAA;EAHC;IAfF;MAgBI,kBJJ8B,EIMjC,EAAA;;ACzBD;;;GAGG;AAKH;EACE,gBAAgB;EAChB,OAAO;EACP,QAAQ;EACR,YAAY;EACZ,iBAAiB;EACjB,WL2C6B;EK1C7B,mBAAmB;EAEnB,8BAA8B;EJM9B,0DAAqB;EAArB,kDAAqB;EACrB,0CAAa;EACb,kCAHiD;UAGjD,0BAHiD;EAIjD,+DAAwC;UAAxC,uDAAwC,EIIzC;ELcG;IKpCJ;MAcI,cAAc,EAQjB,EAAA;EAtBD;IAkBI,qCAAsB;IACtB,oBAAoB,EACrB;;AAMH;EAGE,iBAAiB,EAKlB;ELEG;IKVJ;MAMI,eAAe,EAElB,EAAA;;ArB1CD;;;;GAIG;AAsBH;;EAhBE,sBAAsB;EACtB,gBgBEgC;EhBDhC,agBEgC;EhBDhC,YgBV+B;EhBW/B,egBX+B;EhBY/B,mBgBV+B;EhBY/B,kBgBHgC;EhBIhC,mBAAmB;EiBKnB,8CAAqB;EAArB,sCAAqB;EACrB,8BAAa;EACb,kCAHiD;UAGjD,0BAHiD;EAIjD,+DAAwC;UAAxC,uDAAwC;EjBNxC,gBAAgB,EACjB;;AAKD;;EAII,2CgBgEiC,EhB/DlC;;AsB/BH;;;;GAIG;AAuBH;;;EAhBE,sBAAsB;EACtB,YNJgC;EMKhC,aNLgC;EMMhC,YAAe;EACf,WAAW;EACX,iBAAiB;EACjB,mBAAmB;EACnB,kBNVgC;EMWhC,mBAAmB;ELInB,8CAAqB;EAArB,sCAAqB;EACrB,8BAAa;EACb,kCAHiD;UAGjD,0BAHiD;EAIjD,+DAAwC;UAAxC,uDAAwC;EKLxC,gBAAgB,EACjB;;AAKD;;EAII,2CN+DiC,EM9DlC;;AA4BH;EAGE,gCAAiB;UAAjB,wBAAiB;ELxCjB,+CAAqB;EAArB,uCAAqB;EAArB,+BAAqB;EAArB,kDAAqB;EACrB,uBAAa;EACb,kCAHiD;UAGjD,0BAHiD;EAIjD,+DAAwC;UAAxC,uDAAwC,EK0CzC;EARD;IAMI,kCAAiB;YAAjB,0BAAiB,EAClB;;ACnEH;;GAEG;AAIH;EACE,mBAAmB;EACnB,eAAY;EACZ,iBAAc;EACd,OAAO;EACP,SAAS;EACT,eAAe;EACf,YPEgC;EODhC,aPCgC;EOAhC,YAAY;EACZ,0BP8DmC;EO7DnC,mBAAmB;EACnB,0BPqEmC;EOpEnC,eP2DmC;EO1DnC,kBAAkB;EAClB,kBAAoB;EACpB,mBAAmB,EACpB;;AzBvBD;;;;;;;GAOG;AAKH;EACE,gBAAgB;EAChB,WkBFiC;ElBGjC,QAAQ;EACR,YAAY;EACZ,akBPgC;ElBQhC,WkBsC6B;ElBrC7B,UAAU;EmBIV,iCAAqB;EAArB,yBAAqB;EACrB,iBAAa;EACb,kCAHiD;UAGjD,0BAHiD;EAIjD,+DAAwC;UAAxC,uDAAwC,EnBiBzC;EA/BD;IAcI,OAAO,EACR;EAGC;IADF;MAEI,WAAY,EAWf;MAbD;QAIM,UkBd0B,ElBe3B,EAAA;EAEH;IAPF;MAQI,WAAY,EAKf;MAbD;QAUM,UkBnB0B,ElBoB3B,EAAA;;AAQP;;EAEE,+BAAoB;EAApB,8BAAoB;EAApB,4BAAoB;MAApB,wBAAoB;UAApB,oBAAoB;EACpB,uBAAe;MAAf,qBAAe;UAAf,eAAe;EACf,0BAAkB;MAAlB,sBAAkB;UAAlB,kBAAkB;EAClB,wBAA4B;EAA5B,oCAA4B;MAA5B,qBAA4B;UAA5B,4BAA4B;EAC5B,mBAAmB;EACnB,OAAO;EACP,QAAQ;EACR,YAAY;EACZ,oBAAoB,EACrB;;AAGD;EACE,qBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd,cAAc;EACd,0BkBuBmC;ElBrBnC,ekBYmC;ECvDnC,0CAAqB;EAArB,kCAAqB;EACrB,0BAAa;EACb,kCAHiD;UAGjD,0BAHiD;EAIjD,+DAAwC;UAAxC,uDAAwC,EnBoDzC;EAhBD;IAQI,oBAAa;IAAb,qBAAa;QAAb,qBAAa;YAAb,aAAa;IACb,aAAa;IACb,akBpE8B;IlBsE9B,mBAAmB;IACnB,qBAAqB;IACrB,qBAAqB,EACtB;;AAIH;EACE,qBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd,cAAc;EACd,mBAAmB;EACnB,WAAW;EACX,0BkBPmC;ElBQnC,2BkBbmC;ElBcnC,iBAAiB;EmBhEjB,iDAAqB;EAArB,yCAAqB;EACrB,iCAAa;EACb,kCAHiD;UAGjD,0BAHiD;EAIjD,+DAAwC;UAAxC,uDAAwC;EnBgExC,6BAAqB;UAArB,qBAAqB,EAkCtB;EA3CD;IAYI,oBAAoB;IACpB,WAAW,EACZ;EAdH;IAiBI,oBAAa;IAAb,qBAAa;QAAb,qBAAa;YAAb,aAAa;IACb,aAAa;IACb,akBhG8B,ElBgH/B;IAnCH;MAsBM,eAAe;MACf,YAAY;MACZ,aAAa;MACb,WAAW;MACX,aAAa;MACb,WAAW;MACX,2BkBpC+B;MlBqC/B,kBAAkB;MAClB,oBAAoB,EAIrB;MAlCL;QAgCQ,2BkBxC6B,ElByC9B;MAjCP;QAgCQ,2BkBxC6B,ElByC9B;MAjCP;QAgCQ,2BkBxC6B,ElByC9B;MAjCP;QAgCQ,2BkBxC6B,ElByC9B;EAjCP;IAsCI,mBAAmB,EAIpB;IA1CH;MAwCM,oBAAoB,EACrB;;AAOL;;EAGE,uBAAe;MAAf,qBAAe;UAAf,eAAe,EAChB;;AAGD;EACE,ekB3DmC,ElB+DpC;EALD;IAGI,ekB7DiC,ElB8DlC;;AAIH;EACE,2BkBxEmC,ElB4EpC;EALD;IAGI,2BkB1EiC,ElB2ElC;;AAMH;EACE,qBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd,cAAc;EACd,mBAAmB;EACnB,SAAY;EACZ,WAAc;EACd,aAAa;EACb,WkBxG6B;ElByG7B,mBAAmB;EACnB,WAAW;EACX,oBkBrFmC;ECvDnC,+DAAqB;EAArB,uDAAqB;EACrB,+CAAa;EACb,kCAHiD;UAGjD,0BAHiD;EAIjD,+DAAwC;UAAxC,uDAAwC,EnBoJzC;EApBD;IAeI,oBAAoB;IACpB,WAAW,EACZ;EAjBH;ImBxHI,YAAY;IACZ,UAAU;IACV,eAJqC;IAKrC,iBAAiB,EA+ClB;InBsEH;MmBhHM,iCDmD+B,EClDhC;InB+GL;MmB5GM,eAAe;MACf,UAAU;MACV,WAAW,EACZ;InByGL;MmBvGM,qBAAc;MAAd,sBAAc;MAAd,qBAAc;MAAd,cAAc;MACd,YAAY;MACZ,gBAAgB;MAChB,eD0C+B;MCzC/B,oBAAoB,EA4BrB;MnBuEL;QmBjGQ,eDuC6B,ECtC9B;MnBgGP;QmB9FQ,2BDa6B,ECZ9B;MnB6FP;QmB1FQ,oBAAoB,EACrB;MnByFP;QmBrFU,oBAAa;QAAb,qBAAa;YAAb,qBAAa;gBAAb,aAAa,EACd;MnBoFT;QmBlFU,mBAAmB,EACpB;;AD7BL;ElBwIF;;IAEE,oBkB/K+B,ElBoLhC;IAPD;;MAKI,cAAc,EACf,EAAA;;A0B1LL;;GAEG;AAKH;EACE,qBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd,cAAc;EACd,6BAAuB;EAAvB,8BAAuB;EAAvB,+BAAuB;MAAvB,2BAAuB;UAAvB,uBAAuB;EACvB,0BAAkB;MAAlB,sBAAkB;UAAlB,kBAAkB;EAClB,gBAAgB;EAChB,OAAO;EACP,QAAQ;EACR,YR4C8B;EQ3C9B,kBAAkB;EAClB,iBAAiB;EAEjB,aRXiC;EQYjC,aAAa;EACb,kBAAkB;EAClB,WAAW;EAEX,gCRsDmC;EQrDnC,oBRsDmC;EQlDnC,qCAA6B;UAA7B,6BAA6B;EPL7B,+CAAqB;EAArB,uCAAqB;EAArB,+BAAqB;EAArB,kDAAqB;EACrB,uBAAa;EACb,kCAHiD;UAGjD,0BAHiD;EAIjD,+DAAwC;UAAxC,uDAAwC,EOwBzC;EApBC;IAvBF;MAwBI,sCAAqB;cAArB,8BAAqB,EAmBxB,EAAA;EA3CD;IA8BI,iCAAqB;YAArB,yBAAqB,EACtB;EA/BH;IP2BI,YAAY;IACZ,UAAU;IACV,eAJqC;IAKrC,iBAAiB,EA+ClB;IO7EH;MPmCM,iCDmD+B,EClDhC;IOpCL;MPuCM,eAAe;MACf,UAAU;MACV,WAAW,EACZ;IO1CL;MP4CM,qBAAc;MAAd,sBAAc;MAAd,qBAAc;MAAd,cAAc;MACd,YAAY;MACZ,gBAAgB;MAChB,eD0C+B;MCzC/B,oBAAoB,EA4BrB;MO5EL;QPkDQ,eDuC6B,ECtC9B;MOnDP;QPqDQ,2BDa6B,ECZ9B;MOtDP;QPyDQ,oBAAoB,EACrB;MO1DP;QPsEU,YAAY,EACb;MOvET;QPyEU,oBAAa;QAAb,qBAAa;YAAb,qBAAa;gBAAb,aAAa,EACd;EOtCL;IADF;MAEI,kBRzB4B,EQ8B/B,EAAA;EAHC;IAJF;MAKI,kBR3B4B,EQ6B/B,EAAA;;AzBjDH;;;;;;;;;;;;;;;;;GAiBG;AAKH;EACE;;;4BAG0B;EAC1B,mBAAmB;EACnB,wBAAW;EACX,4BAAe;EACf,kBiB3B+B;EjB4B/B,kBAAoB,EASrB;EiBIG;IjBtBJ;MAcI,yBAAW;MACX,6BAAe;MACf,mBiBlC8B,EjBoCjC,EAAA;;AA4JD;EAtJE,YAAY;EACZ,qBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd,cAAc;EACd,kCAA0B;MAA1B,0BAA0B;UAA1B,0BAA0B;EAC1B,WAAW;EACX,mBiB7C+B;EjB8C/B,oBiB2BmC;ECvDnC,iDAAqB;EAArB,yCAAqB;EACrB,iCAAa;EACb,kCAHiD;UAGjD,0BAHiD;EAIjD,+DAAwC;UAAxC,uDAAwC,ElB+HzC;EA9FE;IACC,WAAW,EACZ;EiBtBC;IjB6JJ;MApII,wBAAW;MACX,cAAc,EAwFjB,EAAA;EiB7GG;IjBwJJ;MAhII,wBAAW;MACX,cAAyB,EAoF5B,EAAA;EiB7GG;IjBwJJ;MA5HI,4BAAW,EAiFd,EAAA;EA2CD;IAxHI,8CAAyC;IACzC,uBAAuB,EACxB;EAsHH;IAnHI,UAAU,EAkBX;IAiGH;MAhHM,UAAU;MACV,iBiBlF2B;MpB+D/B,qCA7CmD;MA8CnD,kBAhC+B;MAiC/B,iBGkBmD;MHhBjD,oBAfgC,EGsC/B;MAuGL;QA3GQ,eAAe;QACf,kBHrDyB;QGsDzB,mBAAmB,EACpB;IAwGP;MArGM,UAAU;MACV,oBAAyB;MH9B7B,qCA7CmD;MA8CnD,kBA5B+B;MA6B/B,iBG6BsD;MH3BpD,kBAdgC,EG0C/B;EAkGL;IA7FI,oBAAuB;IACvB;;;OAGG,EACJ;EAwFH;IArFI,qBAAc;IAAd,sBAAc;IAAd,qBAAc;IAAd,cAAc;IACd,+BAAoB;IAApB,8BAAoB;IAApB,4BAAoB;QAApB,wBAAoB;YAApB,oBAAoB;IACpB,wBAA4B;IAA5B,oCAA4B;QAA5B,qBAA4B;YAA5B,4BAA4B;IAC5B,WAAW,EAkBZ;IAgEH;MAhFM,oBAAa;MAAb,qBAAa;UAAb,qBAAa;cAAb,aAAa;MACb,iBAAiB,EAClB;IA8EL;MA5EM,kBAAkB,EACnB;IA2EL;;;;;;;MAvEQ,kBAAqB;MACrB,kBHzFyB,EG0F1B;IAqEP;MAlEM,gBH9F2B,EG+F5B;EAiEL;IA7DI,mBAAmB;IACnB,UAAU;IACV,YAAY;IACZ,gBAAgB;IAChB,iBAAiB;IAEjB,oBiB/DiC;ICvDnC,wCAAqB;IAArB,gCAAqB;IACrB,wBAAa;IACb,kCAHiD;YAGjD,0BAHiD;IAIjD,+DAAwC;YAAxC,uDAAwC,ElB6HvC;IA6CH;MAnDM,kBAAkB,EACnB;IAkDL;MkBlKI,YAAY;MACZ,UAAU;MACV,eAJqC;MAKrC,iBAAiB,EA+ClB;MlBgHH;QkB1JM,iCDmD+B,EClDhC;MlByJL;QkBtJM,eAAe;QACf,UAAU;QACV,WAAW,EACZ;MlBmJL;QkBjJM,qBAAc;QAAd,sBAAc;QAAd,qBAAc;QAAd,cAAc;QACd,YAAY;QACZ,gBAAgB;QAChB,eD0C+B;QCzC/B,oBAAoB,EA4BrB;QlBiHL;UkB3IQ,eDuC6B,ECtC9B;QlB0IP;UkBxIQ,2BDa6B,ECZ9B;QlBuIP;UkBpIQ,oBAAoB,EACrB;QlBmIP;UkBvHU,YAAY,EACb;QlBsHT;UkBpHU,oBAAa;UAAb,qBAAa;cAAb,qBAAa;kBAAb,aAAa,EACd;;AlBmHT;EArCI,ciB3J8B,EjB4J/B;;AAoCH;EAjCI,qBiB/J8B,EjBsK/B;EA0BH;IA/BM,2BiB5F+B,EjB6FhC;EA8BL;IA5BM,2BiB/F+B,EjBgGhC;;AA2BL;EAvBI,8BiBhFiC,EjBiGlC;EAMH;IApBM,eiBzF+B,EjBgGhC;IAaL;MAlBQ,eiB3F6B,EjB4F9B;IAiBP;MAfQ,eiB7F6B,EjB8F9B;EAcP;IAXM,YiB3K4B;IjB4K5B,aiB5K4B;IjB6K5B,YiBxL2B;IjByL3B,kBiB9K4B,EjB+K7B;;AAOL;EAEE,6BAAuB;EAAvB,8BAAuB;EAAvB,+BAAuB;MAAvB,2BAAuB;UAAvB,uBAAuB,EAOxB;EATD;IAKI,YAAY;IACZ,uBAAuB;IACvB,oDAAqB,EACtB;;AAMH;EAEE,+BAAoB;EAApB,8BAAoB;EAApB,4BAAoB;MAApB,wBAAoB;UAApB,oBAAoB;EACpB,wBAAgB;MAAhB,oBAAgB;UAAhB,gBAAgB;EAChB,yBAAwB;EAAxB,gCAAwB;MAAxB,sBAAwB;cAAxB,+BAAwB;UAAxB,wBAAwB;EAyBxB;;;;;KAKG,EAMJ;EAxCD;IAOI,6BAAS;IAAT,iBAAS;QAAT,kBAAS;YAAT,SAAS;IACT,oBAAa;IAAb,qBAAa;QAAb,qBAAa;YAAb,aAAa;IACb,uBAAe;QAAf,qBAAe;YAAf,eAAe;IACf,+BAAW;IACX,iBiBzN8B;IjB0N9B,mBiB1N8B;IjB2N9B,oBiB3N8B;IjB4N9B,wCAAoB;IACpB,oDAAqB,EACtB;EAhBH;IAmBI,6BAAS;IAAT,iBAAS;QAAT,kBAAS;YAAT,SAAS;IACT,oBAAa;IAAb,qBAAa;QAAb,qBAAa;YAAb,aAAa;IACb,uBAAe;QAAf,qBAAe;YAAf,eAAe;IACf,yCAAe,EAChB;EAvBH;IA0BI,gBAAgB,EACjB;EA3BH;IAqCI,YAAY;IACZ,6BAAS;IAAT,iBAAS;QAAT,kBAAS;YAAT,SAAS,EACV;;AAKH;EAEE,mBAAmB,EA+DpB;EiBxRG;IjBuNJ;MAKI,kCAAoB,EA4DvB,EAAA;EiBnRG;IjBkNJ;MAQI,iCAAoB,EAyDvB,EAAA;EiBnRG;IjBkNJ;MAWI,qCAAoB,EAsDvB,EAAA;EAjED;IAeI,mBAAmB;IACnB,OAAO;IACP,SAAS;IACT,UAAU;IACV,QAAQ;IACR,oDAAqB,EACtB;EArBH;IAwBI,mBAAmB;IACnB,SAAS;IACT,UAAU;IACV,QAAQ;IACR,kBiBtR8B;IjBuR9B,qCiBlNiC,EjBmNlC;EA9BH;IAiCI,oBiB3R8B;IjB4R9B,mBiB5R8B;IjB6R9B,oBiB9R6B,EjBwS9B;IA7CH;MAqCM,eiBrN+B,EjByNhC;MAzCL;QAuCQ,gCiBvN6B,EjBwN9B;IAxCP;MA2CM,gCiB3N+B,EjB4NhC;EA5CL;;IAkDM,eiBlO+B,EjByOhC;IAzDL;;MAoDQ,eiBpO6B,EjBqO9B;IArDP;;;MAuDQ,eiBvO6B,EjBwO9B;EAxDP;IA2DM,YiB3S4B;IjB4S5B,aiB5S4B;IjB6S5B,YiBxT2B;IjByT3B,kBiB9S4B,EjB+S7B;;AF7TL;;GAEG;AAKH;EACE,YAAY,EA6Bb;EA9BD;IAMI,qBAAc;IAAd,sBAAc;IAAd,qBAAc;IAAd,cAAc;IACd,6BAAuB;IAAvB,8BAAuB;IAAvB,+BAAuB;QAAvB,2BAAuB;YAAvB,uBAAuB;IACvB,wBAAgB;QAAhB,oBAAgB;YAAhB,gBAAgB;IAChB,yBAAwB;IAAxB,gCAAwB;QAAxB,sBAAwB;YAAxB,wBAAwB;IACxB,0BAAoB;IAApB,4BAAoB;QAApB,uBAAoB;YAApB,oBAAoB;IACpB,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,kBmBlB6B;InBoB7B,mBAAmB;IACnB,iFAA4E;IAE5E,uBAAuB,EAUxB;IA7BH;MAsBM,UAAU,EAEX;IAxBL;MA0BM,UAAU,EAEX;;AAOL;EACE,yBAAW;EACX,iBAAkB;EAClB,cAAc;EACd,4BAAgE;EAChE,aAAa;EACb,mBmB3C+B;EnB4C/B,oBmB6BmC,EnB3BpC;;AAKD;EACE,qBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd,cAAc;EACd,+BAAoB;EAApB,8BAAoB;EAApB,4BAAoB;MAApB,wBAAoB;UAApB,oBAAoB;EACpB,0BAA+B;EAA/B,uCAA+B;MAA/B,uBAA+B;UAA/B,+BAA+B;EAC/B,yBAAwB;EAAxB,gCAAwB;MAAxB,sBAAwB;UAAxB,wBAAwB;EACxB,iCmBgCmC,EnBYpC;EAjDD;IAQI,oBAAa;IAAb,qBAAa;QAAb,qBAAa;YAAb,aAAa;IACb,qBAAc;IAAd,sBAAc;IAAd,qBAAc;IAAd,cAAc;IACd,+BAAoB;IAApB,8BAAoB;IAApB,4BAAoB;QAApB,wBAAoB;YAApB,oBAAoB;IACpB,wBAA4B;IAA5B,oCAA4B;QAA5B,qBAA4B;YAA5B,4BAA4B;IAC5B,0BAAoB;IAApB,4BAAoB;QAApB,uBAAoB;YAApB,oBAAoB;IACpB,cmBjE8B,EnB8F/B;IA1CH;MAeM,eAAe;MACf,oBAAa;MAAb,qBAAa;UAAb,qBAAa;cAAb,aAAa,EAMd;MAtBL;QAkBQ,YAAY;QACZ,aAAa;QACb,mBAAmB,EACpB;IArBP;MAwBM,oBAAa;MAAb,qBAAa;UAAb,qBAAa;cAAb,aAAa;MACb,mBmB7E4B,EnB6F7B;MAzCL;QA2BQ,eAAe;QAEf,emBE6B;QnBD7B,kBD9B4B,ECkC7B;QAlCP;UAgCU,emBA2B,EnBC5B;MAjCT;QAoCQ,eAAe;QAEf,2BmBrB6B;QnBsB7B,iBAAiB,EAClB;EAxCP;IA6CI,oBAAa;IAAb,qBAAa;QAAb,qBAAa;YAAb,aAAa;IACb,amBnG6B;InBoG7B,kBAAkB,EACnB;;AAMH;EACE,eAA4B,EAmB7B;EApBD;;IAII,emB3BiC,EnBkClC;IAXH;;MAMM,emB7B+B,EnB8BhC;IAPL;;;MASM,emB/B+B,EnBgChC;EAVL;;;IAaI,kBDtF6B,ECuF9B;EAdH;IAgBI,cAAc;IACd,iBAAiB;IACjB,gBD5F6B,EC6F9B;;AGjIH;;;;GAIG;AAsBH;;EAhBE,sBAAsB;EACtB,gBgBEgC;EhBDhC,agBEgC;EhBDhC,YgBV+B;EhBW/B,egBX+B;EhBY/B,mBgBV+B;EhBY/B,kBgBHgC;EhBIhC,mBAAmB;EiBKnB,8CAAqB;EAArB,sCAAqB;EACrB,8BAAa;EACb,kCAHiD;UAGjD,0BAHiD;EAIjD,+DAAwC;UAAxC,uDAAwC;EjBNxC,gBAAgB,EACjB;;AAKD;;EAII,2CgBgEiC,EhB/DlC\",\"file\":\"gg11.scss\",\"sourcesContent\":[\"@charset \\\"UTF-8\\\";\\n/**\\r\\n * @function gg-font-size\\r\\n * @function gg-line-height\\r\\n * @mixin gg-font\\r\\n * %gg-font-display-4\\r\\n * %gg-font-display-3\\r\\n * %gg-font-display-2\\r\\n * %gg-font-display-1\\r\\n * %gg-font-headline\\r\\n * %gg-font-title\\r\\n * %gg-font-subheading-device\\r\\n * %gg-font-subheading-desktop\\r\\n * %gg-font-body-2-device\\r\\n * %gg-font-body-1-device\\r\\n * %gg-font-caption\\r\\n * %gg-font-button\\r\\n */\\n.gg-article > header h1 {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 4.5rem;\\n  font-weight: 400;\\n  line-height: 4.8rem; }\\n\\n.gg-header, .gg-article > header h2 {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 2rem;\\n  font-weight: 600; }\\n\\n.gg-appbar-menu ul, .gg-drawer ul, .gg-card-big .gg-card-addon .gg-card-addon-list ul, .gg-card-small .gg-card-addon .gg-card-addon-list ul, .gg-card-image .gg-card-addon .gg-card-addon-list ul, .gg-article-info > :first-child .gg-article-meta a {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 1.4rem;\\n  font-weight: 600;\\n  line-height: 2.4rem; }\\n\\n.gg-card-big .gg-card-text, .gg-card-small .gg-card-text, .gg-card-image .gg-card-text {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 1.4rem;\\n  font-weight: 400;\\n  line-height: 2rem; }\\n\\n.gg-article-info > :first-child .gg-article-meta span {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 1.2rem;\\n  font-weight: 400; }\\n\\n.gg-button-flat,\\n.gg-button-flat-light {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 1.4rem;\\n  font-weight: 600;\\n  text-transform: uppercase; }\\n\\n/*!\\r\\n *  Font Awesome 4.5.0 by @davegandy - http://fontawesome.io - @fontawesome\\r\\n *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\\r\\n */\\n/* FONT PATH\\r\\n * -------------------------- */\\n@font-face {\\n  font-family: 'FontAwesome';\\n  src: url(\\\"../fonts/fontawesome-webfont.eot?v=4.5.0\\\");\\n  src: url(\\\"../fonts/fontawesome-webfont.eot?#iefix&v=4.5.0\\\") format(\\\"embedded-opentype\\\"), url(\\\"../fonts/fontawesome-webfont.woff2?v=4.5.0\\\") format(\\\"woff2\\\"), url(\\\"../fonts/fontawesome-webfont.woff?v=4.5.0\\\") format(\\\"woff\\\"), url(\\\"../fonts/fontawesome-webfont.ttf?v=4.5.0\\\") format(\\\"truetype\\\"), url(\\\"../fonts/fontawesome-webfont.svg?v=4.5.0#fontawesomeregular\\\") format(\\\"svg\\\");\\n  font-weight: normal;\\n  font-style: normal; }\\n\\n.fa, .gg-icon-flat,\\n.gg-icon-flat-light, .gg-appbar-icon,\\n.gg-searchbar-icon, .gg-icon-chevron, .gg-icon-comments, .gg-icon-facebook, .gg-icon-twitter {\\n  display: inline-block;\\n  font: normal normal normal 14px / 1 FontAwesome;\\n  font-size: inherit;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale; }\\n\\n/* makes the font 33% larger relative to the icon container */\\n.fa-lg, .gg-icon-facebook, .gg-icon-twitter {\\n  font-size: 1.33333em;\\n  line-height: 0.75em;\\n  vertical-align: -15%; }\\n\\n.fa-2x {\\n  font-size: 2em; }\\n\\n.fa-3x {\\n  font-size: 3em; }\\n\\n.fa-4x {\\n  font-size: 4em; }\\n\\n.fa-5x {\\n  font-size: 5em; }\\n\\n.fa-fw {\\n  width: 1.28571em;\\n  text-align: center; }\\n\\n.fa-ul {\\n  padding-left: 0;\\n  margin-left: 2.14286em;\\n  list-style-type: none; }\\n  .fa-ul > li {\\n    position: relative; }\\n\\n.fa-li {\\n  position: absolute;\\n  left: -2.14286em;\\n  width: 2.14286em;\\n  top: 0.14286em;\\n  text-align: center; }\\n  .fa-li.fa-lg, .fa-li.gg-icon-facebook, .fa-li.gg-icon-twitter {\\n    left: -1.85714em; }\\n\\n.fa-border {\\n  padding: .2em .25em .15em;\\n  border: solid 0.08em #eee;\\n  border-radius: .1em; }\\n\\n.fa-pull-left {\\n  float: left; }\\n\\n.fa-pull-right {\\n  float: right; }\\n\\n.fa.fa-pull-left, .fa-pull-left.gg-icon-flat,\\n.fa-pull-left.gg-icon-flat-light, .fa-pull-left.gg-appbar-icon,\\n.fa-pull-left.gg-searchbar-icon, .fa-pull-left.gg-icon-chevron, .fa-pull-left.gg-icon-comments, .fa-pull-left.gg-icon-facebook, .fa-pull-left.gg-icon-twitter {\\n  margin-right: .3em; }\\n\\n.fa.fa-pull-right, .fa-pull-right.gg-icon-flat,\\n.fa-pull-right.gg-icon-flat-light, .fa-pull-right.gg-appbar-icon,\\n.fa-pull-right.gg-searchbar-icon, .fa-pull-right.gg-icon-chevron, .fa-pull-right.gg-icon-comments, .fa-pull-right.gg-icon-facebook, .fa-pull-right.gg-icon-twitter {\\n  margin-left: .3em; }\\n\\n/* Deprecated as of 4.4.0 */\\n.pull-right {\\n  float: right; }\\n\\n.pull-left {\\n  float: left; }\\n\\n.fa.pull-left, .pull-left.gg-icon-flat,\\n.pull-left.gg-icon-flat-light, .pull-left.gg-appbar-icon,\\n.pull-left.gg-searchbar-icon, .pull-left.gg-icon-chevron, .pull-left.gg-icon-comments, .pull-left.gg-icon-facebook, .pull-left.gg-icon-twitter {\\n  margin-right: .3em; }\\n\\n.fa.pull-right, .pull-right.gg-icon-flat,\\n.pull-right.gg-icon-flat-light, .pull-right.gg-appbar-icon,\\n.pull-right.gg-searchbar-icon, .pull-right.gg-icon-chevron, .pull-right.gg-icon-comments, .pull-right.gg-icon-facebook, .pull-right.gg-icon-twitter {\\n  margin-left: .3em; }\\n\\n.fa-spin {\\n  -webkit-animation: fa-spin 2s infinite linear;\\n  animation: fa-spin 2s infinite linear; }\\n\\n.fa-pulse {\\n  -webkit-animation: fa-spin 1s infinite steps(8);\\n  animation: fa-spin 1s infinite steps(8); }\\n\\n@-webkit-keyframes fa-spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(359deg);\\n    transform: rotate(359deg); } }\\n\\n@keyframes fa-spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(359deg);\\n    transform: rotate(359deg); } }\\n\\n.fa-rotate-90 {\\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1);\\n  -webkit-transform: rotate(90deg);\\n  -ms-transform: rotate(90deg);\\n  transform: rotate(90deg); }\\n\\n.fa-rotate-180 {\\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);\\n  -webkit-transform: rotate(180deg);\\n  -ms-transform: rotate(180deg);\\n  transform: rotate(180deg); }\\n\\n.fa-rotate-270 {\\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\\n  -webkit-transform: rotate(270deg);\\n  -ms-transform: rotate(270deg);\\n  transform: rotate(270deg); }\\n\\n.fa-flip-horizontal {\\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=0);\\n  -webkit-transform: scale(-1, 1);\\n  -ms-transform: scale(-1, 1);\\n  transform: scale(-1, 1); }\\n\\n.fa-flip-vertical {\\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);\\n  -webkit-transform: scale(1, -1);\\n  -ms-transform: scale(1, -1);\\n  transform: scale(1, -1); }\\n\\n:root .fa-rotate-90,\\n:root .fa-rotate-180,\\n:root .fa-rotate-270,\\n:root .fa-flip-horizontal,\\n:root .fa-flip-vertical {\\n  filter: none; }\\n\\n.fa-stack {\\n  position: relative;\\n  display: inline-block;\\n  width: 2em;\\n  height: 2em;\\n  line-height: 2em;\\n  vertical-align: middle; }\\n\\n.fa-stack-1x, .fa-stack-2x {\\n  position: absolute;\\n  left: 0;\\n  width: 100%;\\n  text-align: center; }\\n\\n.fa-stack-1x {\\n  line-height: inherit; }\\n\\n.fa-stack-2x {\\n  font-size: 2em; }\\n\\n.fa-inverse {\\n  color: #fff; }\\n\\n/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen\\r\\n   readers do not read off random characters that represent icons */\\n.fa-glass:before {\\n  content: \\\"\\\"; }\\n\\n.fa-music:before {\\n  content: \\\"\\\"; }\\n\\n.fa-search:before, .gg-appbar .gg-searchbar-toggle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-envelope-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-heart:before {\\n  content: \\\"\\\"; }\\n\\n.fa-star:before {\\n  content: \\\"\\\"; }\\n\\n.fa-star-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-user:before {\\n  content: \\\"\\\"; }\\n\\n.fa-film:before {\\n  content: \\\"\\\"; }\\n\\n.fa-th-large:before {\\n  content: \\\"\\\"; }\\n\\n.fa-th:before {\\n  content: \\\"\\\"; }\\n\\n.fa-th-list:before {\\n  content: \\\"\\\"; }\\n\\n.fa-check:before {\\n  content: \\\"\\\"; }\\n\\n.fa-remove:before,\\n.fa-close:before,\\n.fa-times:before,\\n.gg-searchbar-cancel:before {\\n  content: \\\"\\\"; }\\n\\n.fa-search-plus:before {\\n  content: \\\"\\\"; }\\n\\n.fa-search-minus:before {\\n  content: \\\"\\\"; }\\n\\n.fa-power-off:before {\\n  content: \\\"\\\"; }\\n\\n.fa-signal:before {\\n  content: \\\"\\\"; }\\n\\n.fa-gear:before,\\n.fa-cog:before {\\n  content: \\\"\\\"; }\\n\\n.fa-trash-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-home:before {\\n  content: \\\"\\\"; }\\n\\n.fa-file-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-clock-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-road:before {\\n  content: \\\"\\\"; }\\n\\n.fa-download:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrow-circle-o-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrow-circle-o-up:before {\\n  content: \\\"\\\"; }\\n\\n.fa-inbox:before {\\n  content: \\\"\\\"; }\\n\\n.fa-play-circle-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-rotate-right:before,\\n.fa-repeat:before {\\n  content: \\\"\\\"; }\\n\\n.fa-refresh:before {\\n  content: \\\"\\\"; }\\n\\n.fa-list-alt:before {\\n  content: \\\"\\\"; }\\n\\n.fa-lock:before {\\n  content: \\\"\\\"; }\\n\\n.fa-flag:before {\\n  content: \\\"\\\"; }\\n\\n.fa-headphones:before {\\n  content: \\\"\\\"; }\\n\\n.fa-volume-off:before {\\n  content: \\\"\\\"; }\\n\\n.fa-volume-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-volume-up:before {\\n  content: \\\"\\\"; }\\n\\n.fa-qrcode:before {\\n  content: \\\"\\\"; }\\n\\n.fa-barcode:before {\\n  content: \\\"\\\"; }\\n\\n.fa-tag:before {\\n  content: \\\"\\\"; }\\n\\n.fa-tags:before, .gg-icon-tags:before {\\n  content: \\\"\\\"; }\\n\\n.fa-book:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bookmark:before {\\n  content: \\\"\\\"; }\\n\\n.fa-print:before {\\n  content: \\\"\\\"; }\\n\\n.fa-camera:before {\\n  content: \\\"\\\"; }\\n\\n.fa-font:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bold:before {\\n  content: \\\"\\\"; }\\n\\n.fa-italic:before {\\n  content: \\\"\\\"; }\\n\\n.fa-text-height:before {\\n  content: \\\"\\\"; }\\n\\n.fa-text-width:before {\\n  content: \\\"\\\"; }\\n\\n.fa-align-left:before {\\n  content: \\\"\\\"; }\\n\\n.fa-align-center:before {\\n  content: \\\"\\\"; }\\n\\n.fa-align-right:before {\\n  content: \\\"\\\"; }\\n\\n.fa-align-justify:before {\\n  content: \\\"\\\"; }\\n\\n.fa-list:before {\\n  content: \\\"\\\"; }\\n\\n.fa-dedent:before,\\n.fa-outdent:before {\\n  content: \\\"\\\"; }\\n\\n.fa-indent:before {\\n  content: \\\"\\\"; }\\n\\n.fa-video-camera:before {\\n  content: \\\"\\\"; }\\n\\n.fa-photo:before,\\n.fa-image:before,\\n.fa-picture-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-pencil:before {\\n  content: \\\"\\\"; }\\n\\n.fa-map-marker:before {\\n  content: \\\"\\\"; }\\n\\n.fa-adjust:before {\\n  content: \\\"\\\"; }\\n\\n.fa-tint:before {\\n  content: \\\"\\\"; }\\n\\n.fa-edit:before,\\n.fa-pencil-square-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-share-square-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-check-square-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrows:before {\\n  content: \\\"\\\"; }\\n\\n.fa-step-backward:before {\\n  content: \\\"\\\"; }\\n\\n.fa-fast-backward:before {\\n  content: \\\"\\\"; }\\n\\n.fa-backward:before {\\n  content: \\\"\\\"; }\\n\\n.fa-play:before {\\n  content: \\\"\\\"; }\\n\\n.fa-pause:before {\\n  content: \\\"\\\"; }\\n\\n.fa-stop:before {\\n  content: \\\"\\\"; }\\n\\n.fa-forward:before {\\n  content: \\\"\\\"; }\\n\\n.fa-fast-forward:before {\\n  content: \\\"\\\"; }\\n\\n.fa-step-forward:before {\\n  content: \\\"\\\"; }\\n\\n.fa-eject:before {\\n  content: \\\"\\\"; }\\n\\n.fa-chevron-left:before {\\n  content: \\\"\\\"; }\\n\\n.fa-chevron-right:before {\\n  content: \\\"\\\"; }\\n\\n.fa-plus-circle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-minus-circle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-times-circle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-check-circle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-question-circle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-info-circle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-crosshairs:before {\\n  content: \\\"\\\"; }\\n\\n.fa-times-circle-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-check-circle-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-ban:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrow-left:before, .gg-searchbar .gg-searchbar-toggle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrow-right:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrow-up:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrow-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-mail-forward:before,\\n.fa-share:before,\\n.gg-appbar-menu-toggle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-expand:before {\\n  content: \\\"\\\"; }\\n\\n.fa-compress:before {\\n  content: \\\"\\\"; }\\n\\n.fa-plus:before {\\n  content: \\\"\\\"; }\\n\\n.fa-minus:before {\\n  content: \\\"\\\"; }\\n\\n.fa-asterisk:before {\\n  content: \\\"\\\"; }\\n\\n.fa-exclamation-circle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-gift:before {\\n  content: \\\"\\\"; }\\n\\n.fa-leaf:before {\\n  content: \\\"\\\"; }\\n\\n.fa-fire:before {\\n  content: \\\"\\\"; }\\n\\n.fa-eye:before {\\n  content: \\\"\\\"; }\\n\\n.fa-eye-slash:before {\\n  content: \\\"\\\"; }\\n\\n.fa-warning:before,\\n.fa-exclamation-triangle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-plane:before {\\n  content: \\\"\\\"; }\\n\\n.fa-calendar:before {\\n  content: \\\"\\\"; }\\n\\n.fa-random:before {\\n  content: \\\"\\\"; }\\n\\n.fa-comment:before {\\n  content: \\\"\\\"; }\\n\\n.fa-magnet:before {\\n  content: \\\"\\\"; }\\n\\n.fa-chevron-up:before, .gg-icon-chevron:before {\\n  content: \\\"\\\"; }\\n\\n.fa-chevron-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-retweet:before {\\n  content: \\\"\\\"; }\\n\\n.fa-shopping-cart:before {\\n  content: \\\"\\\"; }\\n\\n.fa-folder:before {\\n  content: \\\"\\\"; }\\n\\n.fa-folder-open:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrows-v:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrows-h:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bar-chart-o:before,\\n.fa-bar-chart:before {\\n  content: \\\"\\\"; }\\n\\n.fa-twitter-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-facebook-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-camera-retro:before {\\n  content: \\\"\\\"; }\\n\\n.fa-key:before {\\n  content: \\\"\\\"; }\\n\\n.fa-gears:before,\\n.fa-cogs:before {\\n  content: \\\"\\\"; }\\n\\n.fa-comments:before {\\n  content: \\\"\\\"; }\\n\\n.fa-thumbs-o-up:before {\\n  content: \\\"\\\"; }\\n\\n.fa-thumbs-o-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-star-half:before {\\n  content: \\\"\\\"; }\\n\\n.fa-heart-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sign-out:before {\\n  content: \\\"\\\"; }\\n\\n.fa-linkedin-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-thumb-tack:before {\\n  content: \\\"\\\"; }\\n\\n.fa-external-link:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sign-in:before {\\n  content: \\\"\\\"; }\\n\\n.fa-trophy:before {\\n  content: \\\"\\\"; }\\n\\n.fa-github-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-upload:before {\\n  content: \\\"\\\"; }\\n\\n.fa-lemon-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-phone:before {\\n  content: \\\"\\\"; }\\n\\n.fa-square-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bookmark-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-phone-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-twitter:before, .gg-icon-twitter:before {\\n  content: \\\"\\\"; }\\n\\n.fa-facebook-f:before,\\n.fa-facebook:before {\\n  content: \\\"\\\"; }\\n\\n.fa-github:before {\\n  content: \\\"\\\"; }\\n\\n.fa-unlock:before {\\n  content: \\\"\\\"; }\\n\\n.fa-credit-card:before {\\n  content: \\\"\\\"; }\\n\\n.fa-feed:before,\\n.fa-rss:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hdd-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bullhorn:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bell:before {\\n  content: \\\"\\\"; }\\n\\n.fa-certificate:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hand-o-right:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hand-o-left:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hand-o-up:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hand-o-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrow-circle-left:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrow-circle-right:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrow-circle-up:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrow-circle-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-globe:before {\\n  content: \\\"\\\"; }\\n\\n.fa-wrench:before {\\n  content: \\\"\\\"; }\\n\\n.fa-tasks:before {\\n  content: \\\"\\\"; }\\n\\n.fa-filter:before {\\n  content: \\\"\\\"; }\\n\\n.fa-briefcase:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrows-alt:before {\\n  content: \\\"\\\"; }\\n\\n.fa-group:before,\\n.fa-users:before {\\n  content: \\\"\\\"; }\\n\\n.fa-chain:before,\\n.fa-link:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cloud:before {\\n  content: \\\"\\\"; }\\n\\n.fa-flask:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cut:before,\\n.fa-scissors:before {\\n  content: \\\"\\\"; }\\n\\n.fa-copy:before,\\n.fa-files-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-paperclip:before {\\n  content: \\\"\\\"; }\\n\\n.fa-save:before,\\n.fa-floppy-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-navicon:before,\\n.fa-reorder:before,\\n.fa-bars:before,\\n.gg-drawer-toggle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-list-ul:before {\\n  content: \\\"\\\"; }\\n\\n.fa-list-ol:before {\\n  content: \\\"\\\"; }\\n\\n.fa-strikethrough:before {\\n  content: \\\"\\\"; }\\n\\n.fa-underline:before {\\n  content: \\\"\\\"; }\\n\\n.fa-table:before {\\n  content: \\\"\\\"; }\\n\\n.fa-magic:before {\\n  content: \\\"\\\"; }\\n\\n.fa-truck:before {\\n  content: \\\"\\\"; }\\n\\n.fa-pinterest:before {\\n  content: \\\"\\\"; }\\n\\n.fa-pinterest-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-google-plus-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-google-plus:before {\\n  content: \\\"\\\"; }\\n\\n.fa-money:before {\\n  content: \\\"\\\"; }\\n\\n.fa-caret-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-caret-up:before {\\n  content: \\\"\\\"; }\\n\\n.fa-caret-left:before {\\n  content: \\\"\\\"; }\\n\\n.fa-caret-right:before {\\n  content: \\\"\\\"; }\\n\\n.fa-columns:before {\\n  content: \\\"\\\"; }\\n\\n.fa-unsorted:before,\\n.fa-sort:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sort-down:before,\\n.fa-sort-desc:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sort-up:before,\\n.fa-sort-asc:before {\\n  content: \\\"\\\"; }\\n\\n.fa-envelope:before {\\n  content: \\\"\\\"; }\\n\\n.fa-linkedin:before {\\n  content: \\\"\\\"; }\\n\\n.fa-rotate-left:before,\\n.fa-undo:before {\\n  content: \\\"\\\"; }\\n\\n.fa-legal:before,\\n.fa-gavel:before,\\n.gg-icon-comments:before {\\n  content: \\\"\\\"; }\\n\\n.fa-dashboard:before,\\n.fa-tachometer:before {\\n  content: \\\"\\\"; }\\n\\n.fa-comment-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-comments-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-flash:before,\\n.fa-bolt:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sitemap:before {\\n  content: \\\"\\\"; }\\n\\n.fa-umbrella:before {\\n  content: \\\"\\\"; }\\n\\n.fa-paste:before,\\n.fa-clipboard:before {\\n  content: \\\"\\\"; }\\n\\n.fa-lightbulb-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-exchange:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cloud-download:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cloud-upload:before {\\n  content: \\\"\\\"; }\\n\\n.fa-user-md:before {\\n  content: \\\"\\\"; }\\n\\n.fa-stethoscope:before {\\n  content: \\\"\\\"; }\\n\\n.fa-suitcase:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bell-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-coffee:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cutlery:before {\\n  content: \\\"\\\"; }\\n\\n.fa-file-text-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-building-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hospital-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-ambulance:before {\\n  content: \\\"\\\"; }\\n\\n.fa-medkit:before {\\n  content: \\\"\\\"; }\\n\\n.fa-fighter-jet:before {\\n  content: \\\"\\\"; }\\n\\n.fa-beer:before {\\n  content: \\\"\\\"; }\\n\\n.fa-h-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-plus-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-angle-double-left:before {\\n  content: \\\"\\\"; }\\n\\n.fa-angle-double-right:before {\\n  content: \\\"\\\"; }\\n\\n.fa-angle-double-up:before {\\n  content: \\\"\\\"; }\\n\\n.fa-angle-double-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-angle-left:before {\\n  content: \\\"\\\"; }\\n\\n.fa-angle-right:before {\\n  content: \\\"\\\"; }\\n\\n.fa-angle-up:before {\\n  content: \\\"\\\"; }\\n\\n.fa-angle-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-desktop:before {\\n  content: \\\"\\\"; }\\n\\n.fa-laptop:before {\\n  content: \\\"\\\"; }\\n\\n.fa-tablet:before {\\n  content: \\\"\\\"; }\\n\\n.fa-mobile-phone:before,\\n.fa-mobile:before {\\n  content: \\\"\\\"; }\\n\\n.fa-circle-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-quote-left:before {\\n  content: \\\"\\\"; }\\n\\n.fa-quote-right:before {\\n  content: \\\"\\\"; }\\n\\n.fa-spinner:before {\\n  content: \\\"\\\"; }\\n\\n.fa-circle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-mail-reply:before,\\n.fa-reply:before {\\n  content: \\\"\\\"; }\\n\\n.fa-github-alt:before {\\n  content: \\\"\\\"; }\\n\\n.fa-folder-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-folder-open-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-smile-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-frown-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-meh-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-gamepad:before {\\n  content: \\\"\\\"; }\\n\\n.fa-keyboard-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-flag-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-flag-checkered:before {\\n  content: \\\"\\\"; }\\n\\n.fa-terminal:before {\\n  content: \\\"\\\"; }\\n\\n.fa-code:before {\\n  content: \\\"\\\"; }\\n\\n.fa-mail-reply-all:before,\\n.fa-reply-all:before {\\n  content: \\\"\\\"; }\\n\\n.fa-star-half-empty:before,\\n.fa-star-half-full:before,\\n.fa-star-half-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-location-arrow:before {\\n  content: \\\"\\\"; }\\n\\n.fa-crop:before {\\n  content: \\\"\\\"; }\\n\\n.fa-code-fork:before {\\n  content: \\\"\\\"; }\\n\\n.fa-unlink:before,\\n.fa-chain-broken:before {\\n  content: \\\"\\\"; }\\n\\n.fa-question:before {\\n  content: \\\"\\\"; }\\n\\n.fa-info:before {\\n  content: \\\"\\\"; }\\n\\n.fa-exclamation:before {\\n  content: \\\"\\\"; }\\n\\n.fa-superscript:before {\\n  content: \\\"\\\"; }\\n\\n.fa-subscript:before {\\n  content: \\\"\\\"; }\\n\\n.fa-eraser:before {\\n  content: \\\"\\\"; }\\n\\n.fa-puzzle-piece:before {\\n  content: \\\"\\\"; }\\n\\n.fa-microphone:before {\\n  content: \\\"\\\"; }\\n\\n.fa-microphone-slash:before {\\n  content: \\\"\\\"; }\\n\\n.fa-shield:before {\\n  content: \\\"\\\"; }\\n\\n.fa-calendar-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-fire-extinguisher:before {\\n  content: \\\"\\\"; }\\n\\n.fa-rocket:before {\\n  content: \\\"\\\"; }\\n\\n.fa-maxcdn:before {\\n  content: \\\"\\\"; }\\n\\n.fa-chevron-circle-left:before {\\n  content: \\\"\\\"; }\\n\\n.fa-chevron-circle-right:before {\\n  content: \\\"\\\"; }\\n\\n.fa-chevron-circle-up:before {\\n  content: \\\"\\\"; }\\n\\n.fa-chevron-circle-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-html5:before {\\n  content: \\\"\\\"; }\\n\\n.fa-css3:before {\\n  content: \\\"\\\"; }\\n\\n.fa-anchor:before {\\n  content: \\\"\\\"; }\\n\\n.fa-unlock-alt:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bullseye:before {\\n  content: \\\"\\\"; }\\n\\n.fa-ellipsis-h:before {\\n  content: \\\"\\\"; }\\n\\n.fa-ellipsis-v:before {\\n  content: \\\"\\\"; }\\n\\n.fa-rss-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-play-circle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-ticket:before {\\n  content: \\\"\\\"; }\\n\\n.fa-minus-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-minus-square-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-level-up:before {\\n  content: \\\"\\\"; }\\n\\n.fa-level-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-check-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-pencil-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-external-link-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-share-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-compass:before {\\n  content: \\\"\\\"; }\\n\\n.fa-toggle-down:before,\\n.fa-caret-square-o-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-toggle-up:before,\\n.fa-caret-square-o-up:before {\\n  content: \\\"\\\"; }\\n\\n.fa-toggle-right:before,\\n.fa-caret-square-o-right:before {\\n  content: \\\"\\\"; }\\n\\n.fa-euro:before,\\n.fa-eur:before {\\n  content: \\\"\\\"; }\\n\\n.fa-gbp:before {\\n  content: \\\"\\\"; }\\n\\n.fa-dollar:before,\\n.fa-usd:before {\\n  content: \\\"\\\"; }\\n\\n.fa-rupee:before,\\n.fa-inr:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cny:before,\\n.fa-rmb:before,\\n.fa-yen:before,\\n.fa-jpy:before {\\n  content: \\\"\\\"; }\\n\\n.fa-ruble:before,\\n.fa-rouble:before,\\n.fa-rub:before {\\n  content: \\\"\\\"; }\\n\\n.fa-won:before,\\n.fa-krw:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bitcoin:before,\\n.fa-btc:before {\\n  content: \\\"\\\"; }\\n\\n.fa-file:before {\\n  content: \\\"\\\"; }\\n\\n.fa-file-text:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sort-alpha-asc:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sort-alpha-desc:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sort-amount-asc:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sort-amount-desc:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sort-numeric-asc:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sort-numeric-desc:before {\\n  content: \\\"\\\"; }\\n\\n.fa-thumbs-up:before {\\n  content: \\\"\\\"; }\\n\\n.fa-thumbs-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-youtube-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-youtube:before {\\n  content: \\\"\\\"; }\\n\\n.fa-xing:before {\\n  content: \\\"\\\"; }\\n\\n.fa-xing-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-youtube-play:before {\\n  content: \\\"\\\"; }\\n\\n.fa-dropbox:before {\\n  content: \\\"\\\"; }\\n\\n.fa-stack-overflow:before {\\n  content: \\\"\\\"; }\\n\\n.fa-instagram:before {\\n  content: \\\"\\\"; }\\n\\n.fa-flickr:before {\\n  content: \\\"\\\"; }\\n\\n.fa-adn:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bitbucket:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bitbucket-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-tumblr:before {\\n  content: \\\"\\\"; }\\n\\n.fa-tumblr-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-long-arrow-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-long-arrow-up:before {\\n  content: \\\"\\\"; }\\n\\n.fa-long-arrow-left:before {\\n  content: \\\"\\\"; }\\n\\n.fa-long-arrow-right:before {\\n  content: \\\"\\\"; }\\n\\n.fa-apple:before {\\n  content: \\\"\\\"; }\\n\\n.fa-windows:before {\\n  content: \\\"\\\"; }\\n\\n.fa-android:before {\\n  content: \\\"\\\"; }\\n\\n.fa-linux:before {\\n  content: \\\"\\\"; }\\n\\n.fa-dribbble:before {\\n  content: \\\"\\\"; }\\n\\n.fa-skype:before {\\n  content: \\\"\\\"; }\\n\\n.fa-foursquare:before {\\n  content: \\\"\\\"; }\\n\\n.fa-trello:before {\\n  content: \\\"\\\"; }\\n\\n.fa-female:before {\\n  content: \\\"\\\"; }\\n\\n.fa-male:before {\\n  content: \\\"\\\"; }\\n\\n.fa-gittip:before,\\n.fa-gratipay:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sun-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-moon-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-archive:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bug:before {\\n  content: \\\"\\\"; }\\n\\n.fa-vk:before {\\n  content: \\\"\\\"; }\\n\\n.fa-weibo:before {\\n  content: \\\"\\\"; }\\n\\n.fa-renren:before {\\n  content: \\\"\\\"; }\\n\\n.fa-pagelines:before {\\n  content: \\\"\\\"; }\\n\\n.fa-stack-exchange:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrow-circle-o-right:before {\\n  content: \\\"\\\"; }\\n\\n.fa-arrow-circle-o-left:before {\\n  content: \\\"\\\"; }\\n\\n.fa-toggle-left:before,\\n.fa-caret-square-o-left:before {\\n  content: \\\"\\\"; }\\n\\n.fa-dot-circle-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-wheelchair:before {\\n  content: \\\"\\\"; }\\n\\n.fa-vimeo-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-turkish-lira:before,\\n.fa-try:before {\\n  content: \\\"\\\"; }\\n\\n.fa-plus-square-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-space-shuttle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-slack:before {\\n  content: \\\"\\\"; }\\n\\n.fa-envelope-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-wordpress:before {\\n  content: \\\"\\\"; }\\n\\n.fa-openid:before {\\n  content: \\\"\\\"; }\\n\\n.fa-institution:before,\\n.fa-bank:before,\\n.fa-university:before {\\n  content: \\\"\\\"; }\\n\\n.fa-mortar-board:before,\\n.fa-graduation-cap:before {\\n  content: \\\"\\\"; }\\n\\n.fa-yahoo:before {\\n  content: \\\"\\\"; }\\n\\n.fa-google:before {\\n  content: \\\"\\\"; }\\n\\n.fa-reddit:before {\\n  content: \\\"\\\"; }\\n\\n.fa-reddit-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-stumbleupon-circle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-stumbleupon:before {\\n  content: \\\"\\\"; }\\n\\n.fa-delicious:before {\\n  content: \\\"\\\"; }\\n\\n.fa-digg:before {\\n  content: \\\"\\\"; }\\n\\n.fa-pied-piper:before {\\n  content: \\\"\\\"; }\\n\\n.fa-pied-piper-alt:before {\\n  content: \\\"\\\"; }\\n\\n.fa-drupal:before {\\n  content: \\\"\\\"; }\\n\\n.fa-joomla:before {\\n  content: \\\"\\\"; }\\n\\n.fa-language:before {\\n  content: \\\"\\\"; }\\n\\n.fa-fax:before {\\n  content: \\\"\\\"; }\\n\\n.fa-building:before {\\n  content: \\\"\\\"; }\\n\\n.fa-child:before {\\n  content: \\\"\\\"; }\\n\\n.fa-paw:before {\\n  content: \\\"\\\"; }\\n\\n.fa-spoon:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cube:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cubes:before {\\n  content: \\\"\\\"; }\\n\\n.fa-behance:before {\\n  content: \\\"\\\"; }\\n\\n.fa-behance-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-steam:before {\\n  content: \\\"\\\"; }\\n\\n.fa-steam-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-recycle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-automobile:before,\\n.fa-car:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cab:before,\\n.fa-taxi:before {\\n  content: \\\"\\\"; }\\n\\n.fa-tree:before {\\n  content: \\\"\\\"; }\\n\\n.fa-spotify:before {\\n  content: \\\"\\\"; }\\n\\n.fa-deviantart:before {\\n  content: \\\"\\\"; }\\n\\n.fa-soundcloud:before {\\n  content: \\\"\\\"; }\\n\\n.fa-database:before {\\n  content: \\\"\\\"; }\\n\\n.fa-file-pdf-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-file-word-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-file-excel-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-file-powerpoint-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-file-photo-o:before,\\n.fa-file-picture-o:before,\\n.fa-file-image-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-file-zip-o:before,\\n.fa-file-archive-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-file-sound-o:before,\\n.fa-file-audio-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-file-movie-o:before,\\n.fa-file-video-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-file-code-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-vine:before {\\n  content: \\\"\\\"; }\\n\\n.fa-codepen:before {\\n  content: \\\"\\\"; }\\n\\n.fa-jsfiddle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-life-bouy:before,\\n.fa-life-buoy:before,\\n.fa-life-saver:before,\\n.fa-support:before,\\n.fa-life-ring:before {\\n  content: \\\"\\\"; }\\n\\n.fa-circle-o-notch:before {\\n  content: \\\"\\\"; }\\n\\n.fa-ra:before,\\n.fa-rebel:before {\\n  content: \\\"\\\"; }\\n\\n.fa-ge:before,\\n.fa-empire:before {\\n  content: \\\"\\\"; }\\n\\n.fa-git-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-git:before {\\n  content: \\\"\\\"; }\\n\\n.fa-y-combinator-square:before,\\n.fa-yc-square:before,\\n.fa-hacker-news:before {\\n  content: \\\"\\\"; }\\n\\n.fa-tencent-weibo:before {\\n  content: \\\"\\\"; }\\n\\n.fa-qq:before {\\n  content: \\\"\\\"; }\\n\\n.fa-wechat:before,\\n.fa-weixin:before {\\n  content: \\\"\\\"; }\\n\\n.fa-send:before,\\n.fa-paper-plane:before {\\n  content: \\\"\\\"; }\\n\\n.fa-send-o:before,\\n.fa-paper-plane-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-history:before {\\n  content: \\\"\\\"; }\\n\\n.fa-circle-thin:before {\\n  content: \\\"\\\"; }\\n\\n.fa-header:before {\\n  content: \\\"\\\"; }\\n\\n.fa-paragraph:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sliders:before {\\n  content: \\\"\\\"; }\\n\\n.fa-share-alt:before {\\n  content: \\\"\\\"; }\\n\\n.fa-share-alt-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bomb:before {\\n  content: \\\"\\\"; }\\n\\n.fa-soccer-ball-o:before,\\n.fa-futbol-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-tty:before {\\n  content: \\\"\\\"; }\\n\\n.fa-binoculars:before {\\n  content: \\\"\\\"; }\\n\\n.fa-plug:before {\\n  content: \\\"\\\"; }\\n\\n.fa-slideshare:before {\\n  content: \\\"\\\"; }\\n\\n.fa-twitch:before {\\n  content: \\\"\\\"; }\\n\\n.fa-yelp:before {\\n  content: \\\"\\\"; }\\n\\n.fa-newspaper-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-wifi:before {\\n  content: \\\"\\\"; }\\n\\n.fa-calculator:before {\\n  content: \\\"\\\"; }\\n\\n.fa-paypal:before {\\n  content: \\\"\\\"; }\\n\\n.fa-google-wallet:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cc-visa:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cc-mastercard:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cc-discover:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cc-amex:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cc-paypal:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cc-stripe:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bell-slash:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bell-slash-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-trash:before {\\n  content: \\\"\\\"; }\\n\\n.fa-copyright:before {\\n  content: \\\"\\\"; }\\n\\n.fa-at:before {\\n  content: \\\"\\\"; }\\n\\n.fa-eyedropper:before {\\n  content: \\\"\\\"; }\\n\\n.fa-paint-brush:before {\\n  content: \\\"\\\"; }\\n\\n.fa-birthday-cake:before {\\n  content: \\\"\\\"; }\\n\\n.fa-area-chart:before {\\n  content: \\\"\\\"; }\\n\\n.fa-pie-chart:before {\\n  content: \\\"\\\"; }\\n\\n.fa-line-chart:before {\\n  content: \\\"\\\"; }\\n\\n.fa-lastfm:before {\\n  content: \\\"\\\"; }\\n\\n.fa-lastfm-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-toggle-off:before {\\n  content: \\\"\\\"; }\\n\\n.fa-toggle-on:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bicycle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bus:before {\\n  content: \\\"\\\"; }\\n\\n.fa-ioxhost:before {\\n  content: \\\"\\\"; }\\n\\n.fa-angellist:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cc:before {\\n  content: \\\"\\\"; }\\n\\n.fa-shekel:before,\\n.fa-sheqel:before,\\n.fa-ils:before {\\n  content: \\\"\\\"; }\\n\\n.fa-meanpath:before {\\n  content: \\\"\\\"; }\\n\\n.fa-buysellads:before {\\n  content: \\\"\\\"; }\\n\\n.fa-connectdevelop:before {\\n  content: \\\"\\\"; }\\n\\n.fa-dashcube:before {\\n  content: \\\"\\\"; }\\n\\n.fa-forumbee:before {\\n  content: \\\"\\\"; }\\n\\n.fa-leanpub:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sellsy:before {\\n  content: \\\"\\\"; }\\n\\n.fa-shirtsinbulk:before {\\n  content: \\\"\\\"; }\\n\\n.fa-simplybuilt:before {\\n  content: \\\"\\\"; }\\n\\n.fa-skyatlas:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cart-plus:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cart-arrow-down:before {\\n  content: \\\"\\\"; }\\n\\n.fa-diamond:before {\\n  content: \\\"\\\"; }\\n\\n.fa-ship:before {\\n  content: \\\"\\\"; }\\n\\n.fa-user-secret:before {\\n  content: \\\"\\\"; }\\n\\n.fa-motorcycle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-street-view:before {\\n  content: \\\"\\\"; }\\n\\n.fa-heartbeat:before {\\n  content: \\\"\\\"; }\\n\\n.fa-venus:before {\\n  content: \\\"\\\"; }\\n\\n.fa-mars:before {\\n  content: \\\"\\\"; }\\n\\n.fa-mercury:before {\\n  content: \\\"\\\"; }\\n\\n.fa-intersex:before,\\n.fa-transgender:before {\\n  content: \\\"\\\"; }\\n\\n.fa-transgender-alt:before {\\n  content: \\\"\\\"; }\\n\\n.fa-venus-double:before {\\n  content: \\\"\\\"; }\\n\\n.fa-mars-double:before {\\n  content: \\\"\\\"; }\\n\\n.fa-venus-mars:before {\\n  content: \\\"\\\"; }\\n\\n.fa-mars-stroke:before {\\n  content: \\\"\\\"; }\\n\\n.fa-mars-stroke-v:before {\\n  content: \\\"\\\"; }\\n\\n.fa-mars-stroke-h:before {\\n  content: \\\"\\\"; }\\n\\n.fa-neuter:before {\\n  content: \\\"\\\"; }\\n\\n.fa-genderless:before {\\n  content: \\\"\\\"; }\\n\\n.fa-facebook-official:before, .gg-icon-facebook:before {\\n  content: \\\"\\\"; }\\n\\n.fa-pinterest-p:before {\\n  content: \\\"\\\"; }\\n\\n.fa-whatsapp:before {\\n  content: \\\"\\\"; }\\n\\n.fa-server:before {\\n  content: \\\"\\\"; }\\n\\n.fa-user-plus:before {\\n  content: \\\"\\\"; }\\n\\n.fa-user-times:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hotel:before,\\n.fa-bed:before {\\n  content: \\\"\\\"; }\\n\\n.fa-viacoin:before {\\n  content: \\\"\\\"; }\\n\\n.fa-train:before {\\n  content: \\\"\\\"; }\\n\\n.fa-subway:before {\\n  content: \\\"\\\"; }\\n\\n.fa-medium:before {\\n  content: \\\"\\\"; }\\n\\n.fa-yc:before,\\n.fa-y-combinator:before {\\n  content: \\\"\\\"; }\\n\\n.fa-optin-monster:before {\\n  content: \\\"\\\"; }\\n\\n.fa-opencart:before {\\n  content: \\\"\\\"; }\\n\\n.fa-expeditedssl:before {\\n  content: \\\"\\\"; }\\n\\n.fa-battery-4:before,\\n.fa-battery-full:before {\\n  content: \\\"\\\"; }\\n\\n.fa-battery-3:before,\\n.fa-battery-three-quarters:before {\\n  content: \\\"\\\"; }\\n\\n.fa-battery-2:before,\\n.fa-battery-half:before {\\n  content: \\\"\\\"; }\\n\\n.fa-battery-1:before,\\n.fa-battery-quarter:before {\\n  content: \\\"\\\"; }\\n\\n.fa-battery-0:before,\\n.fa-battery-empty:before {\\n  content: \\\"\\\"; }\\n\\n.fa-mouse-pointer:before {\\n  content: \\\"\\\"; }\\n\\n.fa-i-cursor:before {\\n  content: \\\"\\\"; }\\n\\n.fa-object-group:before {\\n  content: \\\"\\\"; }\\n\\n.fa-object-ungroup:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sticky-note:before {\\n  content: \\\"\\\"; }\\n\\n.fa-sticky-note-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cc-jcb:before {\\n  content: \\\"\\\"; }\\n\\n.fa-cc-diners-club:before {\\n  content: \\\"\\\"; }\\n\\n.fa-clone:before {\\n  content: \\\"\\\"; }\\n\\n.fa-balance-scale:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hourglass-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hourglass-1:before,\\n.fa-hourglass-start:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hourglass-2:before,\\n.fa-hourglass-half:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hourglass-3:before,\\n.fa-hourglass-end:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hourglass:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hand-grab-o:before,\\n.fa-hand-rock-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hand-stop-o:before,\\n.fa-hand-paper-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hand-scissors-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hand-lizard-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hand-spock-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hand-pointer-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hand-peace-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-trademark:before {\\n  content: \\\"\\\"; }\\n\\n.fa-registered:before {\\n  content: \\\"\\\"; }\\n\\n.fa-creative-commons:before {\\n  content: \\\"\\\"; }\\n\\n.fa-gg:before {\\n  content: \\\"\\\"; }\\n\\n.fa-gg-circle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-tripadvisor:before {\\n  content: \\\"\\\"; }\\n\\n.fa-odnoklassniki:before {\\n  content: \\\"\\\"; }\\n\\n.fa-odnoklassniki-square:before {\\n  content: \\\"\\\"; }\\n\\n.fa-get-pocket:before {\\n  content: \\\"\\\"; }\\n\\n.fa-wikipedia-w:before {\\n  content: \\\"\\\"; }\\n\\n.fa-safari:before {\\n  content: \\\"\\\"; }\\n\\n.fa-chrome:before {\\n  content: \\\"\\\"; }\\n\\n.fa-firefox:before {\\n  content: \\\"\\\"; }\\n\\n.fa-opera:before {\\n  content: \\\"\\\"; }\\n\\n.fa-internet-explorer:before {\\n  content: \\\"\\\"; }\\n\\n.fa-tv:before,\\n.fa-television:before {\\n  content: \\\"\\\"; }\\n\\n.fa-contao:before {\\n  content: \\\"\\\"; }\\n\\n.fa-500px:before {\\n  content: \\\"\\\"; }\\n\\n.fa-amazon:before {\\n  content: \\\"\\\"; }\\n\\n.fa-calendar-plus-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-calendar-minus-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-calendar-times-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-calendar-check-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-industry:before {\\n  content: \\\"\\\"; }\\n\\n.fa-map-pin:before {\\n  content: \\\"\\\"; }\\n\\n.fa-map-signs:before {\\n  content: \\\"\\\"; }\\n\\n.fa-map-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-map:before {\\n  content: \\\"\\\"; }\\n\\n.fa-commenting:before {\\n  content: \\\"\\\"; }\\n\\n.fa-commenting-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-houzz:before {\\n  content: \\\"\\\"; }\\n\\n.fa-vimeo:before {\\n  content: \\\"\\\"; }\\n\\n.fa-black-tie:before {\\n  content: \\\"\\\"; }\\n\\n.fa-fonticons:before {\\n  content: \\\"\\\"; }\\n\\n.fa-reddit-alien:before {\\n  content: \\\"\\\"; }\\n\\n.fa-edge:before {\\n  content: \\\"\\\"; }\\n\\n.fa-credit-card-alt:before {\\n  content: \\\"\\\"; }\\n\\n.fa-codiepie:before {\\n  content: \\\"\\\"; }\\n\\n.fa-modx:before {\\n  content: \\\"\\\"; }\\n\\n.fa-fort-awesome:before {\\n  content: \\\"\\\"; }\\n\\n.fa-usb:before {\\n  content: \\\"\\\"; }\\n\\n.fa-product-hunt:before {\\n  content: \\\"\\\"; }\\n\\n.fa-mixcloud:before {\\n  content: \\\"\\\"; }\\n\\n.fa-scribd:before {\\n  content: \\\"\\\"; }\\n\\n.fa-pause-circle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-pause-circle-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-stop-circle:before {\\n  content: \\\"\\\"; }\\n\\n.fa-stop-circle-o:before {\\n  content: \\\"\\\"; }\\n\\n.fa-shopping-bag:before {\\n  content: \\\"\\\"; }\\n\\n.fa-shopping-basket:before {\\n  content: \\\"\\\"; }\\n\\n.fa-hashtag:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bluetooth:before {\\n  content: \\\"\\\"; }\\n\\n.fa-bluetooth-b:before {\\n  content: \\\"\\\"; }\\n\\n.fa-percent:before {\\n  content: \\\"\\\"; }\\n\\n/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */\\n/**\\r\\n * 1. Set default font family to sans-serif.\\r\\n * 2. Prevent iOS and IE text size adjust after device orientation change,\\r\\n *    without disabling user zoom.\\r\\n */\\nhtml {\\n  font-family: sans-serif;\\n  /* 1 */\\n  text-size-adjust: 100%;\\n  /* 2 */ }\\n\\n/**\\r\\n * Remove default margin.\\r\\n */\\nbody {\\n  margin: 0; }\\n\\n/* HTML5 display definitions\\r\\n   ========================================================================== */\\n/**\\r\\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\\r\\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\\r\\n * and Firefox.\\r\\n * Correct `block` display not defined for `main` in IE 11.\\r\\n */\\narticle,\\naside,\\ndetails,\\nfigcaption,\\nfigure,\\nfooter,\\nheader,\\nhgroup,\\nmain,\\nmenu,\\nnav,\\nsection,\\nsummary {\\n  display: block; }\\n\\n/**\\r\\n * 1. Correct `inline-block` display not defined in IE 8/9.\\r\\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\\r\\n */\\naudio,\\ncanvas,\\nprogress,\\nvideo {\\n  display: inline-block;\\n  /* 1 */\\n  vertical-align: baseline;\\n  /* 2 */ }\\n\\n/**\\r\\n * Prevent modern browsers from displaying `audio` without controls.\\r\\n * Remove excess height in iOS 5 devices.\\r\\n */\\naudio:not([controls]) {\\n  display: none;\\n  height: 0; }\\n\\n/**\\r\\n * Address `[hidden]` styling not present in IE 8/9/10.\\r\\n * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\\r\\n */\\n[hidden],\\ntemplate {\\n  display: none; }\\n\\n/* Links\\r\\n   ========================================================================== */\\n/**\\r\\n * Remove the gray background color from active links in IE 10.\\r\\n */\\na {\\n  background-color: transparent; }\\n\\n/**\\r\\n * Improve readability of focused elements when they are also in an\\r\\n * active/hover state.\\r\\n */\\na:active,\\na:hover {\\n  outline: 0; }\\n\\n/* Text-level semantics\\r\\n   ========================================================================== */\\n/**\\r\\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\\r\\n */\\nabbr[title] {\\n  border-bottom: 1px dotted; }\\n\\n/**\\r\\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\\r\\n */\\nb,\\nstrong {\\n  font-weight: bold; }\\n\\n/**\\r\\n * Address styling not present in Safari and Chrome.\\r\\n */\\ndfn {\\n  font-style: italic; }\\n\\n/**\\r\\n * Address variable `h1` font-size and margin within `section` and `article`\\r\\n * contexts in Firefox 4+, Safari, and Chrome.\\r\\n */\\nh1 {\\n  font-size: 2em;\\n  margin: 0.67em 0; }\\n\\n/**\\r\\n * Address styling not present in IE 8/9.\\r\\n */\\nmark {\\n  background: #ff0;\\n  color: #000; }\\n\\n/**\\r\\n * Address inconsistent and variable font size in all browsers.\\r\\n */\\nsmall {\\n  font-size: 80%; }\\n\\n/**\\r\\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\\r\\n */\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline; }\\n\\nsup {\\n  top: -0.5em; }\\n\\nsub {\\n  bottom: -0.25em; }\\n\\n/* Embedded content\\r\\n   ========================================================================== */\\n/**\\r\\n * Remove border when inside `a` element in IE 8/9/10.\\r\\n */\\nimg {\\n  border: 0; }\\n\\n/**\\r\\n * Correct overflow not hidden in IE 9/10/11.\\r\\n */\\nsvg:not(:root) {\\n  overflow: hidden; }\\n\\n/* Grouping content\\r\\n   ========================================================================== */\\n/**\\r\\n * Address margin not present in IE 8/9 and Safari.\\r\\n */\\nfigure {\\n  margin: 1em 40px; }\\n\\n/**\\r\\n * Address differences between Firefox and other browsers.\\r\\n */\\nhr {\\n  box-sizing: content-box;\\n  height: 0; }\\n\\n/**\\r\\n * Contain overflow in all browsers.\\r\\n */\\npre {\\n  overflow: auto; }\\n\\n/**\\r\\n * Address odd `em`-unit font size rendering in all browsers.\\r\\n */\\ncode,\\nkbd,\\npre,\\nsamp {\\n  font-family: monospace, monospace;\\n  font-size: 1em; }\\n\\n/* Forms\\r\\n   ========================================================================== */\\n/**\\r\\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\\r\\n * styling of `select`, unless a `border` property is set.\\r\\n */\\n/**\\r\\n * 1. Correct color not being inherited.\\r\\n *    Known issue: affects color of disabled elements.\\r\\n * 2. Correct font properties not being inherited.\\r\\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\\r\\n */\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  color: inherit;\\n  /* 1 */\\n  font: inherit;\\n  /* 2 */\\n  margin: 0;\\n  /* 3 */ }\\n\\n/**\\r\\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\\r\\n */\\nbutton {\\n  overflow: visible; }\\n\\n/**\\r\\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\\r\\n * All other form control elements do not inherit `text-transform` values.\\r\\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\\r\\n * Correct `select` style inheritance in Firefox.\\r\\n */\\nbutton,\\nselect {\\n  text-transform: none; }\\n\\n/**\\r\\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\\r\\n *    and `video` controls.\\r\\n * 2. Correct inability to style clickable `input` types in iOS.\\r\\n * 3. Improve usability and consistency of cursor style between image-type\\r\\n *    `input` and others.\\r\\n */\\nbutton,\\nhtml input[type=\\\"button\\\"],\\ninput[type=\\\"reset\\\"],\\ninput[type=\\\"submit\\\"] {\\n  -webkit-appearance: button;\\n  /* 2 */\\n  cursor: pointer;\\n  /* 3 */ }\\n\\n/**\\r\\n * Re-set default cursor for disabled elements.\\r\\n */\\nbutton[disabled],\\nhtml input[disabled] {\\n  cursor: default; }\\n\\n/**\\r\\n * Remove inner padding and border in Firefox 4+.\\r\\n */\\nbutton::-moz-focus-inner,\\ninput::-moz-focus-inner {\\n  border: 0;\\n  padding: 0; }\\n\\n/**\\r\\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\\r\\n * the UA stylesheet.\\r\\n */\\ninput {\\n  line-height: normal; }\\n\\n/**\\r\\n * It's recommended that you don't attempt to style these elements.\\r\\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\\r\\n *\\r\\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\\r\\n * 2. Remove excess padding in IE 8/9/10.\\r\\n */\\ninput[type=\\\"checkbox\\\"],\\ninput[type=\\\"radio\\\"] {\\n  box-sizing: border-box;\\n  /* 1 */\\n  padding: 0;\\n  /* 2 */ }\\n\\n/**\\r\\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\\r\\n * `font-size` values of the `input`, it causes the cursor style of the\\r\\n * decrement button to change from `default` to `text`.\\r\\n */\\ninput[type=\\\"number\\\"]::-webkit-inner-spin-button,\\ninput[type=\\\"number\\\"]::-webkit-outer-spin-button {\\n  height: auto; }\\n\\n/**\\r\\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\\r\\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\\r\\n */\\ninput[type=\\\"search\\\"] {\\n  -webkit-appearance: textfield;\\n  /* 1 */\\n  box-sizing: content-box;\\n  /* 2 */ }\\n\\n/**\\r\\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\\r\\n * Safari (but not Chrome) clips the cancel button when the search input has\\r\\n * padding (and `textfield` appearance).\\r\\n */\\ninput[type=\\\"search\\\"]::-webkit-search-cancel-button,\\ninput[type=\\\"search\\\"]::-webkit-search-decoration {\\n  -webkit-appearance: none; }\\n\\n/**\\r\\n * Define consistent border, margin, and padding.\\r\\n */\\nfieldset {\\n  border: 1px solid #c0c0c0;\\n  margin: 0 2px;\\n  padding: 0.35em 0.625em 0.75em; }\\n\\n/**\\r\\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\\r\\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\\r\\n */\\nlegend {\\n  border: 0;\\n  /* 1 */\\n  padding: 0;\\n  /* 2 */ }\\n\\n/**\\r\\n * Remove default vertical scrollbar in IE 8/9/10/11.\\r\\n */\\ntextarea {\\n  overflow: auto; }\\n\\n/**\\r\\n * Don't inherit the `font-weight` (applied by a rule above).\\r\\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\\r\\n */\\noptgroup {\\n  font-weight: bold; }\\n\\n/* Tables\\r\\n   ========================================================================== */\\n/**\\r\\n * Remove most spacing between table cells.\\r\\n */\\ntable {\\n  border-collapse: collapse;\\n  border-spacing: 0; }\\n\\ntd,\\nth {\\n  padding: 0; }\\n\\nhtml {\\n  box-sizing: border-box;\\n  font-size: 62.5%; }\\n\\n*,\\n*::before,\\n*::after {\\n  box-sizing: inherit; }\\n\\n@viewport {\\n  width: device-width; }\\n\\nbody {\\n  background-color: #ffffff;\\n  color: rgba(0, 0, 0, 0.87); }\\n\\na {\\n  text-decoration: none; }\\n\\n::-webkit-input-placeholder {\\n  line-height: normal; }\\n\\n@media screen and (max-width: 600px) {\\n  #wpadminbar {\\n    display: none; } }\\n\\n/**\\r\\n * %gg-shadow-low\\r\\n * %gg-shadow-high\\r\\n * @mixin gg-transition\\r\\n * @mixin gg-menu-list\\r\\n */\\n.gg-appbar, .gg-appbar-menu, .gg-drawer, .gg-card-big, .gg-card-small, .gg-card-image, .gg-article > header {\\n  box-shadow: 0 0.15em 0.3em 0 rgba(0, 0, 0, 0.16), 0 0.15em 0.6em 0 rgba(0, 0, 0, 0.12); }\\n\\n.gg-card-big:hover, .gg-card-small:hover, .gg-card-image:hover, .gg-card-big .gg-card-addon, .gg-card-small .gg-card-addon, .gg-card-image .gg-card-addon, .gg-article-container {\\n  box-shadow: 0 0.3em 0.8em 0 rgba(0, 0, 0, 0.18), 0 0.25em 1em 0 rgba(0, 0, 0, 0.15); }\\n\\n/*!\\r\\n * Waves v0.7.4\\r\\n * http://fian.my.id/Waves\\r\\n *\\r\\n * Copyright 2014 Alfiana E. Sibuea and other contributors\\r\\n * Released under the MIT license\\r\\n * https://github.com/fians/Waves/blob/master/LICENSE\\r\\n */\\n.waves-effect {\\n  position: relative;\\n  cursor: pointer;\\n  display: inline-block;\\n  overflow: hidden;\\n  user-select: none;\\n  -webkit-tap-highlight-color: transparent; }\\n  .waves-effect .waves-ripple {\\n    position: absolute;\\n    border-radius: 50%;\\n    width: 100px;\\n    height: 100px;\\n    margin-top: -50px;\\n    margin-left: -50px;\\n    opacity: 0;\\n    background: radial-gradient(rgba(0, 0, 0, 0.2) 0, rgba(0, 0, 0, 0.3) 40%, rgba(0, 0, 0, 0.4) 50%, rgba(0, 0, 0, 0.5) 60%, rgba(255, 255, 255, 0) 70%);\\n    transition: all 0.5s ease-out;\\n    transition-property: transform, opacity;\\n    transform: scale(0) translate(0, 0);\\n    pointer-events: none; }\\n  .waves-effect.waves-light .waves-ripple {\\n    background: radial-gradient(rgba(255, 255, 255, 0.2) 0, rgba(255, 255, 255, 0.3) 40%, rgba(255, 255, 255, 0.4) 50%, rgba(255, 255, 255, 0.5) 60%, rgba(255, 255, 255, 0) 70%); }\\n\\n.waves-button,\\n.waves-circle {\\n  transform: translateZ(0);\\n  -webkit-mask-image: -webkit-radial-gradient(circle, #ffffff 100%, #000000 100%); }\\n\\n.waves-circle {\\n  border-radius: 50%; }\\n\\n/* perfect-scrollbar v0.6.8 */\\n.ps-container {\\n  -ms-touch-action: none;\\n  overflow: hidden !important; }\\n\\n.ps-container.ps-active-x > .ps-scrollbar-x-rail,\\n.ps-container.ps-active-y > .ps-scrollbar-y-rail {\\n  display: block; }\\n\\n.ps-container.ps-in-scrolling {\\n  pointer-events: none; }\\n\\n.ps-container.ps-in-scrolling.ps-x > .ps-scrollbar-x-rail {\\n  background-color: #eee;\\n  opacity: 0.9; }\\n\\n.ps-container.ps-in-scrolling.ps-x > .ps-scrollbar-x-rail > .ps-scrollbar-x {\\n  background-color: #999; }\\n\\n.ps-container.ps-in-scrolling.ps-y > .ps-scrollbar-y-rail {\\n  background-color: #eee;\\n  opacity: 0.9; }\\n\\n.ps-container.ps-in-scrolling.ps-y > .ps-scrollbar-y-rail > .ps-scrollbar-y {\\n  background-color: #999; }\\n\\n.ps-container > .ps-scrollbar-x-rail {\\n  display: none;\\n  position: absolute;\\n  /* please don't change 'position' */\\n  -webkit-border-radius: 4px;\\n  -moz-border-radius: 4px;\\n  -ms-border-radius: 4px;\\n  border-radius: 4px;\\n  opacity: 0;\\n  -webkit-transition: background-color 0.2s linear, opacity 0.2s linear;\\n  -moz-transition: background-color 0.2s linear, opacity 0.2s linear;\\n  -o-transition: background-color 0.2s linear, opacity 0.2s linear;\\n  transition: background-color 0.2s linear, opacity 0.2s linear;\\n  bottom: 3px;\\n  /* there must be 'bottom' for ps-scrollbar-x-rail */\\n  height: 8px; }\\n\\n.ps-container > .ps-scrollbar-x-rail > .ps-scrollbar-x {\\n  position: absolute;\\n  /* please don't change 'position' */\\n  background-color: #aaa;\\n  -webkit-border-radius: 4px;\\n  -moz-border-radius: 4px;\\n  -ms-border-radius: 4px;\\n  border-radius: 4px;\\n  -webkit-transition: background-color 0.2s linear;\\n  -moz-transition: background-color 0.2s linear;\\n  -o-transition: background-color 0.2s linear;\\n  transition: background-color 0.2s linear;\\n  bottom: 0;\\n  /* there must be 'bottom' for ps-scrollbar-x */\\n  height: 8px; }\\n\\n.ps-container > .ps-scrollbar-y-rail {\\n  display: none;\\n  position: absolute;\\n  /* please don't change 'position' */\\n  -webkit-border-radius: 4px;\\n  -moz-border-radius: 4px;\\n  -ms-border-radius: 4px;\\n  border-radius: 4px;\\n  opacity: 0;\\n  -webkit-transition: background-color 0.2s linear, opacity 0.2s linear;\\n  -moz-transition: background-color 0.2s linear, opacity 0.2s linear;\\n  -o-transition: background-color 0.2s linear, opacity 0.2s linear;\\n  transition: background-color 0.2s linear, opacity 0.2s linear;\\n  right: 3px;\\n  /* there must be 'right' for ps-scrollbar-y-rail */\\n  width: 8px; }\\n\\n.ps-container > .ps-scrollbar-y-rail > .ps-scrollbar-y {\\n  position: absolute;\\n  /* please don't change 'position' */\\n  background-color: #aaa;\\n  -webkit-border-radius: 4px;\\n  -moz-border-radius: 4px;\\n  -ms-border-radius: 4px;\\n  border-radius: 4px;\\n  -webkit-transition: background-color 0.2s linear;\\n  -moz-transition: background-color 0.2s linear;\\n  -o-transition: background-color 0.2s linear;\\n  transition: background-color 0.2s linear;\\n  right: 0;\\n  /* there must be 'right' for ps-scrollbar-y */\\n  width: 8px; }\\n\\n.ps-container:hover.ps-in-scrolling {\\n  pointer-events: none; }\\n\\n.ps-container:hover.ps-in-scrolling.ps-x > .ps-scrollbar-x-rail {\\n  background-color: #eee;\\n  opacity: 0.9; }\\n\\n.ps-container:hover.ps-in-scrolling.ps-x > .ps-scrollbar-x-rail > .ps-scrollbar-x {\\n  background-color: #999; }\\n\\n.ps-container:hover.ps-in-scrolling.ps-y > .ps-scrollbar-y-rail {\\n  background-color: #eee;\\n  opacity: 0.9; }\\n\\n.ps-container:hover.ps-in-scrolling.ps-y > .ps-scrollbar-y-rail > .ps-scrollbar-y {\\n  background-color: #999; }\\n\\n.ps-container:hover > .ps-scrollbar-x-rail,\\n.ps-container:hover > .ps-scrollbar-y-rail {\\n  opacity: 0.6; }\\n\\n.ps-container:hover > .ps-scrollbar-x-rail:hover {\\n  background-color: #eee;\\n  opacity: 0.9; }\\n\\n.ps-container:hover > .ps-scrollbar-x-rail:hover > .ps-scrollbar-x {\\n  background-color: #999; }\\n\\n.ps-container:hover > .ps-scrollbar-y-rail:hover {\\n  background-color: #eee;\\n  opacity: 0.9; }\\n\\n.ps-container:hover > .ps-scrollbar-y-rail:hover > .ps-scrollbar-y {\\n  background-color: #999; }\\n\\n/**\\r\\n * .gg-layout\\r\\n */\\n.gg-layout {\\n  display: flex;\\n  flex-direction: column;\\n  position: relative;\\n  width: 100%;\\n  min-height: 100vh;\\n  padding-left: 0;\\n  -webkit-overflow-scrolling: touch;\\n  transition-property: padding-left;\\n  will-change: padding-left;\\n  transition-duration: 0.2s;\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  @media (min-width: 1280px) {\\n    .gg-layout {\\n      padding-left: 240px; } }\\n  @media screen and (max-width: 600px) {\\n    .gg-layout {\\n      margin-top: -46px; } }\\n\\n/**\\r\\n * .gg-obfuscator\\r\\n * body.is-obfuscated\\r\\n */\\n.gg-obfuscator {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  min-height: 100%;\\n  z-index: 9;\\n  visibility: hidden;\\n  background-color: transparent;\\n  transition-property: visibility, background-color;\\n  will-change: visibility, background-color;\\n  transition-duration: 0.2s;\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  @media (min-width: 1280px) {\\n    .gg-obfuscator {\\n      display: none; } }\\n  .gg-obfuscator.is-visible {\\n    background-color: rgba(0, 0, 0, 0.5);\\n    visibility: visible; }\\n\\nbody.is-obfuscated {\\n  overflow: hidden; }\\n  @media (min-width: 1280px) {\\n    body.is-obfuscated {\\n      overflow: auto; } }\\n\\n/**\\r\\n * %gg-button\\r\\n * .gg-button-flat\\r\\n * .gg-button-flat-light\\r\\n */\\n.gg-button-flat,\\n.gg-button-flat-light {\\n  display: inline-block;\\n  min-width: 64px;\\n  height: 36px;\\n  margin: 8px;\\n  padding: 0 8px;\\n  border-radius: 2px;\\n  line-height: 36px;\\n  text-align: center;\\n  transition-property: background-color;\\n  will-change: background-color;\\n  transition-duration: 0.2s;\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n  cursor: pointer; }\\n\\n.gg-button-flat:hover,\\n.gg-button-flat-light:hover {\\n  background-color: rgba(158, 158, 158, 0.2); }\\n\\n/**\\r\\n * %gg-icon\\r\\n * .gg-icon-flat\\r\\n * .gg-icon-flat-light\\r\\n */\\n.gg-icon-flat,\\n.gg-icon-flat-light, .gg-appbar-icon,\\n.gg-searchbar-icon {\\n  display: inline-block;\\n  width: 48px;\\n  height: 48px;\\n  margin: 4px;\\n  padding: 0;\\n  overflow: hidden;\\n  border-radius: 50%;\\n  line-height: 48px;\\n  text-align: center;\\n  transition-property: background-color;\\n  will-change: background-color;\\n  transition-duration: 0.2s;\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n  cursor: pointer; }\\n\\n.gg-icon-flat:hover,\\n.gg-icon-flat-light:hover {\\n  background-color: rgba(158, 158, 158, 0.2); }\\n\\n.gg-icon-chevron {\\n  transform: rotate(0deg);\\n  transition-property: transform;\\n  will-change: transform;\\n  transition-duration: 0.2s;\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  .gg-icon-chevron.is-visible {\\n    transform: rotate(180deg); }\\n\\n/**\\r\\n * .gg-badge\\r\\n */\\n.gg-badge {\\n  position: absolute;\\n  top: 2.66667px;\\n  right: 2.66667px;\\n  top: 0;\\n  right: 0;\\n  display: block;\\n  width: 20px;\\n  height: 20px;\\n  z-index: 10;\\n  border: 2px solid #ffffff;\\n  border-radius: 50%;\\n  background-color: #ff5722;\\n  color: #ffffff;\\n  font-size: 1.0rem;\\n  line-height: 16px;\\n  text-align: center; }\\n\\n/**\\r\\n * .gg-header\\r\\n * .gg-appbar\\r\\n * .gg-appbar-menu\\r\\n * .gg-searchbar\\r\\n * .gg-searchbar-icon\\r\\n * .gg-searchbar-cancel\\r\\n */\\n.gg-header {\\n  position: fixed;\\n  top: -70px;\\n  left: 0;\\n  width: 100%;\\n  height: 56px;\\n  z-index: 5;\\n  margin: 0;\\n  transition-property: top;\\n  will-change: top;\\n  transition-duration: 0.2s;\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  .gg-header.is-visible {\\n    top: 0; }\\n  @media screen and (min-width: 600px) {\\n    .admin-bar .gg-header {\\n      top: -24px; }\\n      .admin-bar .gg-header.is-visible {\\n        top: 46px; } }\\n  @media screen and (min-width: 783px) {\\n    .admin-bar .gg-header {\\n      top: -38px; }\\n      .admin-bar .gg-header.is-visible {\\n        top: 32px; } }\\n\\n.gg-appbar,\\n.gg-searchbar {\\n  flex-direction: row;\\n  flex-shrink: 0;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  line-height: 2.4rem; }\\n\\n.gg-appbar {\\n  display: flex;\\n  background-color: #ff5722;\\n  color: #ffffff;\\n  transition-property: padding-left;\\n  will-change: padding-left;\\n  transition-duration: 0.2s;\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  .gg-appbar h1 {\\n    flex-grow: 1;\\n    height: 24px;\\n    margin: 16px;\\n    font-size: inherit;\\n    font-weight: inherit;\\n    line-height: inherit; }\\n\\n.gg-searchbar {\\n  display: flex;\\n  visibility: hidden;\\n  opacity: 0;\\n  background-color: #ffffff;\\n  color: rgba(0, 0, 0, 0.38);\\n  font-weight: 400;\\n  transition-property: visibility, opacity;\\n  will-change: visibility, opacity;\\n  transition-duration: 0.2s;\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n  transition-delay: 0s; }\\n  .gg-searchbar.is-visible {\\n    visibility: visible;\\n    opacity: 1; }\\n  .gg-searchbar form {\\n    flex-grow: 1;\\n    height: 24px;\\n    margin: 16px; }\\n    .gg-searchbar form input {\\n      display: block;\\n      width: 100%;\\n      height: 24px;\\n      padding: 0;\\n      border: none;\\n      outline: 0;\\n      color: rgba(0, 0, 0, 0.87);\\n      font-size: 1.8rem;\\n      line-height: 2.4rem; }\\n      .gg-searchbar form input::placeholder {\\n        color: rgba(0, 0, 0, 0.38); }\\n  .gg-searchbar .gg-searchbar-cancel {\\n    visibility: hidden; }\\n    .gg-searchbar .gg-searchbar-cancel.is-visible {\\n      visibility: visible; }\\n\\n.gg-appbar-icon,\\n.gg-searchbar-icon {\\n  flex-shrink: 0; }\\n\\n.gg-appbar-icon {\\n  color: #ffffff; }\\n  .gg-appbar-icon:hover, .gg-appbar-icon:active, .gg-appbar-icon:visited {\\n    color: #ffffff; }\\n\\n.gg-searchbar-icon {\\n  color: rgba(0, 0, 0, 0.38); }\\n  .gg-searchbar-icon:hover, .gg-searchbar-icon:active, .gg-searchbar-icon:visited {\\n    color: rgba(0, 0, 0, 0.38); }\\n\\n.gg-appbar-menu {\\n  display: flex;\\n  position: absolute;\\n  top: 4px;\\n  right: 4px;\\n  width: 200px;\\n  z-index: 5;\\n  visibility: hidden;\\n  opacity: 0;\\n  background: #ffffff;\\n  transition-property: visibility, opacity, padding-left;\\n  will-change: visibility, opacity, padding-left;\\n  transition-duration: 0.2s;\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  .gg-appbar-menu.is-visible {\\n    visibility: visible;\\n    opacity: 1; }\\n  .gg-appbar-menu ul {\\n    width: 100%;\\n    margin: 0;\\n    padding: 8px 0;\\n    list-style: none; }\\n    .gg-appbar-menu ul:not(:last-of-type) {\\n      border-bottom: 1px solid #eeeeee; }\\n    .gg-appbar-menu ul li {\\n      display: block;\\n      margin: 0;\\n      padding: 0; }\\n    .gg-appbar-menu ul a {\\n      display: flex;\\n      width: 100%;\\n      padding: 0 16px;\\n      color: #424242;\\n      line-height: 4.8rem; }\\n      .gg-appbar-menu ul a:hover {\\n        color: #424242; }\\n      .gg-appbar-menu ul a:active, .gg-appbar-menu ul a:focus {\\n        color: rgba(0, 0, 0, 0.87); }\\n      .gg-appbar-menu ul a span {\\n        line-height: 4.8rem; }\\n      .gg-appbar-menu ul a span:first-child {\\n        flex-grow: 1; }\\n      .gg-appbar-menu ul a span:last-child {\\n        padding-left: 16px; }\\n\\n@media (min-width: 1280px) {\\n  .gg-appbar,\\n  .gg-searchbar {\\n    padding-left: 240px; }\\n    .gg-appbar .gg-drawer-toggle,\\n    .gg-searchbar .gg-drawer-toggle {\\n      display: none; } }\\n\\n/**\\r\\n * .gg-drawer\\r\\n */\\n.gg-drawer {\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: nowrap;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: 10;\\n  overflow: visible;\\n  overflow-y: auto;\\n  width: 240px;\\n  height: 100%;\\n  min-height: 100vh;\\n  padding: 0;\\n  border-right: 1px solid #ecf0f1;\\n  background: #ffffff;\\n  transform-style: preserve-3d;\\n  transition-property: transform;\\n  will-change: transform;\\n  transition-duration: 0.2s;\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  @media (max-width: 1280px) {\\n    .gg-drawer {\\n      transform: translateX(-250px); } }\\n  .gg-drawer.is-visible {\\n    transform: translateX(0); }\\n  .gg-drawer ul {\\n    width: 100%;\\n    margin: 0;\\n    padding: 8px 0;\\n    list-style: none; }\\n    .gg-drawer ul:not(:last-of-type) {\\n      border-bottom: 1px solid #eeeeee; }\\n    .gg-drawer ul li {\\n      display: block;\\n      margin: 0;\\n      padding: 0; }\\n    .gg-drawer ul a {\\n      display: flex;\\n      width: 100%;\\n      padding: 0 16px;\\n      color: #424242;\\n      line-height: 4.8rem; }\\n      .gg-drawer ul a:hover {\\n        color: #424242; }\\n      .gg-drawer ul a:active, .gg-drawer ul a:focus {\\n        color: rgba(0, 0, 0, 0.87); }\\n      .gg-drawer ul a span {\\n        line-height: 4.8rem; }\\n      .gg-drawer ul a span:first-child {\\n        width: 56px; }\\n      .gg-drawer ul a span:last-child {\\n        flex-grow: 1; }\\n  @media screen and (min-width: 600px) {\\n    .admin-bar .gg-drawer {\\n      padding-top: 46px; } }\\n  @media screen and (min-width: 783px) {\\n    .admin-bar .gg-drawer {\\n      padding-top: 32px; } }\\n\\n/**\\r\\n * .gg-cards\\r\\n * %gg-card\\r\\n * %gg-card-light\\r\\n * .gg-card-big\\r\\n * .gg-card-small\\r\\n * .gg-card-image\\r\\n *\\r\\n * .gg-card-media\\r\\n * .gg-card-content\\r\\n * .gg-card-headline\\r\\n * .gg-card-title\\r\\n * .gg-card-subtitle\\r\\n * .gg-card-payoff\\r\\n * .gg-card-actions\\r\\n * .gg-card-action-icons\\r\\n * .gg-card-action-buttons\\r\\n */\\n.gg-cards {\\n  /*display: flex;\\r\\n  flex-direction: row;\\r\\n  flex-wrap: wrap;\\r\\n  align-items: flex-start;*/\\n  position: relative;\\n  width: calc(100% - 8px);\\n  max-width: calc(100% - 8px);\\n  margin: 0 0 0 8px;\\n  padding-top: 84px; }\\n  @media (min-width: 600px) {\\n    .gg-cards {\\n      width: calc(100% - 16px);\\n      max-width: calc(100% - 16px);\\n      margin: 0 0 0 16px; } }\\n\\n.gg-card-big, .gg-card-small, .gg-card-image {\\n  float: left;\\n  display: flex;\\n  align-content: flex-start;\\n  opacity: 0;\\n  border-radius: 2px;\\n  background: #ffffff;\\n  transition-property: box-shadow, opacity;\\n  will-change: box-shadow, opacity;\\n  transition-duration: 0.2s;\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n  .is-visible.gg-card-big, .is-visible.gg-card-small, .is-visible.gg-card-image {\\n    opacity: 1; }\\n  @media (max-width: 600px) {\\n    .gg-card-big, .gg-card-small, .gg-card-image {\\n      width: calc(100% - 8px);\\n      margin: 4px 0; } }\\n  @media (min-width: 600px) {\\n    .gg-card-big, .gg-card-small, .gg-card-image {\\n      width: calc(50% - 16px);\\n      margin: 8px 0; } }\\n  @media (min-width: 960px) {\\n    .gg-card-big, .gg-card-small, .gg-card-image {\\n      width: calc(33.333% - 16px); } }\\n  .gg-card-big .gg-card-media, .gg-card-small .gg-card-media, .gg-card-image .gg-card-media {\\n    background: rgba(0, 0, 0, 0.38) center center;\\n    background-size: cover; }\\n  .gg-card-big .gg-card-headline, .gg-card-small .gg-card-headline, .gg-card-image .gg-card-headline {\\n    margin: 0; }\\n    .gg-card-big .gg-card-headline .gg-card-title, .gg-card-small .gg-card-headline .gg-card-title, .gg-card-image .gg-card-headline .gg-card-title {\\n      margin: 0;\\n      padding-top: 8px;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-size: 2.4rem;\\n      font-weight: 400;\\n      line-height: 2.4rem; }\\n      .gg-card-big .gg-card-headline .gg-card-title .gg-card-payoff, .gg-card-small .gg-card-headline .gg-card-title .gg-card-payoff, .gg-card-image .gg-card-headline .gg-card-title .gg-card-payoff {\\n        display: block;\\n        font-size: 1.6rem;\\n        font-style: italic; }\\n    .gg-card-big .gg-card-headline .gg-card-subtitle, .gg-card-small .gg-card-headline .gg-card-subtitle, .gg-card-image .gg-card-headline .gg-card-subtitle {\\n      margin: 0;\\n      padding-top: 0.8rem;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-size: 1.4rem;\\n      font-weight: 400;\\n      line-height: 2rem; }\\n  .gg-card-big .gg-card-text, .gg-card-small .gg-card-text, .gg-card-image .gg-card-text {\\n    padding-bottom: 8px;\\n    /*&:last-child {\\r\\n      padding-top: gg-size(padding);\\r\\n      padding-bottom: gg-size(padding) + gg-size(margin);\\r\\n    }*/ }\\n  .gg-card-big .gg-card-actions, .gg-card-small .gg-card-actions, .gg-card-image .gg-card-actions {\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: flex-start;\\n    padding: 0; }\\n    .gg-card-big .gg-card-actions > *:first-child, .gg-card-small .gg-card-actions > *:first-child, .gg-card-image .gg-card-actions > *:first-child {\\n      flex-grow: 1;\\n      text-align: left; }\\n    .gg-card-big .gg-card-actions > *:last-child, .gg-card-small .gg-card-actions > *:last-child, .gg-card-image .gg-card-actions > *:last-child {\\n      text-align: right; }\\n    .gg-card-big .gg-card-actions .gg-card-action-buttons .fa, .gg-card-small .gg-card-actions .gg-card-action-buttons .fa, .gg-card-image .gg-card-actions .gg-card-action-buttons .fa, .gg-card-big .gg-card-actions .gg-card-action-buttons .gg-icon-flat, .gg-card-small .gg-card-actions .gg-card-action-buttons .gg-icon-flat, .gg-card-image .gg-card-actions .gg-card-action-buttons .gg-icon-flat, .gg-card-big .gg-card-actions .gg-card-action-buttons\\n    .gg-icon-flat-light, .gg-card-small .gg-card-actions .gg-card-action-buttons\\n    .gg-icon-flat-light, .gg-card-image .gg-card-actions .gg-card-action-buttons\\n    .gg-icon-flat-light, .gg-card-big .gg-card-actions .gg-card-action-buttons .gg-appbar-icon, .gg-card-small .gg-card-actions .gg-card-action-buttons .gg-appbar-icon, .gg-card-image .gg-card-actions .gg-card-action-buttons .gg-appbar-icon, .gg-card-big .gg-card-actions .gg-card-action-buttons\\n    .gg-searchbar-icon, .gg-card-small .gg-card-actions .gg-card-action-buttons\\n    .gg-searchbar-icon, .gg-card-image .gg-card-actions .gg-card-action-buttons\\n    .gg-searchbar-icon, .gg-card-big .gg-card-actions .gg-card-action-buttons .gg-icon-chevron, .gg-card-small .gg-card-actions .gg-card-action-buttons .gg-icon-chevron, .gg-card-image .gg-card-actions .gg-card-action-buttons .gg-icon-chevron, .gg-card-big .gg-card-actions .gg-card-action-buttons .gg-icon-comments, .gg-card-small .gg-card-actions .gg-card-action-buttons .gg-icon-comments, .gg-card-image .gg-card-actions .gg-card-action-buttons .gg-icon-comments, .gg-card-big .gg-card-actions .gg-card-action-buttons .gg-icon-facebook, .gg-card-small .gg-card-actions .gg-card-action-buttons .gg-icon-facebook, .gg-card-image .gg-card-actions .gg-card-action-buttons .gg-icon-facebook, .gg-card-big .gg-card-actions .gg-card-action-buttons .gg-icon-twitter, .gg-card-small .gg-card-actions .gg-card-action-buttons .gg-icon-twitter, .gg-card-image .gg-card-actions .gg-card-action-buttons .gg-icon-twitter {\\n      margin-right: 4px;\\n      font-size: 1.6rem; }\\n    .gg-card-big .gg-card-actions .gg-card-action-icons, .gg-card-small .gg-card-actions .gg-card-action-icons, .gg-card-image .gg-card-actions .gg-card-action-icons {\\n      font-size: 2rem; }\\n  .gg-card-big .gg-card-addon, .gg-card-small .gg-card-addon, .gg-card-image .gg-card-addon {\\n    position: absolute;\\n    top: 100%;\\n    width: 100%;\\n    max-height: 0px;\\n    overflow: hidden;\\n    background: #ffffff;\\n    transition-property: max-height;\\n    will-change: max-height;\\n    transition-duration: 0.2s;\\n    transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\\n    .gg-card-big .gg-card-addon.is-visible, .gg-card-small .gg-card-addon.is-visible, .gg-card-image .gg-card-addon.is-visible {\\n      max-height: 500px; }\\n    .gg-card-big .gg-card-addon .gg-card-addon-list ul, .gg-card-small .gg-card-addon .gg-card-addon-list ul, .gg-card-image .gg-card-addon .gg-card-addon-list ul {\\n      width: 100%;\\n      margin: 0;\\n      padding: 8px 0;\\n      list-style: none; }\\n      .gg-card-big .gg-card-addon .gg-card-addon-list ul:not(:last-of-type), .gg-card-small .gg-card-addon .gg-card-addon-list ul:not(:last-of-type), .gg-card-image .gg-card-addon .gg-card-addon-list ul:not(:last-of-type) {\\n        border-bottom: 1px solid #eeeeee; }\\n      .gg-card-big .gg-card-addon .gg-card-addon-list ul li, .gg-card-small .gg-card-addon .gg-card-addon-list ul li, .gg-card-image .gg-card-addon .gg-card-addon-list ul li {\\n        display: block;\\n        margin: 0;\\n        padding: 0; }\\n      .gg-card-big .gg-card-addon .gg-card-addon-list ul a, .gg-card-small .gg-card-addon .gg-card-addon-list ul a, .gg-card-image .gg-card-addon .gg-card-addon-list ul a {\\n        display: flex;\\n        width: 100%;\\n        padding: 0 16px;\\n        color: #424242;\\n        line-height: 4.8rem; }\\n        .gg-card-big .gg-card-addon .gg-card-addon-list ul a:hover, .gg-card-small .gg-card-addon .gg-card-addon-list ul a:hover, .gg-card-image .gg-card-addon .gg-card-addon-list ul a:hover {\\n          color: #424242; }\\n        .gg-card-big .gg-card-addon .gg-card-addon-list ul a:active, .gg-card-small .gg-card-addon .gg-card-addon-list ul a:active, .gg-card-image .gg-card-addon .gg-card-addon-list ul a:active, .gg-card-big .gg-card-addon .gg-card-addon-list ul a:focus, .gg-card-small .gg-card-addon .gg-card-addon-list ul a:focus, .gg-card-image .gg-card-addon .gg-card-addon-list ul a:focus {\\n          color: rgba(0, 0, 0, 0.87); }\\n        .gg-card-big .gg-card-addon .gg-card-addon-list ul a span, .gg-card-small .gg-card-addon .gg-card-addon-list ul a span, .gg-card-image .gg-card-addon .gg-card-addon-list ul a span {\\n          line-height: 4.8rem; }\\n        .gg-card-big .gg-card-addon .gg-card-addon-list ul a span:first-child, .gg-card-small .gg-card-addon .gg-card-addon-list ul a span:first-child, .gg-card-image .gg-card-addon .gg-card-addon-list ul a span:first-child {\\n          width: 56px; }\\n        .gg-card-big .gg-card-addon .gg-card-addon-list ul a span:last-child, .gg-card-small .gg-card-addon .gg-card-addon-list ul a span:last-child, .gg-card-image .gg-card-addon .gg-card-addon-list ul a span:last-child {\\n          flex-grow: 1; }\\n\\n.gg-card-big .gg-card-content, .gg-card-small .gg-card-content {\\n  padding: 16px; }\\n\\n.gg-card-big .gg-card-headline, .gg-card-small .gg-card-headline {\\n  padding-bottom: 16px; }\\n  .gg-card-big .gg-card-headline .gg-card-payoff, .gg-card-small .gg-card-headline .gg-card-payoff {\\n    color: rgba(0, 0, 0, 0.38); }\\n  .gg-card-big .gg-card-headline .gg-card-subtitle, .gg-card-small .gg-card-headline .gg-card-subtitle {\\n    color: rgba(0, 0, 0, 0.54); }\\n\\n.gg-card-big .gg-card-actions, .gg-card-small .gg-card-actions {\\n  border-top: 1px solid #eeeeee; }\\n  .gg-card-big .gg-card-actions .gg-button-flat, .gg-card-small .gg-card-actions .gg-button-flat, .gg-card-big .gg-card-actions .gg-icon-flat, .gg-card-small .gg-card-actions .gg-icon-flat {\\n    color: #ff5722; }\\n    .gg-card-big .gg-card-actions .gg-button-flat:hover, .gg-card-small .gg-card-actions .gg-button-flat:hover, .gg-card-big .gg-card-actions .gg-icon-flat:hover, .gg-card-small .gg-card-actions .gg-icon-flat:hover {\\n      color: #ff5722; }\\n    .gg-card-big .gg-card-actions .gg-button-flat:active, .gg-card-small .gg-card-actions .gg-button-flat:active, .gg-card-big .gg-card-actions .gg-button-flat:focus, .gg-card-small .gg-card-actions .gg-button-flat:focus, .gg-card-big .gg-card-actions .gg-icon-flat:active, .gg-card-small .gg-card-actions .gg-icon-flat:active, .gg-card-big .gg-card-actions .gg-icon-flat:focus, .gg-card-small .gg-card-actions .gg-icon-flat:focus {\\n      color: #ff9800; }\\n  .gg-card-big .gg-card-actions .gg-icon-flat, .gg-card-small .gg-card-actions .gg-icon-flat {\\n    width: 36px;\\n    height: 36px;\\n    margin: 8px;\\n    line-height: 36px; }\\n\\n.gg-card-big {\\n  flex-direction: column; }\\n  .gg-card-big .gg-card-media {\\n    width: 100%;\\n    padding-bottom: 56.25%;\\n    background-image: url(\\\"http://unsplash.it/650/200\\\"); }\\n\\n.gg-card-small {\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  align-items: flex-start;\\n  /*.gg-card-text {\\r\\n    width: 100%;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n  }*/ }\\n  .gg-card-small .gg-card-media {\\n    order: 2;\\n    flex-grow: 0;\\n    flex-shrink: 0;\\n    width: calc((100% - 16px) / 3);\\n    margin-top: 16px;\\n    margin-right: 16px;\\n    margin-bottom: 16px;\\n    padding-bottom: calc((100% - 16px) / 3);\\n    background-image: url(\\\"http://unsplash.it/300/300\\\"); }\\n  .gg-card-small .gg-card-content {\\n    order: 1;\\n    flex-grow: 1;\\n    flex-shrink: 0;\\n    max-width: calc(((100% - 16px) / 3) * 2); }\\n  .gg-card-small .gg-card-headline {\\n    max-width: 100%; }\\n  .gg-card-small .gg-card-actions {\\n    width: 100%;\\n    order: 3; }\\n\\n.gg-card-image {\\n  position: relative; }\\n  @media (max-width: 600px) {\\n    .gg-card-image {\\n      padding-bottom: calc(100% - 16px); } }\\n  @media (min-width: 600px) {\\n    .gg-card-image {\\n      padding-bottom: calc(50% - 16px); } }\\n  @media (min-width: 960px) {\\n    .gg-card-image {\\n      padding-bottom: calc(33.333% - 16px); } }\\n  .gg-card-image .gg-card-media {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    background-image: url(\\\"http://unsplash.it/600/600\\\"); }\\n  .gg-card-image .gg-card-content {\\n    position: absolute;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    padding-top: 16px;\\n    background-color: rgba(0, 0, 0, 0.5); }\\n  .gg-card-image .gg-card-headline {\\n    padding-right: 16px;\\n    padding-left: 16px;\\n    padding-bottom: 8px; }\\n    .gg-card-image .gg-card-headline .gg-card-title {\\n      color: #ffffff; }\\n      .gg-card-image .gg-card-headline .gg-card-title .gg-card-payoff {\\n        color: rgba(255, 255, 255, 0.3); }\\n    .gg-card-image .gg-card-headline .gg-card-subtitle {\\n      color: rgba(255, 255, 255, 0.7); }\\n  .gg-card-image .gg-card-actions .gg-button-flat-light,\\n  .gg-card-image .gg-card-actions .gg-icon-flat-light {\\n    color: #ffffff; }\\n    .gg-card-image .gg-card-actions .gg-button-flat-light:hover,\\n    .gg-card-image .gg-card-actions .gg-icon-flat-light:hover {\\n      color: #ffffff; }\\n    .gg-card-image .gg-card-actions .gg-button-flat-light:active, .gg-card-image .gg-card-actions .gg-button-flat-light:focus,\\n    .gg-card-image .gg-card-actions .gg-icon-flat-light:active,\\n    .gg-card-image .gg-card-actions .gg-icon-flat-light:focus {\\n      color: #ffffff; }\\n  .gg-card-image .gg-card-actions .gg-icon-flat-light {\\n    width: 36px;\\n    height: 36px;\\n    margin: 8px;\\n    line-height: 36px; }\\n\\n/**\\r\\n * .gg-article\\r\\n */\\n.gg-article {\\n  width: 100%; }\\n  .gg-article > header {\\n    display: flex;\\n    flex-direction: column;\\n    flex-wrap: wrap;\\n    justify-content: center;\\n    align-items: center;\\n    width: 100%;\\n    min-height: 100vh;\\n    min-height: 50vh;\\n    padding: 74px 8px;\\n    text-align: center;\\n    background: rgba(0, 0, 0, 0.38) url(\\\"http://unsplash.it/1000/500\\\") center center;\\n    background-size: cover; }\\n    .gg-article > header h1 {\\n      margin: 0; }\\n    .gg-article > header h2 {\\n      margin: 0; }\\n\\n.gg-article-container {\\n  width: calc(100% - 16px);\\n  max-width: 700px;\\n  height: 500px;\\n  margin: -74px auto 8px auto;\\n  z-index: 100;\\n  border-radius: 2px;\\n  background: #ffffff; }\\n\\n.gg-article-info {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: flex-start;\\n  border-bottom: 1px solid #eeeeee; }\\n  .gg-article-info > :first-child {\\n    flex-grow: 1;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: flex-start;\\n    align-items: center;\\n    padding: 16px; }\\n    .gg-article-info > :first-child .gg-author-image {\\n      display: block;\\n      flex-grow: 0; }\\n      .gg-article-info > :first-child .gg-author-image img {\\n        width: 40px;\\n        height: 40px;\\n        border-radius: 50%; }\\n    .gg-article-info > :first-child .gg-article-meta {\\n      flex-grow: 1;\\n      padding-left: 16px; }\\n      .gg-article-info > :first-child .gg-article-meta a {\\n        display: block;\\n        color: #ff5722;\\n        line-height: 2rem; }\\n        .gg-article-info > :first-child .gg-article-meta a:hover {\\n          color: #ff9800; }\\n      .gg-article-info > :first-child .gg-article-meta span {\\n        display: block;\\n        color: rgba(0, 0, 0, 0.38);\\n        font-weight: 600; }\\n  .gg-article-info > :last-child {\\n    flex-grow: 0;\\n    padding: 8px;\\n    text-align: right; }\\n\\n.gg-article-actions {\\n  padding: 2px 0; }\\n  .gg-article-actions .gg-button-flat,\\n  .gg-article-actions .gg-icon-flat {\\n    color: #ff5722; }\\n    .gg-article-actions .gg-button-flat:hover,\\n    .gg-article-actions .gg-icon-flat:hover {\\n      color: #ff5722; }\\n    .gg-article-actions .gg-button-flat:active, .gg-article-actions .gg-button-flat:focus,\\n    .gg-article-actions .gg-icon-flat:active,\\n    .gg-article-actions .gg-icon-flat:focus {\\n      color: #ff9800; }\\n  .gg-article-actions .gg-button-flat .fa, .gg-article-actions .gg-button-flat .gg-icon-flat, .gg-article-actions .gg-button-flat\\n  .gg-icon-flat-light, .gg-article-actions .gg-button-flat .gg-appbar-icon, .gg-article-actions .gg-button-flat\\n  .gg-searchbar-icon, .gg-article-actions .gg-button-flat .gg-icon-chevron, .gg-article-actions .gg-button-flat .gg-icon-comments, .gg-article-actions .gg-button-flat .gg-icon-facebook, .gg-article-actions .gg-button-flat .gg-icon-twitter {\\n    font-size: 1.6rem; }\\n  .gg-article-actions .gg-icon-flat {\\n    margin-top: 0;\\n    margin-bottom: 0;\\n    font-size: 2rem; }\\n\\n/**\\r\\n * %gg-button\\r\\n * .gg-button-flat\\r\\n * .gg-button-flat-light\\r\\n */\\n.gg-button-flat,\\n.gg-button-flat-light {\\n  display: inline-block;\\n  min-width: 64px;\\n  height: 36px;\\n  margin: 8px;\\n  padding: 0 8px;\\n  border-radius: 2px;\\n  line-height: 36px;\\n  text-align: center;\\n  transition-property: background-color;\\n  will-change: background-color;\\n  transition-duration: 0.2s;\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\n  cursor: pointer; }\\n\\n.gg-button-flat:hover,\\n.gg-button-flat-light:hover {\\n  background-color: rgba(158, 158, 158, 0.2); }\\n\",\"/**\\r\\n * @function gg-font-size\\r\\n * @function gg-line-height\\r\\n * @mixin gg-font\\r\\n * %gg-font-display-4\\r\\n * %gg-font-display-3\\r\\n * %gg-font-display-2\\r\\n * %gg-font-display-1\\r\\n * %gg-font-headline\\r\\n * %gg-font-title\\r\\n * %gg-font-subheading-device\\r\\n * %gg-font-subheading-desktop\\r\\n * %gg-font-body-2-device\\r\\n * %gg-font-body-1-device\\r\\n * %gg-font-caption\\r\\n * %gg-font-button\\r\\n */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n$gg-font-family-sans-serif:   'Open Sans', sans-serif;\\r\\n$gg-font-family-serif:        serif;\\r\\n$gg-font-family-monospace:    monospace;\\r\\n\\r\\n$gg-font-family:              $gg-font-family-sans-serif;\\r\\n\\r\\n$gg-font-size-root:           62.5%;\\r\\n\\r\\n\\r\\n$gg-font-sizes: (\\r\\n  display-4:               11.2rem,\\r\\n  display-3:               5.6rem,\\r\\n  display-2:               4.5rem,\\r\\n  display-1:               3.4rem,\\r\\n  headline:                2.4rem,\\r\\n  title:                   2.0rem,\\r\\n  subheading-device:       1.6rem,\\r\\n  subheading-desktop:      1.5rem,\\r\\n  body-device:             1.4rem,\\r\\n  body-desktop:            1.3rem,\\r\\n  caption:                 1.2rem,\\r\\n  button:                  1.4rem\\r\\n);\\r\\n\\r\\n@function gg-font-size($size) {\\r\\n  @return map-get($gg-font-sizes, $size);\\r\\n}\\r\\n\\r\\n\\r\\n$gg-line-heights: (\\r\\n  display-2:                  4.8rem,\\r\\n  display-1:                  4.0rem,\\r\\n  headline:                   3.2rem,\\r\\n  subheading:                 2.4rem,\\r\\n  body-2:                     2.4rem,\\r\\n  body-1:                     2.0rem\\r\\n);\\r\\n\\r\\n@function gg-line-height($leading) {\\r\\n  @return map-get($gg-line-heights, $leading);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n@mixin gg-font ($family, $size, $weight, $leading : '') {\\r\\n  font-family: $family;\\r\\n  font-size: gg-font-size($size);\\r\\n  font-weight: $weight;\\r\\n  @if $leading != '' {\\r\\n    line-height: gg-line-height($leading);\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n%gg-font-display-4 {\\r\\n  @include gg-font(\\r\\n    $gg-font-family,\\r\\n    display-4,\\r\\n    300\\r\\n  );\\r\\n}\\r\\n%gg-font-display-3 {\\r\\n  @include gg-font(\\r\\n    $gg-font-family,\\r\\n    display-3,\\r\\n    400\\r\\n  );\\r\\n}\\r\\n%gg-font-display-2 {\\r\\n  @include gg-font(\\r\\n    $gg-font-family,\\r\\n    display-2,\\r\\n    400,\\r\\n    display-2\\r\\n  );\\r\\n}\\r\\n%gg-font-display-1 {\\r\\n  @include gg-font(\\r\\n    $gg-font-family,\\r\\n    display-1,\\r\\n    400,\\r\\n    display-1\\r\\n  );\\r\\n}\\r\\n%gg-font-headline {\\r\\n  @include gg-font(\\r\\n    $gg-font-family,\\r\\n    headline,\\r\\n    400,\\r\\n    headline\\r\\n  );\\r\\n}\\r\\n%gg-font-title {\\r\\n  @include gg-font(\\r\\n    $gg-font-family,\\r\\n    title,\\r\\n    600\\r\\n  );\\r\\n}\\r\\n%gg-font-subheading-device {\\r\\n  @include gg-font(\\r\\n    $gg-font-family,\\r\\n    subheading-device,\\r\\n    400,\\r\\n    subheading\\r\\n  );\\r\\n}\\r\\n%gg-font-subheading-desktop {\\r\\n  @include gg-font(\\r\\n    $gg-font-family,\\r\\n    subheading-desktop,\\r\\n    400,\\r\\n    subheading\\r\\n  );\\r\\n}\\r\\n%gg-font-body-2-device {\\r\\n  @include gg-font(\\r\\n    $gg-font-family,\\r\\n    body-device,\\r\\n    600,\\r\\n    body-2\\r\\n  );\\r\\n}\\r\\n%gg-font-body-1-device {\\r\\n  @include gg-font(\\r\\n    $gg-font-family,\\r\\n    body-device,\\r\\n    400,\\r\\n    body-1\\r\\n  );\\r\\n}\\r\\n%gg-font-caption {\\r\\n  @include gg-font(\\r\\n    $gg-font-family,\\r\\n    caption,\\r\\n    400\\r\\n  );\\r\\n}\\r\\n%gg-font-button {\\r\\n  @include gg-font(\\r\\n    $gg-font-family,\\r\\n    button,\\r\\n    600\\r\\n  );\\r\\n  text-transform: uppercase;\\r\\n}\\r\\n\",\"/**\\r\\n * .gg-article\\r\\n */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-article {\\r\\n  width: 100%;\\r\\n  //height: 100vh;\\r\\n\\r\\n\\r\\n  > header {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    flex-wrap: wrap;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    width: 100%;\\r\\n    min-height: 100vh;\\r\\n    min-height: 50vh; // DEV\\r\\n    padding: gg-size(article-info-height) gg-size(margin);\\r\\n    @extend %gg-shadow-low;\\r\\n    text-align: center;\\r\\n    background: $gg-color-muted url('http://unsplash.it/1000/500') center center; // DEV\\r\\n    //background-attachment: fixed; // DEV\\r\\n    background-size: cover; // DEV\\r\\n\\r\\n    h1 {\\r\\n      margin: 0;\\r\\n      @extend %gg-font-display-2;\\r\\n    }\\r\\n    h2 {\\r\\n      margin: 0;\\r\\n      @extend %gg-font-title;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-article-container {\\r\\n  width: calc(100% - #{gg-size(padding)});\\r\\n  max-width: gg-size(article-body) - gg-size(padding);\\r\\n  height: 500px; // DEV\\r\\n  margin: - gg-size(article-info-height) auto gg-size(margin) auto;\\r\\n  z-index: 100;\\r\\n  border-radius: gg-size(border-radius);\\r\\n  background: $gg-color-body-background;\\r\\n  @extend %gg-shadow-high;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-article-info {\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  justify-content: space-between;\\r\\n  align-items: flex-start;\\r\\n  border-bottom: 1px solid $gg-color-border-light;\\r\\n\\r\\n  > :first-child {\\r\\n    flex-grow: 1;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: flex-start;\\r\\n    align-items: center;\\r\\n    padding: gg-size(padding);\\r\\n    .gg-author-image {\\r\\n      display: block;\\r\\n      flex-grow: 0;\\r\\n      img {\\r\\n        width: 40px;\\r\\n        height: 40px;\\r\\n        border-radius: 50%;\\r\\n      }\\r\\n    }\\r\\n    .gg-article-meta {\\r\\n      flex-grow: 1;\\r\\n      padding-left: gg-size(padding);\\r\\n      a {\\r\\n        display: block;\\r\\n        @extend %gg-font-body-2-device;\\r\\n        color: $gg-color-link;\\r\\n        line-height: gg-line-height(body-1);\\r\\n        &:hover {\\r\\n          color: $gg-color-link-hover;\\r\\n        }\\r\\n      }\\r\\n      span {\\r\\n        display: block;\\r\\n        @extend %gg-font-caption;\\r\\n        color: $gg-color-muted;\\r\\n        font-weight: 600;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  > :last-child {\\r\\n    flex-grow: 0;\\r\\n    padding: gg-size(margin);\\r\\n    text-align: right;\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-article-actions {\\r\\n  padding: gg-size(margin)/4 0;\\r\\n  .gg-button-flat,\\r\\n  .gg-icon-flat {\\r\\n    color: $gg-color-link;\\r\\n    &:hover {\\r\\n      color: $gg-color-link;\\r\\n    }\\r\\n    &:active, &:focus {\\r\\n      color: $gg-color-link-hover;\\r\\n    }\\r\\n  }\\r\\n  .gg-button-flat .fa {\\r\\n    font-size: gg-font-size(subheading-device);\\r\\n  }\\r\\n  .gg-icon-flat {\\r\\n    margin-top: 0;\\r\\n    margin-bottom: 0;\\r\\n    font-size: gg-font-size(title);\\r\\n  }\\r\\n}\\r\\n\",\"/**\\r\\n * .gg-header\\r\\n * .gg-appbar\\r\\n * .gg-appbar-menu\\r\\n * .gg-searchbar\\r\\n * .gg-searchbar-icon\\r\\n * .gg-searchbar-cancel\\r\\n */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-header {\\r\\n  position: fixed;\\r\\n  top: gg-size(header-hidden-offset);\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  height: gg-size(header-height-portrait);\\r\\n  z-index: gg-z(raised);\\r\\n  margin: 0;\\r\\n\\r\\n  @extend %gg-font-title;\\r\\n\\r\\n  @include gg-transition('top');\\r\\n\\r\\n  &.is-visible {\\r\\n    top: 0;\\r\\n  }\\r\\n\\r\\n  .admin-bar & {\\r\\n    @media screen and (min-width: 600px) {\\r\\n      top: gg-size(header-hidden-offset) + gg-size(wp-admin-bar-device);\\r\\n      &.is-visible {\\r\\n        top: gg-size(wp-admin-bar-device);\\r\\n      }\\r\\n    }\\r\\n    @media screen and (min-width: 783px) {\\r\\n      top: gg-size(header-hidden-offset) + gg-size(wp-admin-bar-desktop);\\r\\n      &.is-visible {\\r\\n        top: gg-size(wp-admin-bar-desktop);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-appbar,\\r\\n.gg-searchbar {\\r\\n  flex-direction: row;\\r\\n  flex-shrink: 0;\\r\\n  flex-wrap: nowrap;\\r\\n  justify-content: flex-start;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  line-height: 2.4rem;\\r\\n}\\r\\n\\r\\n\\r\\n.gg-appbar {\\r\\n  display: flex;\\r\\n  background-color: $gg-color-primary;\\r\\n  @extend %gg-shadow-low;\\r\\n  color: $gg-color-text-light;\\r\\n  @include gg-transition('padding-left');\\r\\n\\r\\n  h1 {\\r\\n    flex-grow: 1;\\r\\n    height: 24px;\\r\\n    margin: gg-size(padding);\\r\\n\\r\\n    font-size: inherit;\\r\\n    font-weight: inherit;\\r\\n    line-height: inherit;\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n.gg-searchbar {\\r\\n  display: flex;\\r\\n  visibility: hidden;\\r\\n  opacity: 0;\\r\\n  background-color: $gg-color-body-background;\\r\\n  color: $gg-color-muted;\\r\\n  font-weight: 400;\\r\\n\\r\\n  @include gg-transition('visibility, opacity');\\r\\n  transition-delay: 0s;\\r\\n\\r\\n  &.is-visible {\\r\\n    visibility: visible;\\r\\n    opacity: 1;\\r\\n  }\\r\\n\\r\\n  form {\\r\\n    flex-grow: 1;\\r\\n    height: 24px;\\r\\n    margin: gg-size(padding);\\r\\n\\r\\n    input {\\r\\n      display: block;\\r\\n      width: 100%;\\r\\n      height: 24px;\\r\\n      padding: 0;\\r\\n      border: none;\\r\\n      outline: 0;\\r\\n      color: $gg-color-text;\\r\\n      font-size: 1.8rem; // To avoid long glyphs being cropped\\r\\n      line-height: 2.4rem;\\r\\n      &::placeholder {\\r\\n        color: $gg-color-muted;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  .gg-searchbar-cancel {\\r\\n    visibility: hidden;\\r\\n    &.is-visible {\\r\\n      visibility: visible;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-appbar-icon,\\r\\n.gg-searchbar-icon {\\r\\n  @extend %gg-icon;\\r\\n  flex-shrink: 0;\\r\\n}\\r\\n\\r\\n\\r\\n.gg-appbar-icon {\\r\\n  color: $gg-color-text-light;\\r\\n  &:hover, &:active, &:visited {\\r\\n    color: $gg-color-text-light;\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n.gg-searchbar-icon {\\r\\n  color: $gg-color-muted;\\r\\n  &:hover, &:active, &:visited {\\r\\n    color: $gg-color-muted;\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-appbar-menu {\\r\\n  display: flex;\\r\\n  position: absolute;\\r\\n  top: gg-size(padding) / 4;\\r\\n  right: gg-size(padding) / 4;\\r\\n  width: 200px;\\r\\n  z-index: gg-z(raised);\\r\\n  visibility: hidden;\\r\\n  opacity: 0;\\r\\n  background: $gg-color-body-background;\\r\\n  @extend %gg-shadow-low;\\r\\n\\r\\n  @include gg-transition('visibility, opacity, padding-left');\\r\\n\\r\\n  &.is-visible {\\r\\n    visibility: visible;\\r\\n    opacity: 1;\\r\\n  }\\r\\n\\r\\n  @include gg-menu-list();\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n@include gg-breakpoint(medium) {\\r\\n  .gg-appbar,\\r\\n  .gg-searchbar {\\r\\n    padding-left: gg-size(drawer-width);\\r\\n\\r\\n    .gg-drawer-toggle {\\r\\n      display: none;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"/**\\r\\n * .gg-cards\\r\\n * %gg-card\\r\\n * %gg-card-light\\r\\n * .gg-card-big\\r\\n * .gg-card-small\\r\\n * .gg-card-image\\r\\n *\\r\\n * .gg-card-media\\r\\n * .gg-card-content\\r\\n * .gg-card-headline\\r\\n * .gg-card-title\\r\\n * .gg-card-subtitle\\r\\n * .gg-card-payoff\\r\\n * .gg-card-actions\\r\\n * .gg-card-action-icons\\r\\n * .gg-card-action-buttons\\r\\n */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-cards {\\r\\n  /*display: flex;\\r\\n  flex-direction: row;\\r\\n  flex-wrap: wrap;\\r\\n  align-items: flex-start;*/\\r\\n  position: relative;\\r\\n  width: calc(100% - #{gg-size(margin)});\\r\\n  max-width: calc(100% - #{gg-size(margin)});\\r\\n  margin: 0 0 0 gg-size(margin);\\r\\n  padding-top: gg-size(header-height-portrait) * 1.5;\\r\\n\\r\\n  // overflow: hidden; // DEV\\r\\n\\r\\n  @include gg-breakpoint(xsmall) {\\r\\n    width: calc(100% - #{gg-size(padding)});\\r\\n    max-width: calc(100% - #{gg-size(padding)});\\r\\n    margin: 0 0 0 gg-size(padding);\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n%gg-card {\\r\\n  float: left;\\r\\n  display: flex;\\r\\n  align-content: flex-start;\\r\\n  opacity: 0;\\r\\n  border-radius: gg-size(border-radius);\\r\\n  background: $gg-color-body-background;\\r\\n  @extend %gg-shadow-low;\\r\\n  @include gg-transition('box-shadow, opacity');\\r\\n\\r\\n  &:hover {\\r\\n    @extend %gg-shadow-high;\\r\\n  }\\r\\n\\r\\n  &.is-visible {\\r\\n    opacity: 1;\\r\\n  }\\r\\n\\r\\n  @include gg-breakpoint(base) {\\r\\n    width: calc(100% - #{gg-size(margin)});\\r\\n    margin: 4px 0;\\r\\n  }\\r\\n  @include gg-breakpoint(xsmall) {\\r\\n    width: calc(50% - #{gg-size(padding)});\\r\\n    margin: gg-size(margin) 0;\\r\\n  }\\r\\n  @include gg-breakpoint(small) {\\r\\n    width: calc(33.333% - #{gg-size(padding)});\\r\\n  }\\r\\n\\r\\n  .gg-card-media {\\r\\n    background: $gg-color-muted center center;\\r\\n    background-size: cover;\\r\\n  }\\r\\n\\r\\n  .gg-card-headline {\\r\\n    margin: 0;\\r\\n\\r\\n    .gg-card-title {\\r\\n      margin: 0;\\r\\n      padding-top: gg-size(margin);\\r\\n      @include gg-font($gg-font-family, headline, 400, body-2);\\r\\n\\r\\n      .gg-card-payoff {\\r\\n        display: block;\\r\\n        font-size: gg-font-size(subheading-device);\\r\\n        font-style: italic;\\r\\n      }\\r\\n    }\\r\\n    .gg-card-subtitle {\\r\\n      margin: 0;\\r\\n      padding-top: gg-font-size(headline) / 3;\\r\\n      @include gg-font($gg-font-family, body-device, 400, body-1);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  .gg-card-text {\\r\\n    @extend %gg-font-body-1-device;\\r\\n    padding-bottom: gg-size(padding) / 2;\\r\\n    /*&:last-child {\\r\\n      padding-top: gg-size(padding);\\r\\n      padding-bottom: gg-size(padding) + gg-size(margin);\\r\\n    }*/\\r\\n  }\\r\\n\\r\\n  .gg-card-actions {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: flex-start;\\r\\n    padding: 0;\\r\\n    & > *:first-child {\\r\\n      flex-grow: 1;\\r\\n      text-align: left;\\r\\n    }\\r\\n    & > *:last-child {\\r\\n      text-align: right;\\r\\n    }\\r\\n\\r\\n    .gg-card-action-buttons {\\r\\n      .fa {\\r\\n        margin-right: gg-size(margin) / 2;\\r\\n        font-size: gg-font-size(subheading-device);\\r\\n      }\\r\\n    }\\r\\n    .gg-card-action-icons {\\r\\n      font-size: gg-font-size(title);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  .gg-card-addon {\\r\\n    position: absolute;\\r\\n    top: 100%;\\r\\n    width: 100%;\\r\\n    max-height: 0px;\\r\\n    overflow: hidden;\\r\\n    @extend %gg-shadow-high;\\r\\n    background: $gg-color-body-background;\\r\\n    @include gg-transition('max-height');\\r\\n\\r\\n    &.is-visible {\\r\\n      max-height: 500px;\\r\\n    }\\r\\n\\r\\n    .gg-card-addon-list {\\r\\n      @include gg-menu-list($icon-position : left);\\r\\n    }\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n%gg-card-light {\\r\\n  @extend %gg-card;\\r\\n\\r\\n  .gg-card-content {\\r\\n    padding: gg-size(padding);\\r\\n  }\\r\\n\\r\\n  .gg-card-headline {\\r\\n    padding-bottom: gg-size(padding);\\r\\n    .gg-card-payoff {\\r\\n      color: $gg-color-muted;\\r\\n    }\\r\\n    .gg-card-subtitle {\\r\\n      color: $gg-color-secondary-text;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  .gg-card-actions {\\r\\n    border-top: 1px solid $gg-color-border-light;\\r\\n    .gg-button-flat,\\r\\n    .gg-icon-flat {\\r\\n      color: $gg-color-link;\\r\\n      &:hover {\\r\\n        color: $gg-color-link;\\r\\n      }\\r\\n      &:active, &:focus {\\r\\n        color: $gg-color-link-hover;\\r\\n      }\\r\\n    }\\r\\n    .gg-icon-flat {\\r\\n      width: gg-size(button-height);\\r\\n      height: gg-size(button-height);\\r\\n      margin: gg-size(margin);\\r\\n      line-height: gg-size(button-height);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-card-big {\\r\\n  @extend %gg-card-light;\\r\\n  flex-direction: column;\\r\\n\\r\\n  .gg-card-media {\\r\\n    width: 100%;\\r\\n    padding-bottom: 56.25%; // 16:9\\r\\n    background-image: url('http://unsplash.it/650/200'); // DEV\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-card-small {\\r\\n  @extend %gg-card-light;\\r\\n  flex-direction: row;\\r\\n  flex-wrap: wrap;\\r\\n  align-items: flex-start;\\r\\n\\r\\n  .gg-card-media {\\r\\n    order: 2;\\r\\n    flex-grow: 0;\\r\\n    flex-shrink: 0;\\r\\n    width: calc((100% - #{gg-size(padding)}) / 3);\\r\\n    margin-top: gg-size(padding);\\r\\n    margin-right: gg-size(padding);\\r\\n    margin-bottom: gg-size(padding);\\r\\n    padding-bottom: calc((100% - #{gg-size(padding)}) / 3); // 1:1\\r\\n    background-image: url('http://unsplash.it/300/300'); // DEV\\r\\n  }\\r\\n\\r\\n  .gg-card-content {\\r\\n    order: 1;\\r\\n    flex-grow: 1;\\r\\n    flex-shrink: 0;\\r\\n    max-width: calc(((100% - #{gg-size(padding)}) / 3) * 2);\\r\\n  }\\r\\n\\r\\n  .gg-card-headline {\\r\\n    max-width: 100%;\\r\\n  }\\r\\n\\r\\n  /*.gg-card-text {\\r\\n    width: 100%;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n  }*/\\r\\n\\r\\n  .gg-card-actions {\\r\\n    width: 100%;\\r\\n    order: 3;\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.gg-card-image {\\r\\n  @extend %gg-card;\\r\\n  position: relative;\\r\\n\\r\\n  @include gg-breakpoint(base) {\\r\\n    padding-bottom: calc(100% - #{gg-size(padding)});\\r\\n  }\\r\\n  @include gg-breakpoint(xsmall) {\\r\\n    padding-bottom: calc(50% - #{gg-size(padding)});\\r\\n  }\\r\\n  @include gg-breakpoint(small) {\\r\\n    padding-bottom: calc(33.333% - #{gg-size(padding)});\\r\\n  }\\r\\n\\r\\n  .gg-card-media {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    background-image: url('http://unsplash.it/600/600'); // DEV\\r\\n  }\\r\\n\\r\\n  .gg-card-content {\\r\\n    position: absolute;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    padding-top: gg-size(padding);\\r\\n    background-color: rgba(gg-color(black), 0.5);\\r\\n  }\\r\\n\\r\\n  .gg-card-headline {\\r\\n    padding-right: gg-size(padding);\\r\\n    padding-left: gg-size(padding);\\r\\n    padding-bottom: gg-size(margin);\\r\\n    .gg-card-title {\\r\\n      color: $gg-color-text-light;\\r\\n      .gg-card-payoff {\\r\\n        color: $gg-color-muted-light;\\r\\n      }\\r\\n    }\\r\\n    .gg-card-subtitle {\\r\\n      color: $gg-color-secondary-text-light;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  .gg-card-actions {\\r\\n    .gg-button-flat-light,\\r\\n    .gg-icon-flat-light {\\r\\n      color: $gg-color-text-light;\\r\\n      &:hover {\\r\\n        color: $gg-color-text-light;\\r\\n      }\\r\\n      &:active, &:focus {\\r\\n        color: $gg-color-text-light;\\r\\n      }\\r\\n    }\\r\\n    .gg-icon-flat-light {\\r\\n      width: gg-size(button-height);\\r\\n      height: gg-size(button-height);\\r\\n      margin: gg-size(margin);\\r\\n      line-height: gg-size(button-height);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"/**\\r\\n * %gg-button\\r\\n * .gg-button-flat\\r\\n * .gg-button-flat-light\\r\\n */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n%gg-button {\\r\\n  display: inline-block;\\r\\n  min-width: gg-size(button-width);\\r\\n  height: gg-size(button-height);\\r\\n  margin: gg-size(margin);\\r\\n  padding: 0 gg-size(margin);\\r\\n  border-radius: gg-size(border-radius);\\r\\n  @extend %gg-font-button;\\r\\n  line-height: gg-size(button-height);\\r\\n  text-align: center;\\r\\n  @include gg-transition('background-color');\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-button-flat,\\r\\n.gg-button-flat-light {\\r\\n  @extend %gg-button;\\r\\n  &:hover {\\r\\n    background-color: rgba(gg-color(md-gray-500), 0.2);\\r\\n  }\\r\\n}\\r\\n\",\"/*!\\r\\n *  Font Awesome 4.5.0 by @davegandy - http://fontawesome.io - @fontawesome\\r\\n *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\\r\\n */\\r\\n\\r\\n@import \\\"variables\\\";\\r\\n@import \\\"mixins\\\";\\r\\n@import \\\"path\\\";\\r\\n@import \\\"core\\\";\\r\\n@import \\\"larger\\\";\\r\\n@import \\\"fixed-width\\\";\\r\\n@import \\\"list\\\";\\r\\n@import \\\"bordered-pulled\\\";\\r\\n@import \\\"animated\\\";\\r\\n@import \\\"rotated-flipped\\\";\\r\\n@import \\\"stacked\\\";\\r\\n@import \\\"icons\\\";\\r\\n\",\"/* FONT PATH\\r\\n * -------------------------- */\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'FontAwesome';\\r\\n  src: url('#{$fa-font-path}/fontawesome-webfont.eot?v=#{$fa-version}');\\r\\n  src: url('#{$fa-font-path}/fontawesome-webfont.eot?#iefix&v=#{$fa-version}') format('embedded-opentype'),\\r\\n    url('#{$fa-font-path}/fontawesome-webfont.woff2?v=#{$fa-version}') format('woff2'),\\r\\n    url('#{$fa-font-path}/fontawesome-webfont.woff?v=#{$fa-version}') format('woff'),\\r\\n    url('#{$fa-font-path}/fontawesome-webfont.ttf?v=#{$fa-version}') format('truetype'),\\r\\n    url('#{$fa-font-path}/fontawesome-webfont.svg?v=#{$fa-version}#fontawesomeregular') format('svg');\\r\\n//  src: url('#{$fa-font-path}/FontAwesome.otf') format('opentype'); // used when developing fonts\\r\\n  font-weight: normal;\\r\\n  font-style: normal;\\r\\n}\\r\\n\",\"// Base Class Definition\\r\\n// -------------------------\\r\\n\\r\\n.#{$fa-css-prefix} {\\r\\n  display: inline-block;\\r\\n  font: normal normal normal #{$fa-font-size-base}/#{$fa-line-height-base} FontAwesome; // shortening font declaration\\r\\n  font-size: inherit; // can't have font-size inherit on line above, so need to override\\r\\n  text-rendering: auto; // optimizelegibility throws things off #1094\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n\\r\\n}\\r\\n\",\"// Icon Sizes\\r\\n// -------------------------\\r\\n\\r\\n/* makes the font 33% larger relative to the icon container */\\r\\n.#{$fa-css-prefix}-lg {\\r\\n  font-size: (4em / 3);\\r\\n  line-height: (3em / 4);\\r\\n  vertical-align: -15%;\\r\\n}\\r\\n.#{$fa-css-prefix}-2x { font-size: 2em; }\\r\\n.#{$fa-css-prefix}-3x { font-size: 3em; }\\r\\n.#{$fa-css-prefix}-4x { font-size: 4em; }\\r\\n.#{$fa-css-prefix}-5x { font-size: 5em; }\\r\\n\",\"// Fixed Width Icons\\r\\n// -------------------------\\r\\n.#{$fa-css-prefix}-fw {\\r\\n  width: (18em / 14);\\r\\n  text-align: center;\\r\\n}\\r\\n\",\"// List Icons\\r\\n// -------------------------\\r\\n\\r\\n.#{$fa-css-prefix}-ul {\\r\\n  padding-left: 0;\\r\\n  margin-left: $fa-li-width;\\r\\n  list-style-type: none;\\r\\n  > li { position: relative; }\\r\\n}\\r\\n.#{$fa-css-prefix}-li {\\r\\n  position: absolute;\\r\\n  left: -$fa-li-width;\\r\\n  width: $fa-li-width;\\r\\n  top: (2em / 14);\\r\\n  text-align: center;\\r\\n  &.#{$fa-css-prefix}-lg {\\r\\n    left: -$fa-li-width + (4em / 14);\\r\\n  }\\r\\n}\\r\\n\",\"// Variables\\r\\n// --------------------------\\r\\n\\r\\n$fa-font-path:        \\\"../fonts\\\" !default;\\r\\n$fa-font-size-base:   14px !default;\\r\\n$fa-line-height-base: 1 !default;\\r\\n//$fa-font-path:        \\\"//netdna.bootstrapcdn.com/font-awesome/4.5.0/fonts\\\" !default; // for referencing Bootstrap CDN font files directly\\r\\n$fa-css-prefix:       fa !default;\\r\\n$fa-version:          \\\"4.5.0\\\" !default;\\r\\n$fa-border-color:     #eee !default;\\r\\n$fa-inverse:          #fff !default;\\r\\n$fa-li-width:         (30em / 14) !default;\\r\\n\\r\\n$fa-var-500px: \\\"\\\\f26e\\\";\\r\\n$fa-var-adjust: \\\"\\\\f042\\\";\\r\\n$fa-var-adn: \\\"\\\\f170\\\";\\r\\n$fa-var-align-center: \\\"\\\\f037\\\";\\r\\n$fa-var-align-justify: \\\"\\\\f039\\\";\\r\\n$fa-var-align-left: \\\"\\\\f036\\\";\\r\\n$fa-var-align-right: \\\"\\\\f038\\\";\\r\\n$fa-var-amazon: \\\"\\\\f270\\\";\\r\\n$fa-var-ambulance: \\\"\\\\f0f9\\\";\\r\\n$fa-var-anchor: \\\"\\\\f13d\\\";\\r\\n$fa-var-android: \\\"\\\\f17b\\\";\\r\\n$fa-var-angellist: \\\"\\\\f209\\\";\\r\\n$fa-var-angle-double-down: \\\"\\\\f103\\\";\\r\\n$fa-var-angle-double-left: \\\"\\\\f100\\\";\\r\\n$fa-var-angle-double-right: \\\"\\\\f101\\\";\\r\\n$fa-var-angle-double-up: \\\"\\\\f102\\\";\\r\\n$fa-var-angle-down: \\\"\\\\f107\\\";\\r\\n$fa-var-angle-left: \\\"\\\\f104\\\";\\r\\n$fa-var-angle-right: \\\"\\\\f105\\\";\\r\\n$fa-var-angle-up: \\\"\\\\f106\\\";\\r\\n$fa-var-apple: \\\"\\\\f179\\\";\\r\\n$fa-var-archive: \\\"\\\\f187\\\";\\r\\n$fa-var-area-chart: \\\"\\\\f1fe\\\";\\r\\n$fa-var-arrow-circle-down: \\\"\\\\f0ab\\\";\\r\\n$fa-var-arrow-circle-left: \\\"\\\\f0a8\\\";\\r\\n$fa-var-arrow-circle-o-down: \\\"\\\\f01a\\\";\\r\\n$fa-var-arrow-circle-o-left: \\\"\\\\f190\\\";\\r\\n$fa-var-arrow-circle-o-right: \\\"\\\\f18e\\\";\\r\\n$fa-var-arrow-circle-o-up: \\\"\\\\f01b\\\";\\r\\n$fa-var-arrow-circle-right: \\\"\\\\f0a9\\\";\\r\\n$fa-var-arrow-circle-up: \\\"\\\\f0aa\\\";\\r\\n$fa-var-arrow-down: \\\"\\\\f063\\\";\\r\\n$fa-var-arrow-left: \\\"\\\\f060\\\";\\r\\n$fa-var-arrow-right: \\\"\\\\f061\\\";\\r\\n$fa-var-arrow-up: \\\"\\\\f062\\\";\\r\\n$fa-var-arrows: \\\"\\\\f047\\\";\\r\\n$fa-var-arrows-alt: \\\"\\\\f0b2\\\";\\r\\n$fa-var-arrows-h: \\\"\\\\f07e\\\";\\r\\n$fa-var-arrows-v: \\\"\\\\f07d\\\";\\r\\n$fa-var-asterisk: \\\"\\\\f069\\\";\\r\\n$fa-var-at: \\\"\\\\f1fa\\\";\\r\\n$fa-var-automobile: \\\"\\\\f1b9\\\";\\r\\n$fa-var-backward: \\\"\\\\f04a\\\";\\r\\n$fa-var-balance-scale: \\\"\\\\f24e\\\";\\r\\n$fa-var-ban: \\\"\\\\f05e\\\";\\r\\n$fa-var-bank: \\\"\\\\f19c\\\";\\r\\n$fa-var-bar-chart: \\\"\\\\f080\\\";\\r\\n$fa-var-bar-chart-o: \\\"\\\\f080\\\";\\r\\n$fa-var-barcode: \\\"\\\\f02a\\\";\\r\\n$fa-var-bars: \\\"\\\\f0c9\\\";\\r\\n$fa-var-battery-0: \\\"\\\\f244\\\";\\r\\n$fa-var-battery-1: \\\"\\\\f243\\\";\\r\\n$fa-var-battery-2: \\\"\\\\f242\\\";\\r\\n$fa-var-battery-3: \\\"\\\\f241\\\";\\r\\n$fa-var-battery-4: \\\"\\\\f240\\\";\\r\\n$fa-var-battery-empty: \\\"\\\\f244\\\";\\r\\n$fa-var-battery-full: \\\"\\\\f240\\\";\\r\\n$fa-var-battery-half: \\\"\\\\f242\\\";\\r\\n$fa-var-battery-quarter: \\\"\\\\f243\\\";\\r\\n$fa-var-battery-three-quarters: \\\"\\\\f241\\\";\\r\\n$fa-var-bed: \\\"\\\\f236\\\";\\r\\n$fa-var-beer: \\\"\\\\f0fc\\\";\\r\\n$fa-var-behance: \\\"\\\\f1b4\\\";\\r\\n$fa-var-behance-square: \\\"\\\\f1b5\\\";\\r\\n$fa-var-bell: \\\"\\\\f0f3\\\";\\r\\n$fa-var-bell-o: \\\"\\\\f0a2\\\";\\r\\n$fa-var-bell-slash: \\\"\\\\f1f6\\\";\\r\\n$fa-var-bell-slash-o: \\\"\\\\f1f7\\\";\\r\\n$fa-var-bicycle: \\\"\\\\f206\\\";\\r\\n$fa-var-binoculars: \\\"\\\\f1e5\\\";\\r\\n$fa-var-birthday-cake: \\\"\\\\f1fd\\\";\\r\\n$fa-var-bitbucket: \\\"\\\\f171\\\";\\r\\n$fa-var-bitbucket-square: \\\"\\\\f172\\\";\\r\\n$fa-var-bitcoin: \\\"\\\\f15a\\\";\\r\\n$fa-var-black-tie: \\\"\\\\f27e\\\";\\r\\n$fa-var-bluetooth: \\\"\\\\f293\\\";\\r\\n$fa-var-bluetooth-b: \\\"\\\\f294\\\";\\r\\n$fa-var-bold: \\\"\\\\f032\\\";\\r\\n$fa-var-bolt: \\\"\\\\f0e7\\\";\\r\\n$fa-var-bomb: \\\"\\\\f1e2\\\";\\r\\n$fa-var-book: \\\"\\\\f02d\\\";\\r\\n$fa-var-bookmark: \\\"\\\\f02e\\\";\\r\\n$fa-var-bookmark-o: \\\"\\\\f097\\\";\\r\\n$fa-var-briefcase: \\\"\\\\f0b1\\\";\\r\\n$fa-var-btc: \\\"\\\\f15a\\\";\\r\\n$fa-var-bug: \\\"\\\\f188\\\";\\r\\n$fa-var-building: \\\"\\\\f1ad\\\";\\r\\n$fa-var-building-o: \\\"\\\\f0f7\\\";\\r\\n$fa-var-bullhorn: \\\"\\\\f0a1\\\";\\r\\n$fa-var-bullseye: \\\"\\\\f140\\\";\\r\\n$fa-var-bus: \\\"\\\\f207\\\";\\r\\n$fa-var-buysellads: \\\"\\\\f20d\\\";\\r\\n$fa-var-cab: \\\"\\\\f1ba\\\";\\r\\n$fa-var-calculator: \\\"\\\\f1ec\\\";\\r\\n$fa-var-calendar: \\\"\\\\f073\\\";\\r\\n$fa-var-calendar-check-o: \\\"\\\\f274\\\";\\r\\n$fa-var-calendar-minus-o: \\\"\\\\f272\\\";\\r\\n$fa-var-calendar-o: \\\"\\\\f133\\\";\\r\\n$fa-var-calendar-plus-o: \\\"\\\\f271\\\";\\r\\n$fa-var-calendar-times-o: \\\"\\\\f273\\\";\\r\\n$fa-var-camera: \\\"\\\\f030\\\";\\r\\n$fa-var-camera-retro: \\\"\\\\f083\\\";\\r\\n$fa-var-car: \\\"\\\\f1b9\\\";\\r\\n$fa-var-caret-down: \\\"\\\\f0d7\\\";\\r\\n$fa-var-caret-left: \\\"\\\\f0d9\\\";\\r\\n$fa-var-caret-right: \\\"\\\\f0da\\\";\\r\\n$fa-var-caret-square-o-down: \\\"\\\\f150\\\";\\r\\n$fa-var-caret-square-o-left: \\\"\\\\f191\\\";\\r\\n$fa-var-caret-square-o-right: \\\"\\\\f152\\\";\\r\\n$fa-var-caret-square-o-up: \\\"\\\\f151\\\";\\r\\n$fa-var-caret-up: \\\"\\\\f0d8\\\";\\r\\n$fa-var-cart-arrow-down: \\\"\\\\f218\\\";\\r\\n$fa-var-cart-plus: \\\"\\\\f217\\\";\\r\\n$fa-var-cc: \\\"\\\\f20a\\\";\\r\\n$fa-var-cc-amex: \\\"\\\\f1f3\\\";\\r\\n$fa-var-cc-diners-club: \\\"\\\\f24c\\\";\\r\\n$fa-var-cc-discover: \\\"\\\\f1f2\\\";\\r\\n$fa-var-cc-jcb: \\\"\\\\f24b\\\";\\r\\n$fa-var-cc-mastercard: \\\"\\\\f1f1\\\";\\r\\n$fa-var-cc-paypal: \\\"\\\\f1f4\\\";\\r\\n$fa-var-cc-stripe: \\\"\\\\f1f5\\\";\\r\\n$fa-var-cc-visa: \\\"\\\\f1f0\\\";\\r\\n$fa-var-certificate: \\\"\\\\f0a3\\\";\\r\\n$fa-var-chain: \\\"\\\\f0c1\\\";\\r\\n$fa-var-chain-broken: \\\"\\\\f127\\\";\\r\\n$fa-var-check: \\\"\\\\f00c\\\";\\r\\n$fa-var-check-circle: \\\"\\\\f058\\\";\\r\\n$fa-var-check-circle-o: \\\"\\\\f05d\\\";\\r\\n$fa-var-check-square: \\\"\\\\f14a\\\";\\r\\n$fa-var-check-square-o: \\\"\\\\f046\\\";\\r\\n$fa-var-chevron-circle-down: \\\"\\\\f13a\\\";\\r\\n$fa-var-chevron-circle-left: \\\"\\\\f137\\\";\\r\\n$fa-var-chevron-circle-right: \\\"\\\\f138\\\";\\r\\n$fa-var-chevron-circle-up: \\\"\\\\f139\\\";\\r\\n$fa-var-chevron-down: \\\"\\\\f078\\\";\\r\\n$fa-var-chevron-left: \\\"\\\\f053\\\";\\r\\n$fa-var-chevron-right: \\\"\\\\f054\\\";\\r\\n$fa-var-chevron-up: \\\"\\\\f077\\\";\\r\\n$fa-var-child: \\\"\\\\f1ae\\\";\\r\\n$fa-var-chrome: \\\"\\\\f268\\\";\\r\\n$fa-var-circle: \\\"\\\\f111\\\";\\r\\n$fa-var-circle-o: \\\"\\\\f10c\\\";\\r\\n$fa-var-circle-o-notch: \\\"\\\\f1ce\\\";\\r\\n$fa-var-circle-thin: \\\"\\\\f1db\\\";\\r\\n$fa-var-clipboard: \\\"\\\\f0ea\\\";\\r\\n$fa-var-clock-o: \\\"\\\\f017\\\";\\r\\n$fa-var-clone: \\\"\\\\f24d\\\";\\r\\n$fa-var-close: \\\"\\\\f00d\\\";\\r\\n$fa-var-cloud: \\\"\\\\f0c2\\\";\\r\\n$fa-var-cloud-download: \\\"\\\\f0ed\\\";\\r\\n$fa-var-cloud-upload: \\\"\\\\f0ee\\\";\\r\\n$fa-var-cny: \\\"\\\\f157\\\";\\r\\n$fa-var-code: \\\"\\\\f121\\\";\\r\\n$fa-var-code-fork: \\\"\\\\f126\\\";\\r\\n$fa-var-codepen: \\\"\\\\f1cb\\\";\\r\\n$fa-var-codiepie: \\\"\\\\f284\\\";\\r\\n$fa-var-coffee: \\\"\\\\f0f4\\\";\\r\\n$fa-var-cog: \\\"\\\\f013\\\";\\r\\n$fa-var-cogs: \\\"\\\\f085\\\";\\r\\n$fa-var-columns: \\\"\\\\f0db\\\";\\r\\n$fa-var-comment: \\\"\\\\f075\\\";\\r\\n$fa-var-comment-o: \\\"\\\\f0e5\\\";\\r\\n$fa-var-commenting: \\\"\\\\f27a\\\";\\r\\n$fa-var-commenting-o: \\\"\\\\f27b\\\";\\r\\n$fa-var-comments: \\\"\\\\f086\\\";\\r\\n$fa-var-comments-o: \\\"\\\\f0e6\\\";\\r\\n$fa-var-compass: \\\"\\\\f14e\\\";\\r\\n$fa-var-compress: \\\"\\\\f066\\\";\\r\\n$fa-var-connectdevelop: \\\"\\\\f20e\\\";\\r\\n$fa-var-contao: \\\"\\\\f26d\\\";\\r\\n$fa-var-copy: \\\"\\\\f0c5\\\";\\r\\n$fa-var-copyright: \\\"\\\\f1f9\\\";\\r\\n$fa-var-creative-commons: \\\"\\\\f25e\\\";\\r\\n$fa-var-credit-card: \\\"\\\\f09d\\\";\\r\\n$fa-var-credit-card-alt: \\\"\\\\f283\\\";\\r\\n$fa-var-crop: \\\"\\\\f125\\\";\\r\\n$fa-var-crosshairs: \\\"\\\\f05b\\\";\\r\\n$fa-var-css3: \\\"\\\\f13c\\\";\\r\\n$fa-var-cube: \\\"\\\\f1b2\\\";\\r\\n$fa-var-cubes: \\\"\\\\f1b3\\\";\\r\\n$fa-var-cut: \\\"\\\\f0c4\\\";\\r\\n$fa-var-cutlery: \\\"\\\\f0f5\\\";\\r\\n$fa-var-dashboard: \\\"\\\\f0e4\\\";\\r\\n$fa-var-dashcube: \\\"\\\\f210\\\";\\r\\n$fa-var-database: \\\"\\\\f1c0\\\";\\r\\n$fa-var-dedent: \\\"\\\\f03b\\\";\\r\\n$fa-var-delicious: \\\"\\\\f1a5\\\";\\r\\n$fa-var-desktop: \\\"\\\\f108\\\";\\r\\n$fa-var-deviantart: \\\"\\\\f1bd\\\";\\r\\n$fa-var-diamond: \\\"\\\\f219\\\";\\r\\n$fa-var-digg: \\\"\\\\f1a6\\\";\\r\\n$fa-var-dollar: \\\"\\\\f155\\\";\\r\\n$fa-var-dot-circle-o: \\\"\\\\f192\\\";\\r\\n$fa-var-download: \\\"\\\\f019\\\";\\r\\n$fa-var-dribbble: \\\"\\\\f17d\\\";\\r\\n$fa-var-dropbox: \\\"\\\\f16b\\\";\\r\\n$fa-var-drupal: \\\"\\\\f1a9\\\";\\r\\n$fa-var-edge: \\\"\\\\f282\\\";\\r\\n$fa-var-edit: \\\"\\\\f044\\\";\\r\\n$fa-var-eject: \\\"\\\\f052\\\";\\r\\n$fa-var-ellipsis-h: \\\"\\\\f141\\\";\\r\\n$fa-var-ellipsis-v: \\\"\\\\f142\\\";\\r\\n$fa-var-empire: \\\"\\\\f1d1\\\";\\r\\n$fa-var-envelope: \\\"\\\\f0e0\\\";\\r\\n$fa-var-envelope-o: \\\"\\\\f003\\\";\\r\\n$fa-var-envelope-square: \\\"\\\\f199\\\";\\r\\n$fa-var-eraser: \\\"\\\\f12d\\\";\\r\\n$fa-var-eur: \\\"\\\\f153\\\";\\r\\n$fa-var-euro: \\\"\\\\f153\\\";\\r\\n$fa-var-exchange: \\\"\\\\f0ec\\\";\\r\\n$fa-var-exclamation: \\\"\\\\f12a\\\";\\r\\n$fa-var-exclamation-circle: \\\"\\\\f06a\\\";\\r\\n$fa-var-exclamation-triangle: \\\"\\\\f071\\\";\\r\\n$fa-var-expand: \\\"\\\\f065\\\";\\r\\n$fa-var-expeditedssl: \\\"\\\\f23e\\\";\\r\\n$fa-var-external-link: \\\"\\\\f08e\\\";\\r\\n$fa-var-external-link-square: \\\"\\\\f14c\\\";\\r\\n$fa-var-eye: \\\"\\\\f06e\\\";\\r\\n$fa-var-eye-slash: \\\"\\\\f070\\\";\\r\\n$fa-var-eyedropper: \\\"\\\\f1fb\\\";\\r\\n$fa-var-facebook: \\\"\\\\f09a\\\";\\r\\n$fa-var-facebook-f: \\\"\\\\f09a\\\";\\r\\n$fa-var-facebook-official: \\\"\\\\f230\\\";\\r\\n$fa-var-facebook-square: \\\"\\\\f082\\\";\\r\\n$fa-var-fast-backward: \\\"\\\\f049\\\";\\r\\n$fa-var-fast-forward: \\\"\\\\f050\\\";\\r\\n$fa-var-fax: \\\"\\\\f1ac\\\";\\r\\n$fa-var-feed: \\\"\\\\f09e\\\";\\r\\n$fa-var-female: \\\"\\\\f182\\\";\\r\\n$fa-var-fighter-jet: \\\"\\\\f0fb\\\";\\r\\n$fa-var-file: \\\"\\\\f15b\\\";\\r\\n$fa-var-file-archive-o: \\\"\\\\f1c6\\\";\\r\\n$fa-var-file-audio-o: \\\"\\\\f1c7\\\";\\r\\n$fa-var-file-code-o: \\\"\\\\f1c9\\\";\\r\\n$fa-var-file-excel-o: \\\"\\\\f1c3\\\";\\r\\n$fa-var-file-image-o: \\\"\\\\f1c5\\\";\\r\\n$fa-var-file-movie-o: \\\"\\\\f1c8\\\";\\r\\n$fa-var-file-o: \\\"\\\\f016\\\";\\r\\n$fa-var-file-pdf-o: \\\"\\\\f1c1\\\";\\r\\n$fa-var-file-photo-o: \\\"\\\\f1c5\\\";\\r\\n$fa-var-file-picture-o: \\\"\\\\f1c5\\\";\\r\\n$fa-var-file-powerpoint-o: \\\"\\\\f1c4\\\";\\r\\n$fa-var-file-sound-o: \\\"\\\\f1c7\\\";\\r\\n$fa-var-file-text: \\\"\\\\f15c\\\";\\r\\n$fa-var-file-text-o: \\\"\\\\f0f6\\\";\\r\\n$fa-var-file-video-o: \\\"\\\\f1c8\\\";\\r\\n$fa-var-file-word-o: \\\"\\\\f1c2\\\";\\r\\n$fa-var-file-zip-o: \\\"\\\\f1c6\\\";\\r\\n$fa-var-files-o: \\\"\\\\f0c5\\\";\\r\\n$fa-var-film: \\\"\\\\f008\\\";\\r\\n$fa-var-filter: \\\"\\\\f0b0\\\";\\r\\n$fa-var-fire: \\\"\\\\f06d\\\";\\r\\n$fa-var-fire-extinguisher: \\\"\\\\f134\\\";\\r\\n$fa-var-firefox: \\\"\\\\f269\\\";\\r\\n$fa-var-flag: \\\"\\\\f024\\\";\\r\\n$fa-var-flag-checkered: \\\"\\\\f11e\\\";\\r\\n$fa-var-flag-o: \\\"\\\\f11d\\\";\\r\\n$fa-var-flash: \\\"\\\\f0e7\\\";\\r\\n$fa-var-flask: \\\"\\\\f0c3\\\";\\r\\n$fa-var-flickr: \\\"\\\\f16e\\\";\\r\\n$fa-var-floppy-o: \\\"\\\\f0c7\\\";\\r\\n$fa-var-folder: \\\"\\\\f07b\\\";\\r\\n$fa-var-folder-o: \\\"\\\\f114\\\";\\r\\n$fa-var-folder-open: \\\"\\\\f07c\\\";\\r\\n$fa-var-folder-open-o: \\\"\\\\f115\\\";\\r\\n$fa-var-font: \\\"\\\\f031\\\";\\r\\n$fa-var-fonticons: \\\"\\\\f280\\\";\\r\\n$fa-var-fort-awesome: \\\"\\\\f286\\\";\\r\\n$fa-var-forumbee: \\\"\\\\f211\\\";\\r\\n$fa-var-forward: \\\"\\\\f04e\\\";\\r\\n$fa-var-foursquare: \\\"\\\\f180\\\";\\r\\n$fa-var-frown-o: \\\"\\\\f119\\\";\\r\\n$fa-var-futbol-o: \\\"\\\\f1e3\\\";\\r\\n$fa-var-gamepad: \\\"\\\\f11b\\\";\\r\\n$fa-var-gavel: \\\"\\\\f0e3\\\";\\r\\n$fa-var-gbp: \\\"\\\\f154\\\";\\r\\n$fa-var-ge: \\\"\\\\f1d1\\\";\\r\\n$fa-var-gear: \\\"\\\\f013\\\";\\r\\n$fa-var-gears: \\\"\\\\f085\\\";\\r\\n$fa-var-genderless: \\\"\\\\f22d\\\";\\r\\n$fa-var-get-pocket: \\\"\\\\f265\\\";\\r\\n$fa-var-gg: \\\"\\\\f260\\\";\\r\\n$fa-var-gg-circle: \\\"\\\\f261\\\";\\r\\n$fa-var-gift: \\\"\\\\f06b\\\";\\r\\n$fa-var-git: \\\"\\\\f1d3\\\";\\r\\n$fa-var-git-square: \\\"\\\\f1d2\\\";\\r\\n$fa-var-github: \\\"\\\\f09b\\\";\\r\\n$fa-var-github-alt: \\\"\\\\f113\\\";\\r\\n$fa-var-github-square: \\\"\\\\f092\\\";\\r\\n$fa-var-gittip: \\\"\\\\f184\\\";\\r\\n$fa-var-glass: \\\"\\\\f000\\\";\\r\\n$fa-var-globe: \\\"\\\\f0ac\\\";\\r\\n$fa-var-google: \\\"\\\\f1a0\\\";\\r\\n$fa-var-google-plus: \\\"\\\\f0d5\\\";\\r\\n$fa-var-google-plus-square: \\\"\\\\f0d4\\\";\\r\\n$fa-var-google-wallet: \\\"\\\\f1ee\\\";\\r\\n$fa-var-graduation-cap: \\\"\\\\f19d\\\";\\r\\n$fa-var-gratipay: \\\"\\\\f184\\\";\\r\\n$fa-var-group: \\\"\\\\f0c0\\\";\\r\\n$fa-var-h-square: \\\"\\\\f0fd\\\";\\r\\n$fa-var-hacker-news: \\\"\\\\f1d4\\\";\\r\\n$fa-var-hand-grab-o: \\\"\\\\f255\\\";\\r\\n$fa-var-hand-lizard-o: \\\"\\\\f258\\\";\\r\\n$fa-var-hand-o-down: \\\"\\\\f0a7\\\";\\r\\n$fa-var-hand-o-left: \\\"\\\\f0a5\\\";\\r\\n$fa-var-hand-o-right: \\\"\\\\f0a4\\\";\\r\\n$fa-var-hand-o-up: \\\"\\\\f0a6\\\";\\r\\n$fa-var-hand-paper-o: \\\"\\\\f256\\\";\\r\\n$fa-var-hand-peace-o: \\\"\\\\f25b\\\";\\r\\n$fa-var-hand-pointer-o: \\\"\\\\f25a\\\";\\r\\n$fa-var-hand-rock-o: \\\"\\\\f255\\\";\\r\\n$fa-var-hand-scissors-o: \\\"\\\\f257\\\";\\r\\n$fa-var-hand-spock-o: \\\"\\\\f259\\\";\\r\\n$fa-var-hand-stop-o: \\\"\\\\f256\\\";\\r\\n$fa-var-hashtag: \\\"\\\\f292\\\";\\r\\n$fa-var-hdd-o: \\\"\\\\f0a0\\\";\\r\\n$fa-var-header: \\\"\\\\f1dc\\\";\\r\\n$fa-var-headphones: \\\"\\\\f025\\\";\\r\\n$fa-var-heart: \\\"\\\\f004\\\";\\r\\n$fa-var-heart-o: \\\"\\\\f08a\\\";\\r\\n$fa-var-heartbeat: \\\"\\\\f21e\\\";\\r\\n$fa-var-history: \\\"\\\\f1da\\\";\\r\\n$fa-var-home: \\\"\\\\f015\\\";\\r\\n$fa-var-hospital-o: \\\"\\\\f0f8\\\";\\r\\n$fa-var-hotel: \\\"\\\\f236\\\";\\r\\n$fa-var-hourglass: \\\"\\\\f254\\\";\\r\\n$fa-var-hourglass-1: \\\"\\\\f251\\\";\\r\\n$fa-var-hourglass-2: \\\"\\\\f252\\\";\\r\\n$fa-var-hourglass-3: \\\"\\\\f253\\\";\\r\\n$fa-var-hourglass-end: \\\"\\\\f253\\\";\\r\\n$fa-var-hourglass-half: \\\"\\\\f252\\\";\\r\\n$fa-var-hourglass-o: \\\"\\\\f250\\\";\\r\\n$fa-var-hourglass-start: \\\"\\\\f251\\\";\\r\\n$fa-var-houzz: \\\"\\\\f27c\\\";\\r\\n$fa-var-html5: \\\"\\\\f13b\\\";\\r\\n$fa-var-i-cursor: \\\"\\\\f246\\\";\\r\\n$fa-var-ils: \\\"\\\\f20b\\\";\\r\\n$fa-var-image: \\\"\\\\f03e\\\";\\r\\n$fa-var-inbox: \\\"\\\\f01c\\\";\\r\\n$fa-var-indent: \\\"\\\\f03c\\\";\\r\\n$fa-var-industry: \\\"\\\\f275\\\";\\r\\n$fa-var-info: \\\"\\\\f129\\\";\\r\\n$fa-var-info-circle: \\\"\\\\f05a\\\";\\r\\n$fa-var-inr: \\\"\\\\f156\\\";\\r\\n$fa-var-instagram: \\\"\\\\f16d\\\";\\r\\n$fa-var-institution: \\\"\\\\f19c\\\";\\r\\n$fa-var-internet-explorer: \\\"\\\\f26b\\\";\\r\\n$fa-var-intersex: \\\"\\\\f224\\\";\\r\\n$fa-var-ioxhost: \\\"\\\\f208\\\";\\r\\n$fa-var-italic: \\\"\\\\f033\\\";\\r\\n$fa-var-joomla: \\\"\\\\f1aa\\\";\\r\\n$fa-var-jpy: \\\"\\\\f157\\\";\\r\\n$fa-var-jsfiddle: \\\"\\\\f1cc\\\";\\r\\n$fa-var-key: \\\"\\\\f084\\\";\\r\\n$fa-var-keyboard-o: \\\"\\\\f11c\\\";\\r\\n$fa-var-krw: \\\"\\\\f159\\\";\\r\\n$fa-var-language: \\\"\\\\f1ab\\\";\\r\\n$fa-var-laptop: \\\"\\\\f109\\\";\\r\\n$fa-var-lastfm: \\\"\\\\f202\\\";\\r\\n$fa-var-lastfm-square: \\\"\\\\f203\\\";\\r\\n$fa-var-leaf: \\\"\\\\f06c\\\";\\r\\n$fa-var-leanpub: \\\"\\\\f212\\\";\\r\\n$fa-var-legal: \\\"\\\\f0e3\\\";\\r\\n$fa-var-lemon-o: \\\"\\\\f094\\\";\\r\\n$fa-var-level-down: \\\"\\\\f149\\\";\\r\\n$fa-var-level-up: \\\"\\\\f148\\\";\\r\\n$fa-var-life-bouy: \\\"\\\\f1cd\\\";\\r\\n$fa-var-life-buoy: \\\"\\\\f1cd\\\";\\r\\n$fa-var-life-ring: \\\"\\\\f1cd\\\";\\r\\n$fa-var-life-saver: \\\"\\\\f1cd\\\";\\r\\n$fa-var-lightbulb-o: \\\"\\\\f0eb\\\";\\r\\n$fa-var-line-chart: \\\"\\\\f201\\\";\\r\\n$fa-var-link: \\\"\\\\f0c1\\\";\\r\\n$fa-var-linkedin: \\\"\\\\f0e1\\\";\\r\\n$fa-var-linkedin-square: \\\"\\\\f08c\\\";\\r\\n$fa-var-linux: \\\"\\\\f17c\\\";\\r\\n$fa-var-list: \\\"\\\\f03a\\\";\\r\\n$fa-var-list-alt: \\\"\\\\f022\\\";\\r\\n$fa-var-list-ol: \\\"\\\\f0cb\\\";\\r\\n$fa-var-list-ul: \\\"\\\\f0ca\\\";\\r\\n$fa-var-location-arrow: \\\"\\\\f124\\\";\\r\\n$fa-var-lock: \\\"\\\\f023\\\";\\r\\n$fa-var-long-arrow-down: \\\"\\\\f175\\\";\\r\\n$fa-var-long-arrow-left: \\\"\\\\f177\\\";\\r\\n$fa-var-long-arrow-right: \\\"\\\\f178\\\";\\r\\n$fa-var-long-arrow-up: \\\"\\\\f176\\\";\\r\\n$fa-var-magic: \\\"\\\\f0d0\\\";\\r\\n$fa-var-magnet: \\\"\\\\f076\\\";\\r\\n$fa-var-mail-forward: \\\"\\\\f064\\\";\\r\\n$fa-var-mail-reply: \\\"\\\\f112\\\";\\r\\n$fa-var-mail-reply-all: \\\"\\\\f122\\\";\\r\\n$fa-var-male: \\\"\\\\f183\\\";\\r\\n$fa-var-map: \\\"\\\\f279\\\";\\r\\n$fa-var-map-marker: \\\"\\\\f041\\\";\\r\\n$fa-var-map-o: \\\"\\\\f278\\\";\\r\\n$fa-var-map-pin: \\\"\\\\f276\\\";\\r\\n$fa-var-map-signs: \\\"\\\\f277\\\";\\r\\n$fa-var-mars: \\\"\\\\f222\\\";\\r\\n$fa-var-mars-double: \\\"\\\\f227\\\";\\r\\n$fa-var-mars-stroke: \\\"\\\\f229\\\";\\r\\n$fa-var-mars-stroke-h: \\\"\\\\f22b\\\";\\r\\n$fa-var-mars-stroke-v: \\\"\\\\f22a\\\";\\r\\n$fa-var-maxcdn: \\\"\\\\f136\\\";\\r\\n$fa-var-meanpath: \\\"\\\\f20c\\\";\\r\\n$fa-var-medium: \\\"\\\\f23a\\\";\\r\\n$fa-var-medkit: \\\"\\\\f0fa\\\";\\r\\n$fa-var-meh-o: \\\"\\\\f11a\\\";\\r\\n$fa-var-mercury: \\\"\\\\f223\\\";\\r\\n$fa-var-microphone: \\\"\\\\f130\\\";\\r\\n$fa-var-microphone-slash: \\\"\\\\f131\\\";\\r\\n$fa-var-minus: \\\"\\\\f068\\\";\\r\\n$fa-var-minus-circle: \\\"\\\\f056\\\";\\r\\n$fa-var-minus-square: \\\"\\\\f146\\\";\\r\\n$fa-var-minus-square-o: \\\"\\\\f147\\\";\\r\\n$fa-var-mixcloud: \\\"\\\\f289\\\";\\r\\n$fa-var-mobile: \\\"\\\\f10b\\\";\\r\\n$fa-var-mobile-phone: \\\"\\\\f10b\\\";\\r\\n$fa-var-modx: \\\"\\\\f285\\\";\\r\\n$fa-var-money: \\\"\\\\f0d6\\\";\\r\\n$fa-var-moon-o: \\\"\\\\f186\\\";\\r\\n$fa-var-mortar-board: \\\"\\\\f19d\\\";\\r\\n$fa-var-motorcycle: \\\"\\\\f21c\\\";\\r\\n$fa-var-mouse-pointer: \\\"\\\\f245\\\";\\r\\n$fa-var-music: \\\"\\\\f001\\\";\\r\\n$fa-var-navicon: \\\"\\\\f0c9\\\";\\r\\n$fa-var-neuter: \\\"\\\\f22c\\\";\\r\\n$fa-var-newspaper-o: \\\"\\\\f1ea\\\";\\r\\n$fa-var-object-group: \\\"\\\\f247\\\";\\r\\n$fa-var-object-ungroup: \\\"\\\\f248\\\";\\r\\n$fa-var-odnoklassniki: \\\"\\\\f263\\\";\\r\\n$fa-var-odnoklassniki-square: \\\"\\\\f264\\\";\\r\\n$fa-var-opencart: \\\"\\\\f23d\\\";\\r\\n$fa-var-openid: \\\"\\\\f19b\\\";\\r\\n$fa-var-opera: \\\"\\\\f26a\\\";\\r\\n$fa-var-optin-monster: \\\"\\\\f23c\\\";\\r\\n$fa-var-outdent: \\\"\\\\f03b\\\";\\r\\n$fa-var-pagelines: \\\"\\\\f18c\\\";\\r\\n$fa-var-paint-brush: \\\"\\\\f1fc\\\";\\r\\n$fa-var-paper-plane: \\\"\\\\f1d8\\\";\\r\\n$fa-var-paper-plane-o: \\\"\\\\f1d9\\\";\\r\\n$fa-var-paperclip: \\\"\\\\f0c6\\\";\\r\\n$fa-var-paragraph: \\\"\\\\f1dd\\\";\\r\\n$fa-var-paste: \\\"\\\\f0ea\\\";\\r\\n$fa-var-pause: \\\"\\\\f04c\\\";\\r\\n$fa-var-pause-circle: \\\"\\\\f28b\\\";\\r\\n$fa-var-pause-circle-o: \\\"\\\\f28c\\\";\\r\\n$fa-var-paw: \\\"\\\\f1b0\\\";\\r\\n$fa-var-paypal: \\\"\\\\f1ed\\\";\\r\\n$fa-var-pencil: \\\"\\\\f040\\\";\\r\\n$fa-var-pencil-square: \\\"\\\\f14b\\\";\\r\\n$fa-var-pencil-square-o: \\\"\\\\f044\\\";\\r\\n$fa-var-percent: \\\"\\\\f295\\\";\\r\\n$fa-var-phone: \\\"\\\\f095\\\";\\r\\n$fa-var-phone-square: \\\"\\\\f098\\\";\\r\\n$fa-var-photo: \\\"\\\\f03e\\\";\\r\\n$fa-var-picture-o: \\\"\\\\f03e\\\";\\r\\n$fa-var-pie-chart: \\\"\\\\f200\\\";\\r\\n$fa-var-pied-piper: \\\"\\\\f1a7\\\";\\r\\n$fa-var-pied-piper-alt: \\\"\\\\f1a8\\\";\\r\\n$fa-var-pinterest: \\\"\\\\f0d2\\\";\\r\\n$fa-var-pinterest-p: \\\"\\\\f231\\\";\\r\\n$fa-var-pinterest-square: \\\"\\\\f0d3\\\";\\r\\n$fa-var-plane: \\\"\\\\f072\\\";\\r\\n$fa-var-play: \\\"\\\\f04b\\\";\\r\\n$fa-var-play-circle: \\\"\\\\f144\\\";\\r\\n$fa-var-play-circle-o: \\\"\\\\f01d\\\";\\r\\n$fa-var-plug: \\\"\\\\f1e6\\\";\\r\\n$fa-var-plus: \\\"\\\\f067\\\";\\r\\n$fa-var-plus-circle: \\\"\\\\f055\\\";\\r\\n$fa-var-plus-square: \\\"\\\\f0fe\\\";\\r\\n$fa-var-plus-square-o: \\\"\\\\f196\\\";\\r\\n$fa-var-power-off: \\\"\\\\f011\\\";\\r\\n$fa-var-print: \\\"\\\\f02f\\\";\\r\\n$fa-var-product-hunt: \\\"\\\\f288\\\";\\r\\n$fa-var-puzzle-piece: \\\"\\\\f12e\\\";\\r\\n$fa-var-qq: \\\"\\\\f1d6\\\";\\r\\n$fa-var-qrcode: \\\"\\\\f029\\\";\\r\\n$fa-var-question: \\\"\\\\f128\\\";\\r\\n$fa-var-question-circle: \\\"\\\\f059\\\";\\r\\n$fa-var-quote-left: \\\"\\\\f10d\\\";\\r\\n$fa-var-quote-right: \\\"\\\\f10e\\\";\\r\\n$fa-var-ra: \\\"\\\\f1d0\\\";\\r\\n$fa-var-random: \\\"\\\\f074\\\";\\r\\n$fa-var-rebel: \\\"\\\\f1d0\\\";\\r\\n$fa-var-recycle: \\\"\\\\f1b8\\\";\\r\\n$fa-var-reddit: \\\"\\\\f1a1\\\";\\r\\n$fa-var-reddit-alien: \\\"\\\\f281\\\";\\r\\n$fa-var-reddit-square: \\\"\\\\f1a2\\\";\\r\\n$fa-var-refresh: \\\"\\\\f021\\\";\\r\\n$fa-var-registered: \\\"\\\\f25d\\\";\\r\\n$fa-var-remove: \\\"\\\\f00d\\\";\\r\\n$fa-var-renren: \\\"\\\\f18b\\\";\\r\\n$fa-var-reorder: \\\"\\\\f0c9\\\";\\r\\n$fa-var-repeat: \\\"\\\\f01e\\\";\\r\\n$fa-var-reply: \\\"\\\\f112\\\";\\r\\n$fa-var-reply-all: \\\"\\\\f122\\\";\\r\\n$fa-var-retweet: \\\"\\\\f079\\\";\\r\\n$fa-var-rmb: \\\"\\\\f157\\\";\\r\\n$fa-var-road: \\\"\\\\f018\\\";\\r\\n$fa-var-rocket: \\\"\\\\f135\\\";\\r\\n$fa-var-rotate-left: \\\"\\\\f0e2\\\";\\r\\n$fa-var-rotate-right: \\\"\\\\f01e\\\";\\r\\n$fa-var-rouble: \\\"\\\\f158\\\";\\r\\n$fa-var-rss: \\\"\\\\f09e\\\";\\r\\n$fa-var-rss-square: \\\"\\\\f143\\\";\\r\\n$fa-var-rub: \\\"\\\\f158\\\";\\r\\n$fa-var-ruble: \\\"\\\\f158\\\";\\r\\n$fa-var-rupee: \\\"\\\\f156\\\";\\r\\n$fa-var-safari: \\\"\\\\f267\\\";\\r\\n$fa-var-save: \\\"\\\\f0c7\\\";\\r\\n$fa-var-scissors: \\\"\\\\f0c4\\\";\\r\\n$fa-var-scribd: \\\"\\\\f28a\\\";\\r\\n$fa-var-search: \\\"\\\\f002\\\";\\r\\n$fa-var-search-minus: \\\"\\\\f010\\\";\\r\\n$fa-var-search-plus: \\\"\\\\f00e\\\";\\r\\n$fa-var-sellsy: \\\"\\\\f213\\\";\\r\\n$fa-var-send: \\\"\\\\f1d8\\\";\\r\\n$fa-var-send-o: \\\"\\\\f1d9\\\";\\r\\n$fa-var-server: \\\"\\\\f233\\\";\\r\\n$fa-var-share: \\\"\\\\f064\\\";\\r\\n$fa-var-share-alt: \\\"\\\\f1e0\\\";\\r\\n$fa-var-share-alt-square: \\\"\\\\f1e1\\\";\\r\\n$fa-var-share-square: \\\"\\\\f14d\\\";\\r\\n$fa-var-share-square-o: \\\"\\\\f045\\\";\\r\\n$fa-var-shekel: \\\"\\\\f20b\\\";\\r\\n$fa-var-sheqel: \\\"\\\\f20b\\\";\\r\\n$fa-var-shield: \\\"\\\\f132\\\";\\r\\n$fa-var-ship: \\\"\\\\f21a\\\";\\r\\n$fa-var-shirtsinbulk: \\\"\\\\f214\\\";\\r\\n$fa-var-shopping-bag: \\\"\\\\f290\\\";\\r\\n$fa-var-shopping-basket: \\\"\\\\f291\\\";\\r\\n$fa-var-shopping-cart: \\\"\\\\f07a\\\";\\r\\n$fa-var-sign-in: \\\"\\\\f090\\\";\\r\\n$fa-var-sign-out: \\\"\\\\f08b\\\";\\r\\n$fa-var-signal: \\\"\\\\f012\\\";\\r\\n$fa-var-simplybuilt: \\\"\\\\f215\\\";\\r\\n$fa-var-sitemap: \\\"\\\\f0e8\\\";\\r\\n$fa-var-skyatlas: \\\"\\\\f216\\\";\\r\\n$fa-var-skype: \\\"\\\\f17e\\\";\\r\\n$fa-var-slack: \\\"\\\\f198\\\";\\r\\n$fa-var-sliders: \\\"\\\\f1de\\\";\\r\\n$fa-var-slideshare: \\\"\\\\f1e7\\\";\\r\\n$fa-var-smile-o: \\\"\\\\f118\\\";\\r\\n$fa-var-soccer-ball-o: \\\"\\\\f1e3\\\";\\r\\n$fa-var-sort: \\\"\\\\f0dc\\\";\\r\\n$fa-var-sort-alpha-asc: \\\"\\\\f15d\\\";\\r\\n$fa-var-sort-alpha-desc: \\\"\\\\f15e\\\";\\r\\n$fa-var-sort-amount-asc: \\\"\\\\f160\\\";\\r\\n$fa-var-sort-amount-desc: \\\"\\\\f161\\\";\\r\\n$fa-var-sort-asc: \\\"\\\\f0de\\\";\\r\\n$fa-var-sort-desc: \\\"\\\\f0dd\\\";\\r\\n$fa-var-sort-down: \\\"\\\\f0dd\\\";\\r\\n$fa-var-sort-numeric-asc: \\\"\\\\f162\\\";\\r\\n$fa-var-sort-numeric-desc: \\\"\\\\f163\\\";\\r\\n$fa-var-sort-up: \\\"\\\\f0de\\\";\\r\\n$fa-var-soundcloud: \\\"\\\\f1be\\\";\\r\\n$fa-var-space-shuttle: \\\"\\\\f197\\\";\\r\\n$fa-var-spinner: \\\"\\\\f110\\\";\\r\\n$fa-var-spoon: \\\"\\\\f1b1\\\";\\r\\n$fa-var-spotify: \\\"\\\\f1bc\\\";\\r\\n$fa-var-square: \\\"\\\\f0c8\\\";\\r\\n$fa-var-square-o: \\\"\\\\f096\\\";\\r\\n$fa-var-stack-exchange: \\\"\\\\f18d\\\";\\r\\n$fa-var-stack-overflow: \\\"\\\\f16c\\\";\\r\\n$fa-var-star: \\\"\\\\f005\\\";\\r\\n$fa-var-star-half: \\\"\\\\f089\\\";\\r\\n$fa-var-star-half-empty: \\\"\\\\f123\\\";\\r\\n$fa-var-star-half-full: \\\"\\\\f123\\\";\\r\\n$fa-var-star-half-o: \\\"\\\\f123\\\";\\r\\n$fa-var-star-o: \\\"\\\\f006\\\";\\r\\n$fa-var-steam: \\\"\\\\f1b6\\\";\\r\\n$fa-var-steam-square: \\\"\\\\f1b7\\\";\\r\\n$fa-var-step-backward: \\\"\\\\f048\\\";\\r\\n$fa-var-step-forward: \\\"\\\\f051\\\";\\r\\n$fa-var-stethoscope: \\\"\\\\f0f1\\\";\\r\\n$fa-var-sticky-note: \\\"\\\\f249\\\";\\r\\n$fa-var-sticky-note-o: \\\"\\\\f24a\\\";\\r\\n$fa-var-stop: \\\"\\\\f04d\\\";\\r\\n$fa-var-stop-circle: \\\"\\\\f28d\\\";\\r\\n$fa-var-stop-circle-o: \\\"\\\\f28e\\\";\\r\\n$fa-var-street-view: \\\"\\\\f21d\\\";\\r\\n$fa-var-strikethrough: \\\"\\\\f0cc\\\";\\r\\n$fa-var-stumbleupon: \\\"\\\\f1a4\\\";\\r\\n$fa-var-stumbleupon-circle: \\\"\\\\f1a3\\\";\\r\\n$fa-var-subscript: \\\"\\\\f12c\\\";\\r\\n$fa-var-subway: \\\"\\\\f239\\\";\\r\\n$fa-var-suitcase: \\\"\\\\f0f2\\\";\\r\\n$fa-var-sun-o: \\\"\\\\f185\\\";\\r\\n$fa-var-superscript: \\\"\\\\f12b\\\";\\r\\n$fa-var-support: \\\"\\\\f1cd\\\";\\r\\n$fa-var-table: \\\"\\\\f0ce\\\";\\r\\n$fa-var-tablet: \\\"\\\\f10a\\\";\\r\\n$fa-var-tachometer: \\\"\\\\f0e4\\\";\\r\\n$fa-var-tag: \\\"\\\\f02b\\\";\\r\\n$fa-var-tags: \\\"\\\\f02c\\\";\\r\\n$fa-var-tasks: \\\"\\\\f0ae\\\";\\r\\n$fa-var-taxi: \\\"\\\\f1ba\\\";\\r\\n$fa-var-television: \\\"\\\\f26c\\\";\\r\\n$fa-var-tencent-weibo: \\\"\\\\f1d5\\\";\\r\\n$fa-var-terminal: \\\"\\\\f120\\\";\\r\\n$fa-var-text-height: \\\"\\\\f034\\\";\\r\\n$fa-var-text-width: \\\"\\\\f035\\\";\\r\\n$fa-var-th: \\\"\\\\f00a\\\";\\r\\n$fa-var-th-large: \\\"\\\\f009\\\";\\r\\n$fa-var-th-list: \\\"\\\\f00b\\\";\\r\\n$fa-var-thumb-tack: \\\"\\\\f08d\\\";\\r\\n$fa-var-thumbs-down: \\\"\\\\f165\\\";\\r\\n$fa-var-thumbs-o-down: \\\"\\\\f088\\\";\\r\\n$fa-var-thumbs-o-up: \\\"\\\\f087\\\";\\r\\n$fa-var-thumbs-up: \\\"\\\\f164\\\";\\r\\n$fa-var-ticket: \\\"\\\\f145\\\";\\r\\n$fa-var-times: \\\"\\\\f00d\\\";\\r\\n$fa-var-times-circle: \\\"\\\\f057\\\";\\r\\n$fa-var-times-circle-o: \\\"\\\\f05c\\\";\\r\\n$fa-var-tint: \\\"\\\\f043\\\";\\r\\n$fa-var-toggle-down: \\\"\\\\f150\\\";\\r\\n$fa-var-toggle-left: \\\"\\\\f191\\\";\\r\\n$fa-var-toggle-off: \\\"\\\\f204\\\";\\r\\n$fa-var-toggle-on: \\\"\\\\f205\\\";\\r\\n$fa-var-toggle-right: \\\"\\\\f152\\\";\\r\\n$fa-var-toggle-up: \\\"\\\\f151\\\";\\r\\n$fa-var-trademark: \\\"\\\\f25c\\\";\\r\\n$fa-var-train: \\\"\\\\f238\\\";\\r\\n$fa-var-transgender: \\\"\\\\f224\\\";\\r\\n$fa-var-transgender-alt: \\\"\\\\f225\\\";\\r\\n$fa-var-trash: \\\"\\\\f1f8\\\";\\r\\n$fa-var-trash-o: \\\"\\\\f014\\\";\\r\\n$fa-var-tree: \\\"\\\\f1bb\\\";\\r\\n$fa-var-trello: \\\"\\\\f181\\\";\\r\\n$fa-var-tripadvisor: \\\"\\\\f262\\\";\\r\\n$fa-var-trophy: \\\"\\\\f091\\\";\\r\\n$fa-var-truck: \\\"\\\\f0d1\\\";\\r\\n$fa-var-try: \\\"\\\\f195\\\";\\r\\n$fa-var-tty: \\\"\\\\f1e4\\\";\\r\\n$fa-var-tumblr: \\\"\\\\f173\\\";\\r\\n$fa-var-tumblr-square: \\\"\\\\f174\\\";\\r\\n$fa-var-turkish-lira: \\\"\\\\f195\\\";\\r\\n$fa-var-tv: \\\"\\\\f26c\\\";\\r\\n$fa-var-twitch: \\\"\\\\f1e8\\\";\\r\\n$fa-var-twitter: \\\"\\\\f099\\\";\\r\\n$fa-var-twitter-square: \\\"\\\\f081\\\";\\r\\n$fa-var-umbrella: \\\"\\\\f0e9\\\";\\r\\n$fa-var-underline: \\\"\\\\f0cd\\\";\\r\\n$fa-var-undo: \\\"\\\\f0e2\\\";\\r\\n$fa-var-university: \\\"\\\\f19c\\\";\\r\\n$fa-var-unlink: \\\"\\\\f127\\\";\\r\\n$fa-var-unlock: \\\"\\\\f09c\\\";\\r\\n$fa-var-unlock-alt: \\\"\\\\f13e\\\";\\r\\n$fa-var-unsorted: \\\"\\\\f0dc\\\";\\r\\n$fa-var-upload: \\\"\\\\f093\\\";\\r\\n$fa-var-usb: \\\"\\\\f287\\\";\\r\\n$fa-var-usd: \\\"\\\\f155\\\";\\r\\n$fa-var-user: \\\"\\\\f007\\\";\\r\\n$fa-var-user-md: \\\"\\\\f0f0\\\";\\r\\n$fa-var-user-plus: \\\"\\\\f234\\\";\\r\\n$fa-var-user-secret: \\\"\\\\f21b\\\";\\r\\n$fa-var-user-times: \\\"\\\\f235\\\";\\r\\n$fa-var-users: \\\"\\\\f0c0\\\";\\r\\n$fa-var-venus: \\\"\\\\f221\\\";\\r\\n$fa-var-venus-double: \\\"\\\\f226\\\";\\r\\n$fa-var-venus-mars: \\\"\\\\f228\\\";\\r\\n$fa-var-viacoin: \\\"\\\\f237\\\";\\r\\n$fa-var-video-camera: \\\"\\\\f03d\\\";\\r\\n$fa-var-vimeo: \\\"\\\\f27d\\\";\\r\\n$fa-var-vimeo-square: \\\"\\\\f194\\\";\\r\\n$fa-var-vine: \\\"\\\\f1ca\\\";\\r\\n$fa-var-vk: \\\"\\\\f189\\\";\\r\\n$fa-var-volume-down: \\\"\\\\f027\\\";\\r\\n$fa-var-volume-off: \\\"\\\\f026\\\";\\r\\n$fa-var-volume-up: \\\"\\\\f028\\\";\\r\\n$fa-var-warning: \\\"\\\\f071\\\";\\r\\n$fa-var-wechat: \\\"\\\\f1d7\\\";\\r\\n$fa-var-weibo: \\\"\\\\f18a\\\";\\r\\n$fa-var-weixin: \\\"\\\\f1d7\\\";\\r\\n$fa-var-whatsapp: \\\"\\\\f232\\\";\\r\\n$fa-var-wheelchair: \\\"\\\\f193\\\";\\r\\n$fa-var-wifi: \\\"\\\\f1eb\\\";\\r\\n$fa-var-wikipedia-w: \\\"\\\\f266\\\";\\r\\n$fa-var-windows: \\\"\\\\f17a\\\";\\r\\n$fa-var-won: \\\"\\\\f159\\\";\\r\\n$fa-var-wordpress: \\\"\\\\f19a\\\";\\r\\n$fa-var-wrench: \\\"\\\\f0ad\\\";\\r\\n$fa-var-xing: \\\"\\\\f168\\\";\\r\\n$fa-var-xing-square: \\\"\\\\f169\\\";\\r\\n$fa-var-y-combinator: \\\"\\\\f23b\\\";\\r\\n$fa-var-y-combinator-square: \\\"\\\\f1d4\\\";\\r\\n$fa-var-yahoo: \\\"\\\\f19e\\\";\\r\\n$fa-var-yc: \\\"\\\\f23b\\\";\\r\\n$fa-var-yc-square: \\\"\\\\f1d4\\\";\\r\\n$fa-var-yelp: \\\"\\\\f1e9\\\";\\r\\n$fa-var-yen: \\\"\\\\f157\\\";\\r\\n$fa-var-youtube: \\\"\\\\f167\\\";\\r\\n$fa-var-youtube-play: \\\"\\\\f16a\\\";\\r\\n$fa-var-youtube-square: \\\"\\\\f166\\\";\\r\\n\",\"// Bordered & Pulled\\r\\n// -------------------------\\r\\n\\r\\n.#{$fa-css-prefix}-border {\\r\\n  padding: .2em .25em .15em;\\r\\n  border: solid .08em $fa-border-color;\\r\\n  border-radius: .1em;\\r\\n}\\r\\n\\r\\n.#{$fa-css-prefix}-pull-left { float: left; }\\r\\n.#{$fa-css-prefix}-pull-right { float: right; }\\r\\n\\r\\n.#{$fa-css-prefix} {\\r\\n  &.#{$fa-css-prefix}-pull-left { margin-right: .3em; }\\r\\n  &.#{$fa-css-prefix}-pull-right { margin-left: .3em; }\\r\\n}\\r\\n\\r\\n/* Deprecated as of 4.4.0 */\\r\\n.pull-right { float: right; }\\r\\n.pull-left { float: left; }\\r\\n\\r\\n.#{$fa-css-prefix} {\\r\\n  &.pull-left { margin-right: .3em; }\\r\\n  &.pull-right { margin-left: .3em; }\\r\\n}\\r\\n\",\"// Spinning Icons\\r\\n// --------------------------\\r\\n\\r\\n.#{$fa-css-prefix}-spin {\\r\\n  -webkit-animation: fa-spin 2s infinite linear;\\r\\n          animation: fa-spin 2s infinite linear;\\r\\n}\\r\\n\\r\\n.#{$fa-css-prefix}-pulse {\\r\\n  -webkit-animation: fa-spin 1s infinite steps(8);\\r\\n          animation: fa-spin 1s infinite steps(8);\\r\\n}\\r\\n\\r\\n@-webkit-keyframes fa-spin {\\r\\n  0% {\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: rotate(359deg);\\r\\n            transform: rotate(359deg);\\r\\n  }\\r\\n}\\r\\n\\r\\n@keyframes fa-spin {\\r\\n  0% {\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: rotate(359deg);\\r\\n            transform: rotate(359deg);\\r\\n  }\\r\\n}\\r\\n\",\"// Rotated & Flipped Icons\\r\\n// -------------------------\\r\\n\\r\\n.#{$fa-css-prefix}-rotate-90  { @include fa-icon-rotate(90deg, 1);  }\\r\\n.#{$fa-css-prefix}-rotate-180 { @include fa-icon-rotate(180deg, 2); }\\r\\n.#{$fa-css-prefix}-rotate-270 { @include fa-icon-rotate(270deg, 3); }\\r\\n\\r\\n.#{$fa-css-prefix}-flip-horizontal { @include fa-icon-flip(-1, 1, 0); }\\r\\n.#{$fa-css-prefix}-flip-vertical   { @include fa-icon-flip(1, -1, 2); }\\r\\n\\r\\n// Hook for IE8-9\\r\\n// -------------------------\\r\\n\\r\\n:root .#{$fa-css-prefix}-rotate-90,\\r\\n:root .#{$fa-css-prefix}-rotate-180,\\r\\n:root .#{$fa-css-prefix}-rotate-270,\\r\\n:root .#{$fa-css-prefix}-flip-horizontal,\\r\\n:root .#{$fa-css-prefix}-flip-vertical {\\r\\n  filter: none;\\r\\n}\\r\\n\",\"// Mixins\\r\\n// --------------------------\\r\\n\\r\\n@mixin fa-icon() {\\r\\n  display: inline-block;\\r\\n  font: normal normal normal #{$fa-font-size-base}/#{$fa-line-height-base} FontAwesome; // shortening font declaration\\r\\n  font-size: inherit; // can't have font-size inherit on line above, so need to override\\r\\n  text-rendering: auto; // optimizelegibility throws things off #1094\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n\\r\\n}\\r\\n\\r\\n@mixin fa-icon-rotate($degrees, $rotation) {\\r\\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});\\r\\n  -webkit-transform: rotate($degrees);\\r\\n      -ms-transform: rotate($degrees);\\r\\n          transform: rotate($degrees);\\r\\n}\\r\\n\\r\\n@mixin fa-icon-flip($horiz, $vert, $rotation) {\\r\\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});\\r\\n  -webkit-transform: scale($horiz, $vert);\\r\\n      -ms-transform: scale($horiz, $vert);\\r\\n          transform: scale($horiz, $vert);\\r\\n}\\r\\n\",\"// Stacked Icons\\r\\n// -------------------------\\r\\n\\r\\n.#{$fa-css-prefix}-stack {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  width: 2em;\\r\\n  height: 2em;\\r\\n  line-height: 2em;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n.#{$fa-css-prefix}-stack-1x, .#{$fa-css-prefix}-stack-2x {\\r\\n  position: absolute;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  text-align: center;\\r\\n}\\r\\n.#{$fa-css-prefix}-stack-1x { line-height: inherit; }\\r\\n.#{$fa-css-prefix}-stack-2x { font-size: 2em; }\\r\\n.#{$fa-css-prefix}-inverse { color: $fa-inverse; }\\r\\n\",\"/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen\\r\\n   readers do not read off random characters that represent icons */\\r\\n\\r\\n.#{$fa-css-prefix}-glass:before { content: $fa-var-glass; }\\r\\n.#{$fa-css-prefix}-music:before { content: $fa-var-music; }\\r\\n.#{$fa-css-prefix}-search:before { content: $fa-var-search; }\\r\\n.#{$fa-css-prefix}-envelope-o:before { content: $fa-var-envelope-o; }\\r\\n.#{$fa-css-prefix}-heart:before { content: $fa-var-heart; }\\r\\n.#{$fa-css-prefix}-star:before { content: $fa-var-star; }\\r\\n.#{$fa-css-prefix}-star-o:before { content: $fa-var-star-o; }\\r\\n.#{$fa-css-prefix}-user:before { content: $fa-var-user; }\\r\\n.#{$fa-css-prefix}-film:before { content: $fa-var-film; }\\r\\n.#{$fa-css-prefix}-th-large:before { content: $fa-var-th-large; }\\r\\n.#{$fa-css-prefix}-th:before { content: $fa-var-th; }\\r\\n.#{$fa-css-prefix}-th-list:before { content: $fa-var-th-list; }\\r\\n.#{$fa-css-prefix}-check:before { content: $fa-var-check; }\\r\\n.#{$fa-css-prefix}-remove:before,\\r\\n.#{$fa-css-prefix}-close:before,\\r\\n.#{$fa-css-prefix}-times:before { content: $fa-var-times; }\\r\\n.#{$fa-css-prefix}-search-plus:before { content: $fa-var-search-plus; }\\r\\n.#{$fa-css-prefix}-search-minus:before { content: $fa-var-search-minus; }\\r\\n.#{$fa-css-prefix}-power-off:before { content: $fa-var-power-off; }\\r\\n.#{$fa-css-prefix}-signal:before { content: $fa-var-signal; }\\r\\n.#{$fa-css-prefix}-gear:before,\\r\\n.#{$fa-css-prefix}-cog:before { content: $fa-var-cog; }\\r\\n.#{$fa-css-prefix}-trash-o:before { content: $fa-var-trash-o; }\\r\\n.#{$fa-css-prefix}-home:before { content: $fa-var-home; }\\r\\n.#{$fa-css-prefix}-file-o:before { content: $fa-var-file-o; }\\r\\n.#{$fa-css-prefix}-clock-o:before { content: $fa-var-clock-o; }\\r\\n.#{$fa-css-prefix}-road:before { content: $fa-var-road; }\\r\\n.#{$fa-css-prefix}-download:before { content: $fa-var-download; }\\r\\n.#{$fa-css-prefix}-arrow-circle-o-down:before { content: $fa-var-arrow-circle-o-down; }\\r\\n.#{$fa-css-prefix}-arrow-circle-o-up:before { content: $fa-var-arrow-circle-o-up; }\\r\\n.#{$fa-css-prefix}-inbox:before { content: $fa-var-inbox; }\\r\\n.#{$fa-css-prefix}-play-circle-o:before { content: $fa-var-play-circle-o; }\\r\\n.#{$fa-css-prefix}-rotate-right:before,\\r\\n.#{$fa-css-prefix}-repeat:before { content: $fa-var-repeat; }\\r\\n.#{$fa-css-prefix}-refresh:before { content: $fa-var-refresh; }\\r\\n.#{$fa-css-prefix}-list-alt:before { content: $fa-var-list-alt; }\\r\\n.#{$fa-css-prefix}-lock:before { content: $fa-var-lock; }\\r\\n.#{$fa-css-prefix}-flag:before { content: $fa-var-flag; }\\r\\n.#{$fa-css-prefix}-headphones:before { content: $fa-var-headphones; }\\r\\n.#{$fa-css-prefix}-volume-off:before { content: $fa-var-volume-off; }\\r\\n.#{$fa-css-prefix}-volume-down:before { content: $fa-var-volume-down; }\\r\\n.#{$fa-css-prefix}-volume-up:before { content: $fa-var-volume-up; }\\r\\n.#{$fa-css-prefix}-qrcode:before { content: $fa-var-qrcode; }\\r\\n.#{$fa-css-prefix}-barcode:before { content: $fa-var-barcode; }\\r\\n.#{$fa-css-prefix}-tag:before { content: $fa-var-tag; }\\r\\n.#{$fa-css-prefix}-tags:before { content: $fa-var-tags; }\\r\\n.#{$fa-css-prefix}-book:before { content: $fa-var-book; }\\r\\n.#{$fa-css-prefix}-bookmark:before { content: $fa-var-bookmark; }\\r\\n.#{$fa-css-prefix}-print:before { content: $fa-var-print; }\\r\\n.#{$fa-css-prefix}-camera:before { content: $fa-var-camera; }\\r\\n.#{$fa-css-prefix}-font:before { content: $fa-var-font; }\\r\\n.#{$fa-css-prefix}-bold:before { content: $fa-var-bold; }\\r\\n.#{$fa-css-prefix}-italic:before { content: $fa-var-italic; }\\r\\n.#{$fa-css-prefix}-text-height:before { content: $fa-var-text-height; }\\r\\n.#{$fa-css-prefix}-text-width:before { content: $fa-var-text-width; }\\r\\n.#{$fa-css-prefix}-align-left:before { content: $fa-var-align-left; }\\r\\n.#{$fa-css-prefix}-align-center:before { content: $fa-var-align-center; }\\r\\n.#{$fa-css-prefix}-align-right:before { content: $fa-var-align-right; }\\r\\n.#{$fa-css-prefix}-align-justify:before { content: $fa-var-align-justify; }\\r\\n.#{$fa-css-prefix}-list:before { content: $fa-var-list; }\\r\\n.#{$fa-css-prefix}-dedent:before,\\r\\n.#{$fa-css-prefix}-outdent:before { content: $fa-var-outdent; }\\r\\n.#{$fa-css-prefix}-indent:before { content: $fa-var-indent; }\\r\\n.#{$fa-css-prefix}-video-camera:before { content: $fa-var-video-camera; }\\r\\n.#{$fa-css-prefix}-photo:before,\\r\\n.#{$fa-css-prefix}-image:before,\\r\\n.#{$fa-css-prefix}-picture-o:before { content: $fa-var-picture-o; }\\r\\n.#{$fa-css-prefix}-pencil:before { content: $fa-var-pencil; }\\r\\n.#{$fa-css-prefix}-map-marker:before { content: $fa-var-map-marker; }\\r\\n.#{$fa-css-prefix}-adjust:before { content: $fa-var-adjust; }\\r\\n.#{$fa-css-prefix}-tint:before { content: $fa-var-tint; }\\r\\n.#{$fa-css-prefix}-edit:before,\\r\\n.#{$fa-css-prefix}-pencil-square-o:before { content: $fa-var-pencil-square-o; }\\r\\n.#{$fa-css-prefix}-share-square-o:before { content: $fa-var-share-square-o; }\\r\\n.#{$fa-css-prefix}-check-square-o:before { content: $fa-var-check-square-o; }\\r\\n.#{$fa-css-prefix}-arrows:before { content: $fa-var-arrows; }\\r\\n.#{$fa-css-prefix}-step-backward:before { content: $fa-var-step-backward; }\\r\\n.#{$fa-css-prefix}-fast-backward:before { content: $fa-var-fast-backward; }\\r\\n.#{$fa-css-prefix}-backward:before { content: $fa-var-backward; }\\r\\n.#{$fa-css-prefix}-play:before { content: $fa-var-play; }\\r\\n.#{$fa-css-prefix}-pause:before { content: $fa-var-pause; }\\r\\n.#{$fa-css-prefix}-stop:before { content: $fa-var-stop; }\\r\\n.#{$fa-css-prefix}-forward:before { content: $fa-var-forward; }\\r\\n.#{$fa-css-prefix}-fast-forward:before { content: $fa-var-fast-forward; }\\r\\n.#{$fa-css-prefix}-step-forward:before { content: $fa-var-step-forward; }\\r\\n.#{$fa-css-prefix}-eject:before { content: $fa-var-eject; }\\r\\n.#{$fa-css-prefix}-chevron-left:before { content: $fa-var-chevron-left; }\\r\\n.#{$fa-css-prefix}-chevron-right:before { content: $fa-var-chevron-right; }\\r\\n.#{$fa-css-prefix}-plus-circle:before { content: $fa-var-plus-circle; }\\r\\n.#{$fa-css-prefix}-minus-circle:before { content: $fa-var-minus-circle; }\\r\\n.#{$fa-css-prefix}-times-circle:before { content: $fa-var-times-circle; }\\r\\n.#{$fa-css-prefix}-check-circle:before { content: $fa-var-check-circle; }\\r\\n.#{$fa-css-prefix}-question-circle:before { content: $fa-var-question-circle; }\\r\\n.#{$fa-css-prefix}-info-circle:before { content: $fa-var-info-circle; }\\r\\n.#{$fa-css-prefix}-crosshairs:before { content: $fa-var-crosshairs; }\\r\\n.#{$fa-css-prefix}-times-circle-o:before { content: $fa-var-times-circle-o; }\\r\\n.#{$fa-css-prefix}-check-circle-o:before { content: $fa-var-check-circle-o; }\\r\\n.#{$fa-css-prefix}-ban:before { content: $fa-var-ban; }\\r\\n.#{$fa-css-prefix}-arrow-left:before { content: $fa-var-arrow-left; }\\r\\n.#{$fa-css-prefix}-arrow-right:before { content: $fa-var-arrow-right; }\\r\\n.#{$fa-css-prefix}-arrow-up:before { content: $fa-var-arrow-up; }\\r\\n.#{$fa-css-prefix}-arrow-down:before { content: $fa-var-arrow-down; }\\r\\n.#{$fa-css-prefix}-mail-forward:before,\\r\\n.#{$fa-css-prefix}-share:before { content: $fa-var-share; }\\r\\n.#{$fa-css-prefix}-expand:before { content: $fa-var-expand; }\\r\\n.#{$fa-css-prefix}-compress:before { content: $fa-var-compress; }\\r\\n.#{$fa-css-prefix}-plus:before { content: $fa-var-plus; }\\r\\n.#{$fa-css-prefix}-minus:before { content: $fa-var-minus; }\\r\\n.#{$fa-css-prefix}-asterisk:before { content: $fa-var-asterisk; }\\r\\n.#{$fa-css-prefix}-exclamation-circle:before { content: $fa-var-exclamation-circle; }\\r\\n.#{$fa-css-prefix}-gift:before { content: $fa-var-gift; }\\r\\n.#{$fa-css-prefix}-leaf:before { content: $fa-var-leaf; }\\r\\n.#{$fa-css-prefix}-fire:before { content: $fa-var-fire; }\\r\\n.#{$fa-css-prefix}-eye:before { content: $fa-var-eye; }\\r\\n.#{$fa-css-prefix}-eye-slash:before { content: $fa-var-eye-slash; }\\r\\n.#{$fa-css-prefix}-warning:before,\\r\\n.#{$fa-css-prefix}-exclamation-triangle:before { content: $fa-var-exclamation-triangle; }\\r\\n.#{$fa-css-prefix}-plane:before { content: $fa-var-plane; }\\r\\n.#{$fa-css-prefix}-calendar:before { content: $fa-var-calendar; }\\r\\n.#{$fa-css-prefix}-random:before { content: $fa-var-random; }\\r\\n.#{$fa-css-prefix}-comment:before { content: $fa-var-comment; }\\r\\n.#{$fa-css-prefix}-magnet:before { content: $fa-var-magnet; }\\r\\n.#{$fa-css-prefix}-chevron-up:before { content: $fa-var-chevron-up; }\\r\\n.#{$fa-css-prefix}-chevron-down:before { content: $fa-var-chevron-down; }\\r\\n.#{$fa-css-prefix}-retweet:before { content: $fa-var-retweet; }\\r\\n.#{$fa-css-prefix}-shopping-cart:before { content: $fa-var-shopping-cart; }\\r\\n.#{$fa-css-prefix}-folder:before { content: $fa-var-folder; }\\r\\n.#{$fa-css-prefix}-folder-open:before { content: $fa-var-folder-open; }\\r\\n.#{$fa-css-prefix}-arrows-v:before { content: $fa-var-arrows-v; }\\r\\n.#{$fa-css-prefix}-arrows-h:before { content: $fa-var-arrows-h; }\\r\\n.#{$fa-css-prefix}-bar-chart-o:before,\\r\\n.#{$fa-css-prefix}-bar-chart:before { content: $fa-var-bar-chart; }\\r\\n.#{$fa-css-prefix}-twitter-square:before { content: $fa-var-twitter-square; }\\r\\n.#{$fa-css-prefix}-facebook-square:before { content: $fa-var-facebook-square; }\\r\\n.#{$fa-css-prefix}-camera-retro:before { content: $fa-var-camera-retro; }\\r\\n.#{$fa-css-prefix}-key:before { content: $fa-var-key; }\\r\\n.#{$fa-css-prefix}-gears:before,\\r\\n.#{$fa-css-prefix}-cogs:before { content: $fa-var-cogs; }\\r\\n.#{$fa-css-prefix}-comments:before { content: $fa-var-comments; }\\r\\n.#{$fa-css-prefix}-thumbs-o-up:before { content: $fa-var-thumbs-o-up; }\\r\\n.#{$fa-css-prefix}-thumbs-o-down:before { content: $fa-var-thumbs-o-down; }\\r\\n.#{$fa-css-prefix}-star-half:before { content: $fa-var-star-half; }\\r\\n.#{$fa-css-prefix}-heart-o:before { content: $fa-var-heart-o; }\\r\\n.#{$fa-css-prefix}-sign-out:before { content: $fa-var-sign-out; }\\r\\n.#{$fa-css-prefix}-linkedin-square:before { content: $fa-var-linkedin-square; }\\r\\n.#{$fa-css-prefix}-thumb-tack:before { content: $fa-var-thumb-tack; }\\r\\n.#{$fa-css-prefix}-external-link:before { content: $fa-var-external-link; }\\r\\n.#{$fa-css-prefix}-sign-in:before { content: $fa-var-sign-in; }\\r\\n.#{$fa-css-prefix}-trophy:before { content: $fa-var-trophy; }\\r\\n.#{$fa-css-prefix}-github-square:before { content: $fa-var-github-square; }\\r\\n.#{$fa-css-prefix}-upload:before { content: $fa-var-upload; }\\r\\n.#{$fa-css-prefix}-lemon-o:before { content: $fa-var-lemon-o; }\\r\\n.#{$fa-css-prefix}-phone:before { content: $fa-var-phone; }\\r\\n.#{$fa-css-prefix}-square-o:before { content: $fa-var-square-o; }\\r\\n.#{$fa-css-prefix}-bookmark-o:before { content: $fa-var-bookmark-o; }\\r\\n.#{$fa-css-prefix}-phone-square:before { content: $fa-var-phone-square; }\\r\\n.#{$fa-css-prefix}-twitter:before { content: $fa-var-twitter; }\\r\\n.#{$fa-css-prefix}-facebook-f:before,\\r\\n.#{$fa-css-prefix}-facebook:before { content: $fa-var-facebook; }\\r\\n.#{$fa-css-prefix}-github:before { content: $fa-var-github; }\\r\\n.#{$fa-css-prefix}-unlock:before { content: $fa-var-unlock; }\\r\\n.#{$fa-css-prefix}-credit-card:before { content: $fa-var-credit-card; }\\r\\n.#{$fa-css-prefix}-feed:before,\\r\\n.#{$fa-css-prefix}-rss:before { content: $fa-var-rss; }\\r\\n.#{$fa-css-prefix}-hdd-o:before { content: $fa-var-hdd-o; }\\r\\n.#{$fa-css-prefix}-bullhorn:before { content: $fa-var-bullhorn; }\\r\\n.#{$fa-css-prefix}-bell:before { content: $fa-var-bell; }\\r\\n.#{$fa-css-prefix}-certificate:before { content: $fa-var-certificate; }\\r\\n.#{$fa-css-prefix}-hand-o-right:before { content: $fa-var-hand-o-right; }\\r\\n.#{$fa-css-prefix}-hand-o-left:before { content: $fa-var-hand-o-left; }\\r\\n.#{$fa-css-prefix}-hand-o-up:before { content: $fa-var-hand-o-up; }\\r\\n.#{$fa-css-prefix}-hand-o-down:before { content: $fa-var-hand-o-down; }\\r\\n.#{$fa-css-prefix}-arrow-circle-left:before { content: $fa-var-arrow-circle-left; }\\r\\n.#{$fa-css-prefix}-arrow-circle-right:before { content: $fa-var-arrow-circle-right; }\\r\\n.#{$fa-css-prefix}-arrow-circle-up:before { content: $fa-var-arrow-circle-up; }\\r\\n.#{$fa-css-prefix}-arrow-circle-down:before { content: $fa-var-arrow-circle-down; }\\r\\n.#{$fa-css-prefix}-globe:before { content: $fa-var-globe; }\\r\\n.#{$fa-css-prefix}-wrench:before { content: $fa-var-wrench; }\\r\\n.#{$fa-css-prefix}-tasks:before { content: $fa-var-tasks; }\\r\\n.#{$fa-css-prefix}-filter:before { content: $fa-var-filter; }\\r\\n.#{$fa-css-prefix}-briefcase:before { content: $fa-var-briefcase; }\\r\\n.#{$fa-css-prefix}-arrows-alt:before { content: $fa-var-arrows-alt; }\\r\\n.#{$fa-css-prefix}-group:before,\\r\\n.#{$fa-css-prefix}-users:before { content: $fa-var-users; }\\r\\n.#{$fa-css-prefix}-chain:before,\\r\\n.#{$fa-css-prefix}-link:before { content: $fa-var-link; }\\r\\n.#{$fa-css-prefix}-cloud:before { content: $fa-var-cloud; }\\r\\n.#{$fa-css-prefix}-flask:before { content: $fa-var-flask; }\\r\\n.#{$fa-css-prefix}-cut:before,\\r\\n.#{$fa-css-prefix}-scissors:before { content: $fa-var-scissors; }\\r\\n.#{$fa-css-prefix}-copy:before,\\r\\n.#{$fa-css-prefix}-files-o:before { content: $fa-var-files-o; }\\r\\n.#{$fa-css-prefix}-paperclip:before { content: $fa-var-paperclip; }\\r\\n.#{$fa-css-prefix}-save:before,\\r\\n.#{$fa-css-prefix}-floppy-o:before { content: $fa-var-floppy-o; }\\r\\n.#{$fa-css-prefix}-square:before { content: $fa-var-square; }\\r\\n.#{$fa-css-prefix}-navicon:before,\\r\\n.#{$fa-css-prefix}-reorder:before,\\r\\n.#{$fa-css-prefix}-bars:before { content: $fa-var-bars; }\\r\\n.#{$fa-css-prefix}-list-ul:before { content: $fa-var-list-ul; }\\r\\n.#{$fa-css-prefix}-list-ol:before { content: $fa-var-list-ol; }\\r\\n.#{$fa-css-prefix}-strikethrough:before { content: $fa-var-strikethrough; }\\r\\n.#{$fa-css-prefix}-underline:before { content: $fa-var-underline; }\\r\\n.#{$fa-css-prefix}-table:before { content: $fa-var-table; }\\r\\n.#{$fa-css-prefix}-magic:before { content: $fa-var-magic; }\\r\\n.#{$fa-css-prefix}-truck:before { content: $fa-var-truck; }\\r\\n.#{$fa-css-prefix}-pinterest:before { content: $fa-var-pinterest; }\\r\\n.#{$fa-css-prefix}-pinterest-square:before { content: $fa-var-pinterest-square; }\\r\\n.#{$fa-css-prefix}-google-plus-square:before { content: $fa-var-google-plus-square; }\\r\\n.#{$fa-css-prefix}-google-plus:before { content: $fa-var-google-plus; }\\r\\n.#{$fa-css-prefix}-money:before { content: $fa-var-money; }\\r\\n.#{$fa-css-prefix}-caret-down:before { content: $fa-var-caret-down; }\\r\\n.#{$fa-css-prefix}-caret-up:before { content: $fa-var-caret-up; }\\r\\n.#{$fa-css-prefix}-caret-left:before { content: $fa-var-caret-left; }\\r\\n.#{$fa-css-prefix}-caret-right:before { content: $fa-var-caret-right; }\\r\\n.#{$fa-css-prefix}-columns:before { content: $fa-var-columns; }\\r\\n.#{$fa-css-prefix}-unsorted:before,\\r\\n.#{$fa-css-prefix}-sort:before { content: $fa-var-sort; }\\r\\n.#{$fa-css-prefix}-sort-down:before,\\r\\n.#{$fa-css-prefix}-sort-desc:before { content: $fa-var-sort-desc; }\\r\\n.#{$fa-css-prefix}-sort-up:before,\\r\\n.#{$fa-css-prefix}-sort-asc:before { content: $fa-var-sort-asc; }\\r\\n.#{$fa-css-prefix}-envelope:before { content: $fa-var-envelope; }\\r\\n.#{$fa-css-prefix}-linkedin:before { content: $fa-var-linkedin; }\\r\\n.#{$fa-css-prefix}-rotate-left:before,\\r\\n.#{$fa-css-prefix}-undo:before { content: $fa-var-undo; }\\r\\n.#{$fa-css-prefix}-legal:before,\\r\\n.#{$fa-css-prefix}-gavel:before { content: $fa-var-gavel; }\\r\\n.#{$fa-css-prefix}-dashboard:before,\\r\\n.#{$fa-css-prefix}-tachometer:before { content: $fa-var-tachometer; }\\r\\n.#{$fa-css-prefix}-comment-o:before { content: $fa-var-comment-o; }\\r\\n.#{$fa-css-prefix}-comments-o:before { content: $fa-var-comments-o; }\\r\\n.#{$fa-css-prefix}-flash:before,\\r\\n.#{$fa-css-prefix}-bolt:before { content: $fa-var-bolt; }\\r\\n.#{$fa-css-prefix}-sitemap:before { content: $fa-var-sitemap; }\\r\\n.#{$fa-css-prefix}-umbrella:before { content: $fa-var-umbrella; }\\r\\n.#{$fa-css-prefix}-paste:before,\\r\\n.#{$fa-css-prefix}-clipboard:before { content: $fa-var-clipboard; }\\r\\n.#{$fa-css-prefix}-lightbulb-o:before { content: $fa-var-lightbulb-o; }\\r\\n.#{$fa-css-prefix}-exchange:before { content: $fa-var-exchange; }\\r\\n.#{$fa-css-prefix}-cloud-download:before { content: $fa-var-cloud-download; }\\r\\n.#{$fa-css-prefix}-cloud-upload:before { content: $fa-var-cloud-upload; }\\r\\n.#{$fa-css-prefix}-user-md:before { content: $fa-var-user-md; }\\r\\n.#{$fa-css-prefix}-stethoscope:before { content: $fa-var-stethoscope; }\\r\\n.#{$fa-css-prefix}-suitcase:before { content: $fa-var-suitcase; }\\r\\n.#{$fa-css-prefix}-bell-o:before { content: $fa-var-bell-o; }\\r\\n.#{$fa-css-prefix}-coffee:before { content: $fa-var-coffee; }\\r\\n.#{$fa-css-prefix}-cutlery:before { content: $fa-var-cutlery; }\\r\\n.#{$fa-css-prefix}-file-text-o:before { content: $fa-var-file-text-o; }\\r\\n.#{$fa-css-prefix}-building-o:before { content: $fa-var-building-o; }\\r\\n.#{$fa-css-prefix}-hospital-o:before { content: $fa-var-hospital-o; }\\r\\n.#{$fa-css-prefix}-ambulance:before { content: $fa-var-ambulance; }\\r\\n.#{$fa-css-prefix}-medkit:before { content: $fa-var-medkit; }\\r\\n.#{$fa-css-prefix}-fighter-jet:before { content: $fa-var-fighter-jet; }\\r\\n.#{$fa-css-prefix}-beer:before { content: $fa-var-beer; }\\r\\n.#{$fa-css-prefix}-h-square:before { content: $fa-var-h-square; }\\r\\n.#{$fa-css-prefix}-plus-square:before { content: $fa-var-plus-square; }\\r\\n.#{$fa-css-prefix}-angle-double-left:before { content: $fa-var-angle-double-left; }\\r\\n.#{$fa-css-prefix}-angle-double-right:before { content: $fa-var-angle-double-right; }\\r\\n.#{$fa-css-prefix}-angle-double-up:before { content: $fa-var-angle-double-up; }\\r\\n.#{$fa-css-prefix}-angle-double-down:before { content: $fa-var-angle-double-down; }\\r\\n.#{$fa-css-prefix}-angle-left:before { content: $fa-var-angle-left; }\\r\\n.#{$fa-css-prefix}-angle-right:before { content: $fa-var-angle-right; }\\r\\n.#{$fa-css-prefix}-angle-up:before { content: $fa-var-angle-up; }\\r\\n.#{$fa-css-prefix}-angle-down:before { content: $fa-var-angle-down; }\\r\\n.#{$fa-css-prefix}-desktop:before { content: $fa-var-desktop; }\\r\\n.#{$fa-css-prefix}-laptop:before { content: $fa-var-laptop; }\\r\\n.#{$fa-css-prefix}-tablet:before { content: $fa-var-tablet; }\\r\\n.#{$fa-css-prefix}-mobile-phone:before,\\r\\n.#{$fa-css-prefix}-mobile:before { content: $fa-var-mobile; }\\r\\n.#{$fa-css-prefix}-circle-o:before { content: $fa-var-circle-o; }\\r\\n.#{$fa-css-prefix}-quote-left:before { content: $fa-var-quote-left; }\\r\\n.#{$fa-css-prefix}-quote-right:before { content: $fa-var-quote-right; }\\r\\n.#{$fa-css-prefix}-spinner:before { content: $fa-var-spinner; }\\r\\n.#{$fa-css-prefix}-circle:before { content: $fa-var-circle; }\\r\\n.#{$fa-css-prefix}-mail-reply:before,\\r\\n.#{$fa-css-prefix}-reply:before { content: $fa-var-reply; }\\r\\n.#{$fa-css-prefix}-github-alt:before { content: $fa-var-github-alt; }\\r\\n.#{$fa-css-prefix}-folder-o:before { content: $fa-var-folder-o; }\\r\\n.#{$fa-css-prefix}-folder-open-o:before { content: $fa-var-folder-open-o; }\\r\\n.#{$fa-css-prefix}-smile-o:before { content: $fa-var-smile-o; }\\r\\n.#{$fa-css-prefix}-frown-o:before { content: $fa-var-frown-o; }\\r\\n.#{$fa-css-prefix}-meh-o:before { content: $fa-var-meh-o; }\\r\\n.#{$fa-css-prefix}-gamepad:before { content: $fa-var-gamepad; }\\r\\n.#{$fa-css-prefix}-keyboard-o:before { content: $fa-var-keyboard-o; }\\r\\n.#{$fa-css-prefix}-flag-o:before { content: $fa-var-flag-o; }\\r\\n.#{$fa-css-prefix}-flag-checkered:before { content: $fa-var-flag-checkered; }\\r\\n.#{$fa-css-prefix}-terminal:before { content: $fa-var-terminal; }\\r\\n.#{$fa-css-prefix}-code:before { content: $fa-var-code; }\\r\\n.#{$fa-css-prefix}-mail-reply-all:before,\\r\\n.#{$fa-css-prefix}-reply-all:before { content: $fa-var-reply-all; }\\r\\n.#{$fa-css-prefix}-star-half-empty:before,\\r\\n.#{$fa-css-prefix}-star-half-full:before,\\r\\n.#{$fa-css-prefix}-star-half-o:before { content: $fa-var-star-half-o; }\\r\\n.#{$fa-css-prefix}-location-arrow:before { content: $fa-var-location-arrow; }\\r\\n.#{$fa-css-prefix}-crop:before { content: $fa-var-crop; }\\r\\n.#{$fa-css-prefix}-code-fork:before { content: $fa-var-code-fork; }\\r\\n.#{$fa-css-prefix}-unlink:before,\\r\\n.#{$fa-css-prefix}-chain-broken:before { content: $fa-var-chain-broken; }\\r\\n.#{$fa-css-prefix}-question:before { content: $fa-var-question; }\\r\\n.#{$fa-css-prefix}-info:before { content: $fa-var-info; }\\r\\n.#{$fa-css-prefix}-exclamation:before { content: $fa-var-exclamation; }\\r\\n.#{$fa-css-prefix}-superscript:before { content: $fa-var-superscript; }\\r\\n.#{$fa-css-prefix}-subscript:before { content: $fa-var-subscript; }\\r\\n.#{$fa-css-prefix}-eraser:before { content: $fa-var-eraser; }\\r\\n.#{$fa-css-prefix}-puzzle-piece:before { content: $fa-var-puzzle-piece; }\\r\\n.#{$fa-css-prefix}-microphone:before { content: $fa-var-microphone; }\\r\\n.#{$fa-css-prefix}-microphone-slash:before { content: $fa-var-microphone-slash; }\\r\\n.#{$fa-css-prefix}-shield:before { content: $fa-var-shield; }\\r\\n.#{$fa-css-prefix}-calendar-o:before { content: $fa-var-calendar-o; }\\r\\n.#{$fa-css-prefix}-fire-extinguisher:before { content: $fa-var-fire-extinguisher; }\\r\\n.#{$fa-css-prefix}-rocket:before { content: $fa-var-rocket; }\\r\\n.#{$fa-css-prefix}-maxcdn:before { content: $fa-var-maxcdn; }\\r\\n.#{$fa-css-prefix}-chevron-circle-left:before { content: $fa-var-chevron-circle-left; }\\r\\n.#{$fa-css-prefix}-chevron-circle-right:before { content: $fa-var-chevron-circle-right; }\\r\\n.#{$fa-css-prefix}-chevron-circle-up:before { content: $fa-var-chevron-circle-up; }\\r\\n.#{$fa-css-prefix}-chevron-circle-down:before { content: $fa-var-chevron-circle-down; }\\r\\n.#{$fa-css-prefix}-html5:before { content: $fa-var-html5; }\\r\\n.#{$fa-css-prefix}-css3:before { content: $fa-var-css3; }\\r\\n.#{$fa-css-prefix}-anchor:before { content: $fa-var-anchor; }\\r\\n.#{$fa-css-prefix}-unlock-alt:before { content: $fa-var-unlock-alt; }\\r\\n.#{$fa-css-prefix}-bullseye:before { content: $fa-var-bullseye; }\\r\\n.#{$fa-css-prefix}-ellipsis-h:before { content: $fa-var-ellipsis-h; }\\r\\n.#{$fa-css-prefix}-ellipsis-v:before { content: $fa-var-ellipsis-v; }\\r\\n.#{$fa-css-prefix}-rss-square:before { content: $fa-var-rss-square; }\\r\\n.#{$fa-css-prefix}-play-circle:before { content: $fa-var-play-circle; }\\r\\n.#{$fa-css-prefix}-ticket:before { content: $fa-var-ticket; }\\r\\n.#{$fa-css-prefix}-minus-square:before { content: $fa-var-minus-square; }\\r\\n.#{$fa-css-prefix}-minus-square-o:before { content: $fa-var-minus-square-o; }\\r\\n.#{$fa-css-prefix}-level-up:before { content: $fa-var-level-up; }\\r\\n.#{$fa-css-prefix}-level-down:before { content: $fa-var-level-down; }\\r\\n.#{$fa-css-prefix}-check-square:before { content: $fa-var-check-square; }\\r\\n.#{$fa-css-prefix}-pencil-square:before { content: $fa-var-pencil-square; }\\r\\n.#{$fa-css-prefix}-external-link-square:before { content: $fa-var-external-link-square; }\\r\\n.#{$fa-css-prefix}-share-square:before { content: $fa-var-share-square; }\\r\\n.#{$fa-css-prefix}-compass:before { content: $fa-var-compass; }\\r\\n.#{$fa-css-prefix}-toggle-down:before,\\r\\n.#{$fa-css-prefix}-caret-square-o-down:before { content: $fa-var-caret-square-o-down; }\\r\\n.#{$fa-css-prefix}-toggle-up:before,\\r\\n.#{$fa-css-prefix}-caret-square-o-up:before { content: $fa-var-caret-square-o-up; }\\r\\n.#{$fa-css-prefix}-toggle-right:before,\\r\\n.#{$fa-css-prefix}-caret-square-o-right:before { content: $fa-var-caret-square-o-right; }\\r\\n.#{$fa-css-prefix}-euro:before,\\r\\n.#{$fa-css-prefix}-eur:before { content: $fa-var-eur; }\\r\\n.#{$fa-css-prefix}-gbp:before { content: $fa-var-gbp; }\\r\\n.#{$fa-css-prefix}-dollar:before,\\r\\n.#{$fa-css-prefix}-usd:before { content: $fa-var-usd; }\\r\\n.#{$fa-css-prefix}-rupee:before,\\r\\n.#{$fa-css-prefix}-inr:before { content: $fa-var-inr; }\\r\\n.#{$fa-css-prefix}-cny:before,\\r\\n.#{$fa-css-prefix}-rmb:before,\\r\\n.#{$fa-css-prefix}-yen:before,\\r\\n.#{$fa-css-prefix}-jpy:before { content: $fa-var-jpy; }\\r\\n.#{$fa-css-prefix}-ruble:before,\\r\\n.#{$fa-css-prefix}-rouble:before,\\r\\n.#{$fa-css-prefix}-rub:before { content: $fa-var-rub; }\\r\\n.#{$fa-css-prefix}-won:before,\\r\\n.#{$fa-css-prefix}-krw:before { content: $fa-var-krw; }\\r\\n.#{$fa-css-prefix}-bitcoin:before,\\r\\n.#{$fa-css-prefix}-btc:before { content: $fa-var-btc; }\\r\\n.#{$fa-css-prefix}-file:before { content: $fa-var-file; }\\r\\n.#{$fa-css-prefix}-file-text:before { content: $fa-var-file-text; }\\r\\n.#{$fa-css-prefix}-sort-alpha-asc:before { content: $fa-var-sort-alpha-asc; }\\r\\n.#{$fa-css-prefix}-sort-alpha-desc:before { content: $fa-var-sort-alpha-desc; }\\r\\n.#{$fa-css-prefix}-sort-amount-asc:before { content: $fa-var-sort-amount-asc; }\\r\\n.#{$fa-css-prefix}-sort-amount-desc:before { content: $fa-var-sort-amount-desc; }\\r\\n.#{$fa-css-prefix}-sort-numeric-asc:before { content: $fa-var-sort-numeric-asc; }\\r\\n.#{$fa-css-prefix}-sort-numeric-desc:before { content: $fa-var-sort-numeric-desc; }\\r\\n.#{$fa-css-prefix}-thumbs-up:before { content: $fa-var-thumbs-up; }\\r\\n.#{$fa-css-prefix}-thumbs-down:before { content: $fa-var-thumbs-down; }\\r\\n.#{$fa-css-prefix}-youtube-square:before { content: $fa-var-youtube-square; }\\r\\n.#{$fa-css-prefix}-youtube:before { content: $fa-var-youtube; }\\r\\n.#{$fa-css-prefix}-xing:before { content: $fa-var-xing; }\\r\\n.#{$fa-css-prefix}-xing-square:before { content: $fa-var-xing-square; }\\r\\n.#{$fa-css-prefix}-youtube-play:before { content: $fa-var-youtube-play; }\\r\\n.#{$fa-css-prefix}-dropbox:before { content: $fa-var-dropbox; }\\r\\n.#{$fa-css-prefix}-stack-overflow:before { content: $fa-var-stack-overflow; }\\r\\n.#{$fa-css-prefix}-instagram:before { content: $fa-var-instagram; }\\r\\n.#{$fa-css-prefix}-flickr:before { content: $fa-var-flickr; }\\r\\n.#{$fa-css-prefix}-adn:before { content: $fa-var-adn; }\\r\\n.#{$fa-css-prefix}-bitbucket:before { content: $fa-var-bitbucket; }\\r\\n.#{$fa-css-prefix}-bitbucket-square:before { content: $fa-var-bitbucket-square; }\\r\\n.#{$fa-css-prefix}-tumblr:before { content: $fa-var-tumblr; }\\r\\n.#{$fa-css-prefix}-tumblr-square:before { content: $fa-var-tumblr-square; }\\r\\n.#{$fa-css-prefix}-long-arrow-down:before { content: $fa-var-long-arrow-down; }\\r\\n.#{$fa-css-prefix}-long-arrow-up:before { content: $fa-var-long-arrow-up; }\\r\\n.#{$fa-css-prefix}-long-arrow-left:before { content: $fa-var-long-arrow-left; }\\r\\n.#{$fa-css-prefix}-long-arrow-right:before { content: $fa-var-long-arrow-right; }\\r\\n.#{$fa-css-prefix}-apple:before { content: $fa-var-apple; }\\r\\n.#{$fa-css-prefix}-windows:before { content: $fa-var-windows; }\\r\\n.#{$fa-css-prefix}-android:before { content: $fa-var-android; }\\r\\n.#{$fa-css-prefix}-linux:before { content: $fa-var-linux; }\\r\\n.#{$fa-css-prefix}-dribbble:before { content: $fa-var-dribbble; }\\r\\n.#{$fa-css-prefix}-skype:before { content: $fa-var-skype; }\\r\\n.#{$fa-css-prefix}-foursquare:before { content: $fa-var-foursquare; }\\r\\n.#{$fa-css-prefix}-trello:before { content: $fa-var-trello; }\\r\\n.#{$fa-css-prefix}-female:before { content: $fa-var-female; }\\r\\n.#{$fa-css-prefix}-male:before { content: $fa-var-male; }\\r\\n.#{$fa-css-prefix}-gittip:before,\\r\\n.#{$fa-css-prefix}-gratipay:before { content: $fa-var-gratipay; }\\r\\n.#{$fa-css-prefix}-sun-o:before { content: $fa-var-sun-o; }\\r\\n.#{$fa-css-prefix}-moon-o:before { content: $fa-var-moon-o; }\\r\\n.#{$fa-css-prefix}-archive:before { content: $fa-var-archive; }\\r\\n.#{$fa-css-prefix}-bug:before { content: $fa-var-bug; }\\r\\n.#{$fa-css-prefix}-vk:before { content: $fa-var-vk; }\\r\\n.#{$fa-css-prefix}-weibo:before { content: $fa-var-weibo; }\\r\\n.#{$fa-css-prefix}-renren:before { content: $fa-var-renren; }\\r\\n.#{$fa-css-prefix}-pagelines:before { content: $fa-var-pagelines; }\\r\\n.#{$fa-css-prefix}-stack-exchange:before { content: $fa-var-stack-exchange; }\\r\\n.#{$fa-css-prefix}-arrow-circle-o-right:before { content: $fa-var-arrow-circle-o-right; }\\r\\n.#{$fa-css-prefix}-arrow-circle-o-left:before { content: $fa-var-arrow-circle-o-left; }\\r\\n.#{$fa-css-prefix}-toggle-left:before,\\r\\n.#{$fa-css-prefix}-caret-square-o-left:before { content: $fa-var-caret-square-o-left; }\\r\\n.#{$fa-css-prefix}-dot-circle-o:before { content: $fa-var-dot-circle-o; }\\r\\n.#{$fa-css-prefix}-wheelchair:before { content: $fa-var-wheelchair; }\\r\\n.#{$fa-css-prefix}-vimeo-square:before { content: $fa-var-vimeo-square; }\\r\\n.#{$fa-css-prefix}-turkish-lira:before,\\r\\n.#{$fa-css-prefix}-try:before { content: $fa-var-try; }\\r\\n.#{$fa-css-prefix}-plus-square-o:before { content: $fa-var-plus-square-o; }\\r\\n.#{$fa-css-prefix}-space-shuttle:before { content: $fa-var-space-shuttle; }\\r\\n.#{$fa-css-prefix}-slack:before { content: $fa-var-slack; }\\r\\n.#{$fa-css-prefix}-envelope-square:before { content: $fa-var-envelope-square; }\\r\\n.#{$fa-css-prefix}-wordpress:before { content: $fa-var-wordpress; }\\r\\n.#{$fa-css-prefix}-openid:before { content: $fa-var-openid; }\\r\\n.#{$fa-css-prefix}-institution:before,\\r\\n.#{$fa-css-prefix}-bank:before,\\r\\n.#{$fa-css-prefix}-university:before { content: $fa-var-university; }\\r\\n.#{$fa-css-prefix}-mortar-board:before,\\r\\n.#{$fa-css-prefix}-graduation-cap:before { content: $fa-var-graduation-cap; }\\r\\n.#{$fa-css-prefix}-yahoo:before { content: $fa-var-yahoo; }\\r\\n.#{$fa-css-prefix}-google:before { content: $fa-var-google; }\\r\\n.#{$fa-css-prefix}-reddit:before { content: $fa-var-reddit; }\\r\\n.#{$fa-css-prefix}-reddit-square:before { content: $fa-var-reddit-square; }\\r\\n.#{$fa-css-prefix}-stumbleupon-circle:before { content: $fa-var-stumbleupon-circle; }\\r\\n.#{$fa-css-prefix}-stumbleupon:before { content: $fa-var-stumbleupon; }\\r\\n.#{$fa-css-prefix}-delicious:before { content: $fa-var-delicious; }\\r\\n.#{$fa-css-prefix}-digg:before { content: $fa-var-digg; }\\r\\n.#{$fa-css-prefix}-pied-piper:before { content: $fa-var-pied-piper; }\\r\\n.#{$fa-css-prefix}-pied-piper-alt:before { content: $fa-var-pied-piper-alt; }\\r\\n.#{$fa-css-prefix}-drupal:before { content: $fa-var-drupal; }\\r\\n.#{$fa-css-prefix}-joomla:before { content: $fa-var-joomla; }\\r\\n.#{$fa-css-prefix}-language:before { content: $fa-var-language; }\\r\\n.#{$fa-css-prefix}-fax:before { content: $fa-var-fax; }\\r\\n.#{$fa-css-prefix}-building:before { content: $fa-var-building; }\\r\\n.#{$fa-css-prefix}-child:before { content: $fa-var-child; }\\r\\n.#{$fa-css-prefix}-paw:before { content: $fa-var-paw; }\\r\\n.#{$fa-css-prefix}-spoon:before { content: $fa-var-spoon; }\\r\\n.#{$fa-css-prefix}-cube:before { content: $fa-var-cube; }\\r\\n.#{$fa-css-prefix}-cubes:before { content: $fa-var-cubes; }\\r\\n.#{$fa-css-prefix}-behance:before { content: $fa-var-behance; }\\r\\n.#{$fa-css-prefix}-behance-square:before { content: $fa-var-behance-square; }\\r\\n.#{$fa-css-prefix}-steam:before { content: $fa-var-steam; }\\r\\n.#{$fa-css-prefix}-steam-square:before { content: $fa-var-steam-square; }\\r\\n.#{$fa-css-prefix}-recycle:before { content: $fa-var-recycle; }\\r\\n.#{$fa-css-prefix}-automobile:before,\\r\\n.#{$fa-css-prefix}-car:before { content: $fa-var-car; }\\r\\n.#{$fa-css-prefix}-cab:before,\\r\\n.#{$fa-css-prefix}-taxi:before { content: $fa-var-taxi; }\\r\\n.#{$fa-css-prefix}-tree:before { content: $fa-var-tree; }\\r\\n.#{$fa-css-prefix}-spotify:before { content: $fa-var-spotify; }\\r\\n.#{$fa-css-prefix}-deviantart:before { content: $fa-var-deviantart; }\\r\\n.#{$fa-css-prefix}-soundcloud:before { content: $fa-var-soundcloud; }\\r\\n.#{$fa-css-prefix}-database:before { content: $fa-var-database; }\\r\\n.#{$fa-css-prefix}-file-pdf-o:before { content: $fa-var-file-pdf-o; }\\r\\n.#{$fa-css-prefix}-file-word-o:before { content: $fa-var-file-word-o; }\\r\\n.#{$fa-css-prefix}-file-excel-o:before { content: $fa-var-file-excel-o; }\\r\\n.#{$fa-css-prefix}-file-powerpoint-o:before { content: $fa-var-file-powerpoint-o; }\\r\\n.#{$fa-css-prefix}-file-photo-o:before,\\r\\n.#{$fa-css-prefix}-file-picture-o:before,\\r\\n.#{$fa-css-prefix}-file-image-o:before { content: $fa-var-file-image-o; }\\r\\n.#{$fa-css-prefix}-file-zip-o:before,\\r\\n.#{$fa-css-prefix}-file-archive-o:before { content: $fa-var-file-archive-o; }\\r\\n.#{$fa-css-prefix}-file-sound-o:before,\\r\\n.#{$fa-css-prefix}-file-audio-o:before { content: $fa-var-file-audio-o; }\\r\\n.#{$fa-css-prefix}-file-movie-o:before,\\r\\n.#{$fa-css-prefix}-file-video-o:before { content: $fa-var-file-video-o; }\\r\\n.#{$fa-css-prefix}-file-code-o:before { content: $fa-var-file-code-o; }\\r\\n.#{$fa-css-prefix}-vine:before { content: $fa-var-vine; }\\r\\n.#{$fa-css-prefix}-codepen:before { content: $fa-var-codepen; }\\r\\n.#{$fa-css-prefix}-jsfiddle:before { content: $fa-var-jsfiddle; }\\r\\n.#{$fa-css-prefix}-life-bouy:before,\\r\\n.#{$fa-css-prefix}-life-buoy:before,\\r\\n.#{$fa-css-prefix}-life-saver:before,\\r\\n.#{$fa-css-prefix}-support:before,\\r\\n.#{$fa-css-prefix}-life-ring:before { content: $fa-var-life-ring; }\\r\\n.#{$fa-css-prefix}-circle-o-notch:before { content: $fa-var-circle-o-notch; }\\r\\n.#{$fa-css-prefix}-ra:before,\\r\\n.#{$fa-css-prefix}-rebel:before { content: $fa-var-rebel; }\\r\\n.#{$fa-css-prefix}-ge:before,\\r\\n.#{$fa-css-prefix}-empire:before { content: $fa-var-empire; }\\r\\n.#{$fa-css-prefix}-git-square:before { content: $fa-var-git-square; }\\r\\n.#{$fa-css-prefix}-git:before { content: $fa-var-git; }\\r\\n.#{$fa-css-prefix}-y-combinator-square:before,\\r\\n.#{$fa-css-prefix}-yc-square:before,\\r\\n.#{$fa-css-prefix}-hacker-news:before { content: $fa-var-hacker-news; }\\r\\n.#{$fa-css-prefix}-tencent-weibo:before { content: $fa-var-tencent-weibo; }\\r\\n.#{$fa-css-prefix}-qq:before { content: $fa-var-qq; }\\r\\n.#{$fa-css-prefix}-wechat:before,\\r\\n.#{$fa-css-prefix}-weixin:before { content: $fa-var-weixin; }\\r\\n.#{$fa-css-prefix}-send:before,\\r\\n.#{$fa-css-prefix}-paper-plane:before { content: $fa-var-paper-plane; }\\r\\n.#{$fa-css-prefix}-send-o:before,\\r\\n.#{$fa-css-prefix}-paper-plane-o:before { content: $fa-var-paper-plane-o; }\\r\\n.#{$fa-css-prefix}-history:before { content: $fa-var-history; }\\r\\n.#{$fa-css-prefix}-circle-thin:before { content: $fa-var-circle-thin; }\\r\\n.#{$fa-css-prefix}-header:before { content: $fa-var-header; }\\r\\n.#{$fa-css-prefix}-paragraph:before { content: $fa-var-paragraph; }\\r\\n.#{$fa-css-prefix}-sliders:before { content: $fa-var-sliders; }\\r\\n.#{$fa-css-prefix}-share-alt:before { content: $fa-var-share-alt; }\\r\\n.#{$fa-css-prefix}-share-alt-square:before { content: $fa-var-share-alt-square; }\\r\\n.#{$fa-css-prefix}-bomb:before { content: $fa-var-bomb; }\\r\\n.#{$fa-css-prefix}-soccer-ball-o:before,\\r\\n.#{$fa-css-prefix}-futbol-o:before { content: $fa-var-futbol-o; }\\r\\n.#{$fa-css-prefix}-tty:before { content: $fa-var-tty; }\\r\\n.#{$fa-css-prefix}-binoculars:before { content: $fa-var-binoculars; }\\r\\n.#{$fa-css-prefix}-plug:before { content: $fa-var-plug; }\\r\\n.#{$fa-css-prefix}-slideshare:before { content: $fa-var-slideshare; }\\r\\n.#{$fa-css-prefix}-twitch:before { content: $fa-var-twitch; }\\r\\n.#{$fa-css-prefix}-yelp:before { content: $fa-var-yelp; }\\r\\n.#{$fa-css-prefix}-newspaper-o:before { content: $fa-var-newspaper-o; }\\r\\n.#{$fa-css-prefix}-wifi:before { content: $fa-var-wifi; }\\r\\n.#{$fa-css-prefix}-calculator:before { content: $fa-var-calculator; }\\r\\n.#{$fa-css-prefix}-paypal:before { content: $fa-var-paypal; }\\r\\n.#{$fa-css-prefix}-google-wallet:before { content: $fa-var-google-wallet; }\\r\\n.#{$fa-css-prefix}-cc-visa:before { content: $fa-var-cc-visa; }\\r\\n.#{$fa-css-prefix}-cc-mastercard:before { content: $fa-var-cc-mastercard; }\\r\\n.#{$fa-css-prefix}-cc-discover:before { content: $fa-var-cc-discover; }\\r\\n.#{$fa-css-prefix}-cc-amex:before { content: $fa-var-cc-amex; }\\r\\n.#{$fa-css-prefix}-cc-paypal:before { content: $fa-var-cc-paypal; }\\r\\n.#{$fa-css-prefix}-cc-stripe:before { content: $fa-var-cc-stripe; }\\r\\n.#{$fa-css-prefix}-bell-slash:before { content: $fa-var-bell-slash; }\\r\\n.#{$fa-css-prefix}-bell-slash-o:before { content: $fa-var-bell-slash-o; }\\r\\n.#{$fa-css-prefix}-trash:before { content: $fa-var-trash; }\\r\\n.#{$fa-css-prefix}-copyright:before { content: $fa-var-copyright; }\\r\\n.#{$fa-css-prefix}-at:before { content: $fa-var-at; }\\r\\n.#{$fa-css-prefix}-eyedropper:before { content: $fa-var-eyedropper; }\\r\\n.#{$fa-css-prefix}-paint-brush:before { content: $fa-var-paint-brush; }\\r\\n.#{$fa-css-prefix}-birthday-cake:before { content: $fa-var-birthday-cake; }\\r\\n.#{$fa-css-prefix}-area-chart:before { content: $fa-var-area-chart; }\\r\\n.#{$fa-css-prefix}-pie-chart:before { content: $fa-var-pie-chart; }\\r\\n.#{$fa-css-prefix}-line-chart:before { content: $fa-var-line-chart; }\\r\\n.#{$fa-css-prefix}-lastfm:before { content: $fa-var-lastfm; }\\r\\n.#{$fa-css-prefix}-lastfm-square:before { content: $fa-var-lastfm-square; }\\r\\n.#{$fa-css-prefix}-toggle-off:before { content: $fa-var-toggle-off; }\\r\\n.#{$fa-css-prefix}-toggle-on:before { content: $fa-var-toggle-on; }\\r\\n.#{$fa-css-prefix}-bicycle:before { content: $fa-var-bicycle; }\\r\\n.#{$fa-css-prefix}-bus:before { content: $fa-var-bus; }\\r\\n.#{$fa-css-prefix}-ioxhost:before { content: $fa-var-ioxhost; }\\r\\n.#{$fa-css-prefix}-angellist:before { content: $fa-var-angellist; }\\r\\n.#{$fa-css-prefix}-cc:before { content: $fa-var-cc; }\\r\\n.#{$fa-css-prefix}-shekel:before,\\r\\n.#{$fa-css-prefix}-sheqel:before,\\r\\n.#{$fa-css-prefix}-ils:before { content: $fa-var-ils; }\\r\\n.#{$fa-css-prefix}-meanpath:before { content: $fa-var-meanpath; }\\r\\n.#{$fa-css-prefix}-buysellads:before { content: $fa-var-buysellads; }\\r\\n.#{$fa-css-prefix}-connectdevelop:before { content: $fa-var-connectdevelop; }\\r\\n.#{$fa-css-prefix}-dashcube:before { content: $fa-var-dashcube; }\\r\\n.#{$fa-css-prefix}-forumbee:before { content: $fa-var-forumbee; }\\r\\n.#{$fa-css-prefix}-leanpub:before { content: $fa-var-leanpub; }\\r\\n.#{$fa-css-prefix}-sellsy:before { content: $fa-var-sellsy; }\\r\\n.#{$fa-css-prefix}-shirtsinbulk:before { content: $fa-var-shirtsinbulk; }\\r\\n.#{$fa-css-prefix}-simplybuilt:before { content: $fa-var-simplybuilt; }\\r\\n.#{$fa-css-prefix}-skyatlas:before { content: $fa-var-skyatlas; }\\r\\n.#{$fa-css-prefix}-cart-plus:before { content: $fa-var-cart-plus; }\\r\\n.#{$fa-css-prefix}-cart-arrow-down:before { content: $fa-var-cart-arrow-down; }\\r\\n.#{$fa-css-prefix}-diamond:before { content: $fa-var-diamond; }\\r\\n.#{$fa-css-prefix}-ship:before { content: $fa-var-ship; }\\r\\n.#{$fa-css-prefix}-user-secret:before { content: $fa-var-user-secret; }\\r\\n.#{$fa-css-prefix}-motorcycle:before { content: $fa-var-motorcycle; }\\r\\n.#{$fa-css-prefix}-street-view:before { content: $fa-var-street-view; }\\r\\n.#{$fa-css-prefix}-heartbeat:before { content: $fa-var-heartbeat; }\\r\\n.#{$fa-css-prefix}-venus:before { content: $fa-var-venus; }\\r\\n.#{$fa-css-prefix}-mars:before { content: $fa-var-mars; }\\r\\n.#{$fa-css-prefix}-mercury:before { content: $fa-var-mercury; }\\r\\n.#{$fa-css-prefix}-intersex:before,\\r\\n.#{$fa-css-prefix}-transgender:before { content: $fa-var-transgender; }\\r\\n.#{$fa-css-prefix}-transgender-alt:before { content: $fa-var-transgender-alt; }\\r\\n.#{$fa-css-prefix}-venus-double:before { content: $fa-var-venus-double; }\\r\\n.#{$fa-css-prefix}-mars-double:before { content: $fa-var-mars-double; }\\r\\n.#{$fa-css-prefix}-venus-mars:before { content: $fa-var-venus-mars; }\\r\\n.#{$fa-css-prefix}-mars-stroke:before { content: $fa-var-mars-stroke; }\\r\\n.#{$fa-css-prefix}-mars-stroke-v:before { content: $fa-var-mars-stroke-v; }\\r\\n.#{$fa-css-prefix}-mars-stroke-h:before { content: $fa-var-mars-stroke-h; }\\r\\n.#{$fa-css-prefix}-neuter:before { content: $fa-var-neuter; }\\r\\n.#{$fa-css-prefix}-genderless:before { content: $fa-var-genderless; }\\r\\n.#{$fa-css-prefix}-facebook-official:before { content: $fa-var-facebook-official; }\\r\\n.#{$fa-css-prefix}-pinterest-p:before { content: $fa-var-pinterest-p; }\\r\\n.#{$fa-css-prefix}-whatsapp:before { content: $fa-var-whatsapp; }\\r\\n.#{$fa-css-prefix}-server:before { content: $fa-var-server; }\\r\\n.#{$fa-css-prefix}-user-plus:before { content: $fa-var-user-plus; }\\r\\n.#{$fa-css-prefix}-user-times:before { content: $fa-var-user-times; }\\r\\n.#{$fa-css-prefix}-hotel:before,\\r\\n.#{$fa-css-prefix}-bed:before { content: $fa-var-bed; }\\r\\n.#{$fa-css-prefix}-viacoin:before { content: $fa-var-viacoin; }\\r\\n.#{$fa-css-prefix}-train:before { content: $fa-var-train; }\\r\\n.#{$fa-css-prefix}-subway:before { content: $fa-var-subway; }\\r\\n.#{$fa-css-prefix}-medium:before { content: $fa-var-medium; }\\r\\n.#{$fa-css-prefix}-yc:before,\\r\\n.#{$fa-css-prefix}-y-combinator:before { content: $fa-var-y-combinator; }\\r\\n.#{$fa-css-prefix}-optin-monster:before { content: $fa-var-optin-monster; }\\r\\n.#{$fa-css-prefix}-opencart:before { content: $fa-var-opencart; }\\r\\n.#{$fa-css-prefix}-expeditedssl:before { content: $fa-var-expeditedssl; }\\r\\n.#{$fa-css-prefix}-battery-4:before,\\r\\n.#{$fa-css-prefix}-battery-full:before { content: $fa-var-battery-full; }\\r\\n.#{$fa-css-prefix}-battery-3:before,\\r\\n.#{$fa-css-prefix}-battery-three-quarters:before { content: $fa-var-battery-three-quarters; }\\r\\n.#{$fa-css-prefix}-battery-2:before,\\r\\n.#{$fa-css-prefix}-battery-half:before { content: $fa-var-battery-half; }\\r\\n.#{$fa-css-prefix}-battery-1:before,\\r\\n.#{$fa-css-prefix}-battery-quarter:before { content: $fa-var-battery-quarter; }\\r\\n.#{$fa-css-prefix}-battery-0:before,\\r\\n.#{$fa-css-prefix}-battery-empty:before { content: $fa-var-battery-empty; }\\r\\n.#{$fa-css-prefix}-mouse-pointer:before { content: $fa-var-mouse-pointer; }\\r\\n.#{$fa-css-prefix}-i-cursor:before { content: $fa-var-i-cursor; }\\r\\n.#{$fa-css-prefix}-object-group:before { content: $fa-var-object-group; }\\r\\n.#{$fa-css-prefix}-object-ungroup:before { content: $fa-var-object-ungroup; }\\r\\n.#{$fa-css-prefix}-sticky-note:before { content: $fa-var-sticky-note; }\\r\\n.#{$fa-css-prefix}-sticky-note-o:before { content: $fa-var-sticky-note-o; }\\r\\n.#{$fa-css-prefix}-cc-jcb:before { content: $fa-var-cc-jcb; }\\r\\n.#{$fa-css-prefix}-cc-diners-club:before { content: $fa-var-cc-diners-club; }\\r\\n.#{$fa-css-prefix}-clone:before { content: $fa-var-clone; }\\r\\n.#{$fa-css-prefix}-balance-scale:before { content: $fa-var-balance-scale; }\\r\\n.#{$fa-css-prefix}-hourglass-o:before { content: $fa-var-hourglass-o; }\\r\\n.#{$fa-css-prefix}-hourglass-1:before,\\r\\n.#{$fa-css-prefix}-hourglass-start:before { content: $fa-var-hourglass-start; }\\r\\n.#{$fa-css-prefix}-hourglass-2:before,\\r\\n.#{$fa-css-prefix}-hourglass-half:before { content: $fa-var-hourglass-half; }\\r\\n.#{$fa-css-prefix}-hourglass-3:before,\\r\\n.#{$fa-css-prefix}-hourglass-end:before { content: $fa-var-hourglass-end; }\\r\\n.#{$fa-css-prefix}-hourglass:before { content: $fa-var-hourglass; }\\r\\n.#{$fa-css-prefix}-hand-grab-o:before,\\r\\n.#{$fa-css-prefix}-hand-rock-o:before { content: $fa-var-hand-rock-o; }\\r\\n.#{$fa-css-prefix}-hand-stop-o:before,\\r\\n.#{$fa-css-prefix}-hand-paper-o:before { content: $fa-var-hand-paper-o; }\\r\\n.#{$fa-css-prefix}-hand-scissors-o:before { content: $fa-var-hand-scissors-o; }\\r\\n.#{$fa-css-prefix}-hand-lizard-o:before { content: $fa-var-hand-lizard-o; }\\r\\n.#{$fa-css-prefix}-hand-spock-o:before { content: $fa-var-hand-spock-o; }\\r\\n.#{$fa-css-prefix}-hand-pointer-o:before { content: $fa-var-hand-pointer-o; }\\r\\n.#{$fa-css-prefix}-hand-peace-o:before { content: $fa-var-hand-peace-o; }\\r\\n.#{$fa-css-prefix}-trademark:before { content: $fa-var-trademark; }\\r\\n.#{$fa-css-prefix}-registered:before { content: $fa-var-registered; }\\r\\n.#{$fa-css-prefix}-creative-commons:before { content: $fa-var-creative-commons; }\\r\\n.#{$fa-css-prefix}-gg:before { content: $fa-var-gg; }\\r\\n.#{$fa-css-prefix}-gg-circle:before { content: $fa-var-gg-circle; }\\r\\n.#{$fa-css-prefix}-tripadvisor:before { content: $fa-var-tripadvisor; }\\r\\n.#{$fa-css-prefix}-odnoklassniki:before { content: $fa-var-odnoklassniki; }\\r\\n.#{$fa-css-prefix}-odnoklassniki-square:before { content: $fa-var-odnoklassniki-square; }\\r\\n.#{$fa-css-prefix}-get-pocket:before { content: $fa-var-get-pocket; }\\r\\n.#{$fa-css-prefix}-wikipedia-w:before { content: $fa-var-wikipedia-w; }\\r\\n.#{$fa-css-prefix}-safari:before { content: $fa-var-safari; }\\r\\n.#{$fa-css-prefix}-chrome:before { content: $fa-var-chrome; }\\r\\n.#{$fa-css-prefix}-firefox:before { content: $fa-var-firefox; }\\r\\n.#{$fa-css-prefix}-opera:before { content: $fa-var-opera; }\\r\\n.#{$fa-css-prefix}-internet-explorer:before { content: $fa-var-internet-explorer; }\\r\\n.#{$fa-css-prefix}-tv:before,\\r\\n.#{$fa-css-prefix}-television:before { content: $fa-var-television; }\\r\\n.#{$fa-css-prefix}-contao:before { content: $fa-var-contao; }\\r\\n.#{$fa-css-prefix}-500px:before { content: $fa-var-500px; }\\r\\n.#{$fa-css-prefix}-amazon:before { content: $fa-var-amazon; }\\r\\n.#{$fa-css-prefix}-calendar-plus-o:before { content: $fa-var-calendar-plus-o; }\\r\\n.#{$fa-css-prefix}-calendar-minus-o:before { content: $fa-var-calendar-minus-o; }\\r\\n.#{$fa-css-prefix}-calendar-times-o:before { content: $fa-var-calendar-times-o; }\\r\\n.#{$fa-css-prefix}-calendar-check-o:before { content: $fa-var-calendar-check-o; }\\r\\n.#{$fa-css-prefix}-industry:before { content: $fa-var-industry; }\\r\\n.#{$fa-css-prefix}-map-pin:before { content: $fa-var-map-pin; }\\r\\n.#{$fa-css-prefix}-map-signs:before { content: $fa-var-map-signs; }\\r\\n.#{$fa-css-prefix}-map-o:before { content: $fa-var-map-o; }\\r\\n.#{$fa-css-prefix}-map:before { content: $fa-var-map; }\\r\\n.#{$fa-css-prefix}-commenting:before { content: $fa-var-commenting; }\\r\\n.#{$fa-css-prefix}-commenting-o:before { content: $fa-var-commenting-o; }\\r\\n.#{$fa-css-prefix}-houzz:before { content: $fa-var-houzz; }\\r\\n.#{$fa-css-prefix}-vimeo:before { content: $fa-var-vimeo; }\\r\\n.#{$fa-css-prefix}-black-tie:before { content: $fa-var-black-tie; }\\r\\n.#{$fa-css-prefix}-fonticons:before { content: $fa-var-fonticons; }\\r\\n.#{$fa-css-prefix}-reddit-alien:before { content: $fa-var-reddit-alien; }\\r\\n.#{$fa-css-prefix}-edge:before { content: $fa-var-edge; }\\r\\n.#{$fa-css-prefix}-credit-card-alt:before { content: $fa-var-credit-card-alt; }\\r\\n.#{$fa-css-prefix}-codiepie:before { content: $fa-var-codiepie; }\\r\\n.#{$fa-css-prefix}-modx:before { content: $fa-var-modx; }\\r\\n.#{$fa-css-prefix}-fort-awesome:before { content: $fa-var-fort-awesome; }\\r\\n.#{$fa-css-prefix}-usb:before { content: $fa-var-usb; }\\r\\n.#{$fa-css-prefix}-product-hunt:before { content: $fa-var-product-hunt; }\\r\\n.#{$fa-css-prefix}-mixcloud:before { content: $fa-var-mixcloud; }\\r\\n.#{$fa-css-prefix}-scribd:before { content: $fa-var-scribd; }\\r\\n.#{$fa-css-prefix}-pause-circle:before { content: $fa-var-pause-circle; }\\r\\n.#{$fa-css-prefix}-pause-circle-o:before { content: $fa-var-pause-circle-o; }\\r\\n.#{$fa-css-prefix}-stop-circle:before { content: $fa-var-stop-circle; }\\r\\n.#{$fa-css-prefix}-stop-circle-o:before { content: $fa-var-stop-circle-o; }\\r\\n.#{$fa-css-prefix}-shopping-bag:before { content: $fa-var-shopping-bag; }\\r\\n.#{$fa-css-prefix}-shopping-basket:before { content: $fa-var-shopping-basket; }\\r\\n.#{$fa-css-prefix}-hashtag:before { content: $fa-var-hashtag; }\\r\\n.#{$fa-css-prefix}-bluetooth:before { content: $fa-var-bluetooth; }\\r\\n.#{$fa-css-prefix}-bluetooth-b:before { content: $fa-var-bluetooth-b; }\\r\\n.#{$fa-css-prefix}-percent:before { content: $fa-var-percent; }\\r\\n\",\"/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */\\r\\n\\r\\n/**\\r\\n * 1. Set default font family to sans-serif.\\r\\n * 2. Prevent iOS and IE text size adjust after device orientation change,\\r\\n *    without disabling user zoom.\\r\\n */\\r\\n\\r\\nhtml {\\r\\n  font-family: sans-serif; /* 1 */\\r\\n  text-size-adjust: 100%; /* 2 */\\r\\n}\\r\\n\\r\\n/**\\r\\n * Remove default margin.\\r\\n */\\r\\n\\r\\nbody {\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n/* HTML5 display definitions\\r\\n   ========================================================================== */\\r\\n\\r\\n/**\\r\\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\\r\\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\\r\\n * and Firefox.\\r\\n * Correct `block` display not defined for `main` in IE 11.\\r\\n */\\r\\n\\r\\narticle,\\r\\naside,\\r\\ndetails,\\r\\nfigcaption,\\r\\nfigure,\\r\\nfooter,\\r\\nheader,\\r\\nhgroup,\\r\\nmain,\\r\\nmenu,\\r\\nnav,\\r\\nsection,\\r\\nsummary {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n/**\\r\\n * 1. Correct `inline-block` display not defined in IE 8/9.\\r\\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\\r\\n */\\r\\n\\r\\naudio,\\r\\ncanvas,\\r\\nprogress,\\r\\nvideo {\\r\\n  display: inline-block; /* 1 */\\r\\n  vertical-align: baseline; /* 2 */\\r\\n}\\r\\n\\r\\n/**\\r\\n * Prevent modern browsers from displaying `audio` without controls.\\r\\n * Remove excess height in iOS 5 devices.\\r\\n */\\r\\n\\r\\naudio:not([controls]) {\\r\\n  display: none;\\r\\n  height: 0;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Address `[hidden]` styling not present in IE 8/9/10.\\r\\n * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\\r\\n */\\r\\n\\r\\n[hidden],\\r\\ntemplate {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n/* Links\\r\\n   ========================================================================== */\\r\\n\\r\\n/**\\r\\n * Remove the gray background color from active links in IE 10.\\r\\n */\\r\\n\\r\\na {\\r\\n  background-color: transparent;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Improve readability of focused elements when they are also in an\\r\\n * active/hover state.\\r\\n */\\r\\n\\r\\na:active,\\r\\na:hover {\\r\\n  outline: 0;\\r\\n}\\r\\n\\r\\n/* Text-level semantics\\r\\n   ========================================================================== */\\r\\n\\r\\n/**\\r\\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\\r\\n */\\r\\n\\r\\nabbr[title] {\\r\\n  border-bottom: 1px dotted;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\\r\\n */\\r\\n\\r\\nb,\\r\\nstrong {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Address styling not present in Safari and Chrome.\\r\\n */\\r\\n\\r\\ndfn {\\r\\n  font-style: italic;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Address variable `h1` font-size and margin within `section` and `article`\\r\\n * contexts in Firefox 4+, Safari, and Chrome.\\r\\n */\\r\\n\\r\\nh1 {\\r\\n  font-size: 2em;\\r\\n  margin: 0.67em 0;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Address styling not present in IE 8/9.\\r\\n */\\r\\n\\r\\nmark {\\r\\n  background: #ff0;\\r\\n  color: #000;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Address inconsistent and variable font size in all browsers.\\r\\n */\\r\\n\\r\\nsmall {\\r\\n  font-size: 80%;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\\r\\n */\\r\\n\\r\\nsub,\\r\\nsup {\\r\\n  font-size: 75%;\\r\\n  line-height: 0;\\r\\n  position: relative;\\r\\n  vertical-align: baseline;\\r\\n}\\r\\n\\r\\nsup {\\r\\n  top: -0.5em;\\r\\n}\\r\\n\\r\\nsub {\\r\\n  bottom: -0.25em;\\r\\n}\\r\\n\\r\\n/* Embedded content\\r\\n   ========================================================================== */\\r\\n\\r\\n/**\\r\\n * Remove border when inside `a` element in IE 8/9/10.\\r\\n */\\r\\n\\r\\nimg {\\r\\n  border: 0;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Correct overflow not hidden in IE 9/10/11.\\r\\n */\\r\\n\\r\\nsvg:not(:root) {\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n/* Grouping content\\r\\n   ========================================================================== */\\r\\n\\r\\n/**\\r\\n * Address margin not present in IE 8/9 and Safari.\\r\\n */\\r\\n\\r\\nfigure {\\r\\n  margin: 1em 40px;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Address differences between Firefox and other browsers.\\r\\n */\\r\\n\\r\\nhr {\\r\\n  box-sizing: content-box;\\r\\n  height: 0;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Contain overflow in all browsers.\\r\\n */\\r\\n\\r\\npre {\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Address odd `em`-unit font size rendering in all browsers.\\r\\n */\\r\\n\\r\\ncode,\\r\\nkbd,\\r\\npre,\\r\\nsamp {\\r\\n  font-family: monospace, monospace;\\r\\n  font-size: 1em;\\r\\n}\\r\\n\\r\\n/* Forms\\r\\n   ========================================================================== */\\r\\n\\r\\n/**\\r\\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\\r\\n * styling of `select`, unless a `border` property is set.\\r\\n */\\r\\n\\r\\n/**\\r\\n * 1. Correct color not being inherited.\\r\\n *    Known issue: affects color of disabled elements.\\r\\n * 2. Correct font properties not being inherited.\\r\\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\\r\\n */\\r\\n\\r\\nbutton,\\r\\ninput,\\r\\noptgroup,\\r\\nselect,\\r\\ntextarea {\\r\\n  color: inherit; /* 1 */\\r\\n  font: inherit; /* 2 */\\r\\n  margin: 0; /* 3 */\\r\\n}\\r\\n\\r\\n/**\\r\\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\\r\\n */\\r\\n\\r\\nbutton {\\r\\n  overflow: visible;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\\r\\n * All other form control elements do not inherit `text-transform` values.\\r\\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\\r\\n * Correct `select` style inheritance in Firefox.\\r\\n */\\r\\n\\r\\nbutton,\\r\\nselect {\\r\\n  text-transform: none;\\r\\n}\\r\\n\\r\\n/**\\r\\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\\r\\n *    and `video` controls.\\r\\n * 2. Correct inability to style clickable `input` types in iOS.\\r\\n * 3. Improve usability and consistency of cursor style between image-type\\r\\n *    `input` and others.\\r\\n */\\r\\n\\r\\nbutton,\\r\\nhtml input[type=\\\"button\\\"], /* 1 */\\r\\ninput[type=\\\"reset\\\"],\\r\\ninput[type=\\\"submit\\\"] {\\r\\n  -webkit-appearance: button; /* 2 */\\r\\n  cursor: pointer; /* 3 */\\r\\n}\\r\\n\\r\\n/**\\r\\n * Re-set default cursor for disabled elements.\\r\\n */\\r\\n\\r\\nbutton[disabled],\\r\\nhtml input[disabled] {\\r\\n  cursor: default;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Remove inner padding and border in Firefox 4+.\\r\\n */\\r\\n\\r\\nbutton::-moz-focus-inner,\\r\\ninput::-moz-focus-inner {\\r\\n  border: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\\r\\n * the UA stylesheet.\\r\\n */\\r\\n\\r\\ninput {\\r\\n  line-height: normal;\\r\\n}\\r\\n\\r\\n/**\\r\\n * It's recommended that you don't attempt to style these elements.\\r\\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\\r\\n *\\r\\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\\r\\n * 2. Remove excess padding in IE 8/9/10.\\r\\n */\\r\\n\\r\\ninput[type=\\\"checkbox\\\"],\\r\\ninput[type=\\\"radio\\\"] {\\r\\n  box-sizing: border-box; /* 1 */\\r\\n  padding: 0; /* 2 */\\r\\n}\\r\\n\\r\\n/**\\r\\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\\r\\n * `font-size` values of the `input`, it causes the cursor style of the\\r\\n * decrement button to change from `default` to `text`.\\r\\n */\\r\\n\\r\\ninput[type=\\\"number\\\"]::-webkit-inner-spin-button,\\r\\ninput[type=\\\"number\\\"]::-webkit-outer-spin-button {\\r\\n  height: auto;\\r\\n}\\r\\n\\r\\n/**\\r\\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\\r\\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\\r\\n */\\r\\n\\r\\ninput[type=\\\"search\\\"] {\\r\\n  -webkit-appearance: textfield; /* 1 */\\r\\n  box-sizing: content-box; /* 2 */\\r\\n}\\r\\n\\r\\n/**\\r\\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\\r\\n * Safari (but not Chrome) clips the cancel button when the search input has\\r\\n * padding (and `textfield` appearance).\\r\\n */\\r\\n\\r\\ninput[type=\\\"search\\\"]::-webkit-search-cancel-button,\\r\\ninput[type=\\\"search\\\"]::-webkit-search-decoration {\\r\\n  -webkit-appearance: none;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Define consistent border, margin, and padding.\\r\\n */\\r\\n\\r\\nfieldset {\\r\\n  border: 1px solid #c0c0c0;\\r\\n  margin: 0 2px;\\r\\n  padding: 0.35em 0.625em 0.75em;\\r\\n}\\r\\n\\r\\n/**\\r\\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\\r\\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\\r\\n */\\r\\n\\r\\nlegend {\\r\\n  border: 0; /* 1 */\\r\\n  padding: 0; /* 2 */\\r\\n}\\r\\n\\r\\n/**\\r\\n * Remove default vertical scrollbar in IE 8/9/10/11.\\r\\n */\\r\\n\\r\\ntextarea {\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Don't inherit the `font-weight` (applied by a rule above).\\r\\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\\r\\n */\\r\\n\\r\\noptgroup {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n/* Tables\\r\\n   ========================================================================== */\\r\\n\\r\\n/**\\r\\n * Remove most spacing between table cells.\\r\\n */\\r\\n\\r\\ntable {\\r\\n  border-collapse: collapse;\\r\\n  border-spacing: 0;\\r\\n}\\r\\n\\r\\ntd,\\r\\nth {\\r\\n  padding: 0;\\r\\n}\\r\\n\",\"html {\\r\\n  box-sizing: border-box;\\r\\n  font-size: $gg-font-size-root;\\r\\n}\\r\\n\\r\\n*,\\r\\n*::before,\\r\\n*::after {\\r\\n  box-sizing: inherit;\\r\\n}\\r\\n\\r\\n@at-root {\\r\\n  @viewport {\\r\\n    width: device-width;\\r\\n  }\\r\\n}\\r\\n\\r\\nbody {\\r\\n  //overflow-y: scroll;\\r\\n  background-color: $gg-color-body-background;\\r\\n  color: $gg-color-text;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\n::-webkit-input-placeholder { line-height: normal; }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n#wpadminbar {\\r\\n  @media screen and (max-width: 600px) {\\r\\n    display: none;\\r\\n  }\\r\\n}\\r\\n\",\"// Metrics\\r\\n\\r\\n$gg-sizes: (\\r\\n  margin:                     8px,\\r\\n  padding:                    16px,\\r\\n  border-radius:              2px,\\r\\n  title-left-padding:         72px,\\r\\n  drawer-width:               240px,\\r\\n  icon:                       48px,\\r\\n  header-height-landscape:    48px,\\r\\n  header-height-portrait:     56px,\\r\\n  header-height-desktop:      64px,\\r\\n  header-hidden-offset:       -70px,\\r\\n  button-width:               64px,\\r\\n  button-height:              36px,\\r\\n  badge:                      20px,\\r\\n  article-body:               716px,\\r\\n  article-info-height:        74px,\\r\\n\\r\\n  wp-admin-bar-device:        46px,\\r\\n  wp-admin-bar-desktop:       32px\\r\\n);\\r\\n\\r\\n@function gg-size ($index) {\\r\\n  @return map-get($gg-sizes, $index);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n$gg-breakpoints: (\\r\\n  xsmall:                     600px,\\r\\n  small:                      960px,\\r\\n  medium:                     1280px,\\r\\n  large:                      1600px\\r\\n);\\r\\n\\r\\n@mixin gg-breakpoint($breakpoint) {\\r\\n  @if $breakpoint == base {\\r\\n    @media (max-width: #{map-get($gg-breakpoints, xsmall)}) {\\r\\n      @content;\\r\\n    }\\r\\n  }\\r\\n  @else {\\r\\n    @media (min-width: #{map-get($gg-breakpoints, $breakpoint)}) {\\r\\n      @content;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n// Z Index\\r\\n\\r\\n$gg-z-indexes: (\\r\\n  raised:                     5,\\r\\n  obfuscator:                 9,\\r\\n  drawer:                     10,\\r\\n  popup:                      100,\\r\\n  modal:                      500\\r\\n);\\r\\n\\r\\n@function gg-z ($index) {\\r\\n  @return map-get($gg-z-indexes, $index);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n// Colors\\r\\n\\r\\n$gg-colors-grayscale: (\\r\\n  black:                      #000000,\\r\\n  gray-dark:                  #7f8c8d,\\r\\n  gray:                       #95a5a6,\\r\\n  gray-light:                 #bdc3c7,\\r\\n  gray-lighter:               #ecf0f1,\\r\\n  white:                      #ffffff\\r\\n);\\r\\n\\r\\n$gg-colors: (\\r\\n  gg-sky:                     #7ebbe7,\\r\\n  gg-aqua:                    #2f9b96,\\r\\n  gg-orange:                  #ff5b09,\\r\\n  gg-orange-light:            #f9a704,\\r\\n\\r\\n  md-deep-orange:             #ff5722,\\r\\n  md-orange:                  #ff9800,\\r\\n  md-teal:                    #009688,\\r\\n  md-blue:                    #2196f3,\\r\\n  md-green:                   #4caf50,\\r\\n\\r\\n  md-gray-200:                #eeeeee,\\r\\n  md-gray-500:                #9e9e9e,\\r\\n  md-gray-600:                #757575,\\r\\n  md-gray-800:                #424242\\r\\n);\\r\\n\\r\\n@function gg-color($color) {\\r\\n  @if map-has-key($gg-colors, $color) {\\r\\n    @return map-get($gg-colors, $color);\\r\\n  }\\r\\n  @else if map-has-key($gg-colors-grayscale, $color) {\\r\\n    @return map-get($gg-colors-grayscale, $color);\\r\\n  }\\r\\n}\\r\\n\\r\\n$gg-color-primary:            gg-color(md-deep-orange);\\r\\n$gg-color-body-background:    gg-color(white);\\r\\n\\r\\n$gg-color-border-light:      gg-color(md-gray-200);\\r\\n\\r\\n$gg-color-text:               rgba(gg-color(black), 0.87); //gg-color(md-gray-800);\\r\\n$gg-color-text-light:         gg-color(white);\\r\\n$gg-color-secondary-text:     rgba(gg-color(black), 0.54);\\r\\n$gg-color-secondary-text-light: rgba(gg-color(white), 0.7);\\r\\n$gg-color-muted:              rgba(gg-color(black), 0.38); //gg-color(md-gray-500);\\r\\n$gg-color-muted-light:        rgba(gg-color(white), 0.3);\\r\\n$gg-color-link:               gg-color(md-deep-orange);\\r\\n$gg-color-link-hover:         gg-color(md-orange);\\r\\n\\r\\n$link-color:                  gg-color(md-deep-orange);\\r\\n$link-hover-color:            darken($link-color, 15%);\\r\\n\",\"/**\\r\\n * %gg-shadow-low\\r\\n * %gg-shadow-high\\r\\n * @mixin gg-transition\\r\\n * @mixin gg-menu-list\\r\\n */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n%gg-shadow-low {\\r\\n  box-shadow: 0 0.15em 0.3em 0 rgba(gg-color(black), 0.16),\\r\\n              0 0.15em 0.6em 0 rgba(gg-color(black), 0.12);\\r\\n}\\r\\n%gg-shadow-high {\\r\\n  box-shadow: 0 0.3em 0.8em 0 rgba(gg-color(black), 0.18),\\r\\n              0 0.25em 1em 0 rgba(gg-color(black), 0.15);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n@mixin gg-transition ($properties, $duration : 0.2s) {\\r\\n  transition-property: #{$properties};\\r\\n  will-change: #{$properties};\\r\\n  transition-duration: $duration;\\r\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n@mixin gg-menu-list ($list-padding: 8px 0, $icon-position : right) {\\r\\n  ul {\\r\\n    width: 100%;\\r\\n    margin: 0;\\r\\n    padding: $list-padding;\\r\\n    list-style: none;\\r\\n\\r\\n    @extend %gg-font-body-2-device;\\r\\n\\r\\n    &:not(:last-of-type) {\\r\\n      border-bottom: 1px solid gg-color(md-gray-200);\\r\\n    }\\r\\n\\r\\n    li {\\r\\n      display: block;\\r\\n      margin: 0;\\r\\n      padding: 0;\\r\\n    }\\r\\n    a {\\r\\n      display: flex;\\r\\n      width: 100%;\\r\\n      padding: 0 16px;\\r\\n      color: gg-color(md-gray-800);\\r\\n      line-height: 4.8rem;\\r\\n      &:hover {\\r\\n        color: gg-color(md-gray-800);\\r\\n      }\\r\\n      &:active, &:focus {\\r\\n        color: $gg-color-text;\\r\\n      }\\r\\n\\r\\n      span {\\r\\n        line-height: 4.8rem;\\r\\n      }\\r\\n\\r\\n      @if $icon-position == 'right' {\\r\\n        span:first-child {\\r\\n          flex-grow: 1;\\r\\n        }\\r\\n        span:last-child {\\r\\n          padding-left: 16px;\\r\\n        }\\r\\n      }\\r\\n      @else {\\r\\n        span:first-child {\\r\\n          width: 56px;\\r\\n        }\\r\\n        span:last-child {\\r\\n          flex-grow: 1;\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"\\r\\n/*!\\r\\n * Waves v0.7.4\\r\\n * http://fian.my.id/Waves\\r\\n *\\r\\n * Copyright 2014 Alfiana E. Sibuea and other contributors\\r\\n * Released under the MIT license\\r\\n * https://github.com/fians/Waves/blob/master/LICENSE\\r\\n */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.waves-effect {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  display: inline-block;\\r\\n  overflow: hidden;\\r\\n  user-select: none;\\r\\n  -webkit-tap-highlight-color: transparent;\\r\\n\\r\\n  .waves-ripple {\\r\\n    position: absolute;\\r\\n    border-radius: 50%;\\r\\n    width: 100px;\\r\\n    height: 100px;\\r\\n    margin-top: -50px;\\r\\n    margin-left: -50px;\\r\\n    opacity: 0;\\r\\n    background: radial-gradient(\\r\\n      rgba(0, 0, 0, 0.2) 0,\\r\\n      rgba(0, 0, 0, 0.3) 40%,\\r\\n      rgba(0, 0, 0, 0.4) 50%,\\r\\n      rgba(0, 0, 0, .5) 60%,\\r\\n      rgba(255, 255, 255, 0) 70%\\r\\n    );\\r\\n    transition: all 0.5s ease-out;\\r\\n    transition-property: transform, opacity;\\r\\n    transform: scale(0) translate(0, 0);\\r\\n    pointer-events: none;\\r\\n  }\\r\\n\\r\\n  &.waves-light .waves-ripple {\\r\\n    background: radial-gradient(\\r\\n      rgba(255, 255, 255, 0.2) 0,\\r\\n      rgba(255, 255, 255, 0.3) 40%,\\r\\n      rgba(255, 255, 255, 0.4) 50%,\\r\\n      rgba(255, 255, 255, 0.5) 60%,\\r\\n      rgba(255, 255, 255, 0) 70%\\r\\n    );\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n.waves-button,\\r\\n.waves-circle {\\r\\n  transform: translateZ(0);\\r\\n  -webkit-mask-image: -webkit-radial-gradient(circle, #ffffff 100%, #000000 100%);\\r\\n}\\r\\n\\r\\n.waves-circle {\\r\\n  border-radius: 50%;\\r\\n}\\r\\n\",\"/* perfect-scrollbar v0.6.8 */\\r\\n.ps-container {\\r\\n  -ms-touch-action: none;\\r\\n  overflow: hidden !important; }\\r\\n  .ps-container.ps-active-x > .ps-scrollbar-x-rail,\\r\\n  .ps-container.ps-active-y > .ps-scrollbar-y-rail {\\r\\n    display: block; }\\r\\n  .ps-container.ps-in-scrolling {\\r\\n    pointer-events: none; }\\r\\n    .ps-container.ps-in-scrolling.ps-x > .ps-scrollbar-x-rail {\\r\\n      background-color: #eee;\\r\\n      opacity: 0.9; }\\r\\n      .ps-container.ps-in-scrolling.ps-x > .ps-scrollbar-x-rail > .ps-scrollbar-x {\\r\\n        background-color: #999; }\\r\\n    .ps-container.ps-in-scrolling.ps-y > .ps-scrollbar-y-rail {\\r\\n      background-color: #eee;\\r\\n      opacity: 0.9; }\\r\\n      .ps-container.ps-in-scrolling.ps-y > .ps-scrollbar-y-rail > .ps-scrollbar-y {\\r\\n        background-color: #999; }\\r\\n  .ps-container > .ps-scrollbar-x-rail {\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    /* please don't change 'position' */\\r\\n    -webkit-border-radius: 4px;\\r\\n    -moz-border-radius: 4px;\\r\\n    -ms-border-radius: 4px;\\r\\n    border-radius: 4px;\\r\\n    opacity: 0;\\r\\n    -webkit-transition: background-color 0.2s linear, opacity 0.2s linear;\\r\\n    -moz-transition: background-color 0.2s linear, opacity 0.2s linear;\\r\\n    -o-transition: background-color 0.2s linear, opacity 0.2s linear;\\r\\n    transition: background-color 0.2s linear, opacity 0.2s linear;\\r\\n    bottom: 3px;\\r\\n    /* there must be 'bottom' for ps-scrollbar-x-rail */\\r\\n    height: 8px; }\\r\\n    .ps-container > .ps-scrollbar-x-rail > .ps-scrollbar-x {\\r\\n      position: absolute;\\r\\n      /* please don't change 'position' */\\r\\n      background-color: #aaa;\\r\\n      -webkit-border-radius: 4px;\\r\\n      -moz-border-radius: 4px;\\r\\n      -ms-border-radius: 4px;\\r\\n      border-radius: 4px;\\r\\n      -webkit-transition: background-color 0.2s linear;\\r\\n      -moz-transition: background-color 0.2s linear;\\r\\n      -o-transition: background-color 0.2s linear;\\r\\n      transition: background-color 0.2s linear;\\r\\n      bottom: 0;\\r\\n      /* there must be 'bottom' for ps-scrollbar-x */\\r\\n      height: 8px; }\\r\\n  .ps-container > .ps-scrollbar-y-rail {\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    /* please don't change 'position' */\\r\\n    -webkit-border-radius: 4px;\\r\\n    -moz-border-radius: 4px;\\r\\n    -ms-border-radius: 4px;\\r\\n    border-radius: 4px;\\r\\n    opacity: 0;\\r\\n    -webkit-transition: background-color 0.2s linear, opacity 0.2s linear;\\r\\n    -moz-transition: background-color 0.2s linear, opacity 0.2s linear;\\r\\n    -o-transition: background-color 0.2s linear, opacity 0.2s linear;\\r\\n    transition: background-color 0.2s linear, opacity 0.2s linear;\\r\\n    right: 3px;\\r\\n    /* there must be 'right' for ps-scrollbar-y-rail */\\r\\n    width: 8px; }\\r\\n    .ps-container > .ps-scrollbar-y-rail > .ps-scrollbar-y {\\r\\n      position: absolute;\\r\\n      /* please don't change 'position' */\\r\\n      background-color: #aaa;\\r\\n      -webkit-border-radius: 4px;\\r\\n      -moz-border-radius: 4px;\\r\\n      -ms-border-radius: 4px;\\r\\n      border-radius: 4px;\\r\\n      -webkit-transition: background-color 0.2s linear;\\r\\n      -moz-transition: background-color 0.2s linear;\\r\\n      -o-transition: background-color 0.2s linear;\\r\\n      transition: background-color 0.2s linear;\\r\\n      right: 0;\\r\\n      /* there must be 'right' for ps-scrollbar-y */\\r\\n      width: 8px; }\\r\\n  .ps-container:hover.ps-in-scrolling {\\r\\n    pointer-events: none; }\\r\\n    .ps-container:hover.ps-in-scrolling.ps-x > .ps-scrollbar-x-rail {\\r\\n      background-color: #eee;\\r\\n      opacity: 0.9; }\\r\\n      .ps-container:hover.ps-in-scrolling.ps-x > .ps-scrollbar-x-rail > .ps-scrollbar-x {\\r\\n        background-color: #999; }\\r\\n    .ps-container:hover.ps-in-scrolling.ps-y > .ps-scrollbar-y-rail {\\r\\n      background-color: #eee;\\r\\n      opacity: 0.9; }\\r\\n      .ps-container:hover.ps-in-scrolling.ps-y > .ps-scrollbar-y-rail > .ps-scrollbar-y {\\r\\n        background-color: #999; }\\r\\n  .ps-container:hover > .ps-scrollbar-x-rail,\\r\\n  .ps-container:hover > .ps-scrollbar-y-rail {\\r\\n    opacity: 0.6; }\\r\\n  .ps-container:hover > .ps-scrollbar-x-rail:hover {\\r\\n    background-color: #eee;\\r\\n    opacity: 0.9; }\\r\\n    .ps-container:hover > .ps-scrollbar-x-rail:hover > .ps-scrollbar-x {\\r\\n      background-color: #999; }\\r\\n  .ps-container:hover > .ps-scrollbar-y-rail:hover {\\r\\n    background-color: #eee;\\r\\n    opacity: 0.9; }\\r\\n    .ps-container:hover > .ps-scrollbar-y-rail:hover > .ps-scrollbar-y {\\r\\n      background-color: #999; }\\r\\n\",\"/**\\r\\n * .gg-layout\\r\\n */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-layout {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  position: relative;\\r\\n  width: 100%;\\r\\n  min-height: 100vh;\\r\\n  padding-left: 0;\\r\\n  -webkit-overflow-scrolling: touch;\\r\\n\\r\\n  @include gg-transition('padding-left');\\r\\n\\r\\n  @include gg-breakpoint(medium) {\\r\\n    padding-left: gg-size(drawer-width);\\r\\n  }\\r\\n\\r\\n  @media screen and (max-width: 600px) {\\r\\n    margin-top: - gg-size(wp-admin-bar-device);\\r\\n  }\\r\\n}\\r\\n\",\"/**\\r\\n * .gg-obfuscator\\r\\n * body.is-obfuscated\\r\\n */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-obfuscator {\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  min-height: 100%;\\r\\n  z-index: gg-z(obfuscator);\\r\\n  visibility: hidden;\\r\\n\\r\\n  background-color: transparent;\\r\\n\\r\\n  @include gg-transition('visibility, background-color');\\r\\n\\r\\n  @include gg-breakpoint(medium) {\\r\\n    display: none;\\r\\n  }\\r\\n\\r\\n  &.is-visible {\\r\\n    background-color: rgba(0, 0, 0, 0.5);\\r\\n    visibility: visible;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nbody.is-obfuscated {\\r\\n  //position: fixed;\\r\\n  //width: 100%;\\r\\n  overflow: hidden;\\r\\n\\r\\n  @include gg-breakpoint(medium) {\\r\\n    overflow: auto;\\r\\n  }\\r\\n}\\r\\n\",\"/**\\r\\n * %gg-icon\\r\\n * .gg-icon-flat\\r\\n * .gg-icon-flat-light\\r\\n */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n%gg-icon {\\r\\n  @extend .fa;\\r\\n  display: inline-block;\\r\\n  width: gg-size(icon);\\r\\n  height: gg-size(icon);\\r\\n  margin: gg-size(padding) / 4;\\r\\n  padding: 0;\\r\\n  overflow: hidden;\\r\\n  border-radius: 50%;\\r\\n  line-height: gg-size(icon);\\r\\n  text-align: center;\\r\\n  @include gg-transition('background-color');\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-icon-flat,\\r\\n.gg-icon-flat-light {\\r\\n  @extend %gg-icon;\\r\\n  &:hover {\\r\\n    background-color: rgba(gg-color(md-gray-500), 0.2);\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n// ICONS\\r\\n\\r\\n.gg-drawer-toggle {\\r\\n  @extend .fa-bars;\\r\\n}\\r\\n\\r\\n.gg-appbar .gg-searchbar-toggle {\\r\\n  @extend .fa-search;\\r\\n}\\r\\n.gg-searchbar .gg-searchbar-toggle {\\r\\n  @extend .fa-arrow-left;\\r\\n}\\r\\n.gg-searchbar-cancel {\\r\\n  @extend .fa-times;\\r\\n}\\r\\n\\r\\n.gg-appbar-menu-toggle {\\r\\n  @extend .fa-share;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.gg-icon-chevron {\\r\\n  @extend .fa;\\r\\n  @extend .fa-chevron-up;\\r\\n  transform: rotate(0deg);\\r\\n  @include gg-transition('transform');\\r\\n  &.is-visible {\\r\\n    transform: rotate(180deg);\\r\\n  }\\r\\n}\\r\\n\\r\\n.gg-icon-comments {\\r\\n  @extend .fa;\\r\\n  @extend .fa-gavel;\\r\\n}\\r\\n\\r\\n.gg-icon-tags {\\r\\n  @extend .fa-tags;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-icon-facebook {\\r\\n  @extend .fa;\\r\\n  @extend .fa-facebook-official;\\r\\n  @extend .fa-lg;\\r\\n}\\r\\n\\r\\n.gg-icon-twitter {\\r\\n  @extend .fa;\\r\\n  @extend .fa-twitter;\\r\\n  @extend .fa-lg;\\r\\n}\\r\\n\",\"/**\\r\\n * .gg-badge\\r\\n */\\r\\n\\r\\n\\r\\n\\r\\n.gg-badge {\\r\\n  position: absolute;\\r\\n  top: gg-size(margin) / 3;\\r\\n  right: gg-size(margin) / 3;\\r\\n  top: 0;\\r\\n  right: 0;\\r\\n  display: block;\\r\\n  width: gg-size(badge);\\r\\n  height: gg-size(badge);\\r\\n  z-index: 10;\\r\\n  border: 2px solid $gg-color-body-background;\\r\\n  border-radius: 50%;\\r\\n  background-color: $gg-color-link;\\r\\n  color: $gg-color-body-background;\\r\\n  font-size: 1.0rem;\\r\\n  line-height: gg-size(badge) - 4px;\\r\\n  text-align: center;\\r\\n}\\r\\n\",\"/**\\r\\n * .gg-drawer\\r\\n */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.gg-drawer {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  flex-wrap: nowrap;\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  z-index: gg-z(drawer);\\r\\n  overflow: visible;\\r\\n  overflow-y: auto;\\r\\n\\r\\n  width: gg-size(drawer-width);\\r\\n  height: 100%;\\r\\n  min-height: 100vh;\\r\\n  padding: 0;\\r\\n\\r\\n  border-right: 1px solid gg-color(gray-lighter);\\r\\n  background: $gg-color-body-background;\\r\\n  @extend %gg-shadow-low;\\r\\n\\r\\n  //transform: translateX(- gg-size(drawer-width) - 10px);\\r\\n  transform-style: preserve-3d;\\r\\n\\r\\n  @media (max-width: #{map-get($gg-breakpoints, medium)}) {\\r\\n    transform: translateX(- gg-size(drawer-width) - 10px);\\r\\n  }\\r\\n\\r\\n  @include gg-transition('transform');\\r\\n\\r\\n  &.is-visible {\\r\\n    transform: translateX(0);\\r\\n  }\\r\\n\\r\\n  @include gg-menu-list($icon-position : left);\\r\\n\\r\\n  .admin-bar & {\\r\\n    @media screen and (min-width: 600px) {\\r\\n      padding-top: gg-size(wp-admin-bar-device);\\r\\n    }\\r\\n    @media screen and (min-width: 783px) {\\r\\n      padding-top: gg-size(wp-admin-bar-desktop);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 42 */
/***/ function(module, exports) {

	eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzP2RhMDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0Esd0NBQXdDLGdCQUFnQjtBQUN4RCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI0Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXHJcbiovXHJcbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XHJcblx0dmFyIGxpc3QgPSBbXTtcclxuXHJcblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xyXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcclxuXHRcdHZhciByZXN1bHQgPSBbXTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpdGVtID0gdGhpc1tpXTtcclxuXHRcdFx0aWYoaXRlbVsyXSkge1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoKFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgaXRlbVsxXSArIFwifVwiKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXN1bHQucHVzaChpdGVtWzFdKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJlc3VsdC5qb2luKFwiXCIpO1xyXG5cdH07XHJcblxyXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XHJcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xyXG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXHJcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcclxuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xyXG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXHJcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xyXG5cdFx0fVxyXG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XHJcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcclxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcclxuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cclxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcclxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcclxuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XHJcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcclxuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xyXG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9O1xyXG5cdHJldHVybiBsaXN0O1xyXG59O1xyXG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1xuICoqIG1vZHVsZSBpZCA9IDQyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 43 */
/***/ function(module, exports) {

	eval("module.exports = \"data:application/vnd.ms-fontobject;base64,\"//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 44 */
/***/ function(module, exports) {

	eval("module.exports = \"data:application/vnd.ms-fontobject;base64,\"//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 45 */
/***/ function(module, exports) {

	eval("module.exports = \"data:application/octet-stream;base64,\"//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 46 */
/***/ function(module, exports) {

	eval("module.exports = \"data:application/font-woff;base64,\"//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = __webpack_require__.p + \"a3de2170e4e9df77161ea5d3f31b2668.ttf\";//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXYvZm9udHMvZm9udGF3ZXNvbWUtd2ViZm9udC50dGY/M2E1NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI0Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImEzZGUyMTcwZTRlOWRmNzcxNjFlYTVkM2YzMWIyNjY4LnR0ZlwiO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9kZXYvZm9udHMvZm9udGF3ZXNvbWUtd2ViZm9udC50dGY/dj00LjUuMFxuICoqIG1vZHVsZSBpZCA9IDQ3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = __webpack_require__.p + \"65e8f7dd6a65aa5812afa9050bfc720e.svg\";//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXYvZm9udHMvZm9udGF3ZXNvbWUtd2ViZm9udC5zdmc/NWMwMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI0OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjY1ZThmN2RkNmE2NWFhNTgxMmFmYTkwNTBiZmM3MjBlLnN2Z1wiO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9kZXYvZm9udHMvZm9udGF3ZXNvbWUtd2ViZm9udC5zdmc/dj00LjUuMFxuICoqIG1vZHVsZSBpZCA9IDQ4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(false) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n//@ sourceMappingURL=data:application/json;base64,");

/***/ }
/******/ ]);